/*
 * Copyright 2022 GlobalFoundries PDK Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 *      Single Port SRAM cell name : gf180mcu_fd_ip_sram__sram256x8m8wm1
 *      Technology                 : GF 180nm 5V Green
 *
 *      ---------
 *      Pin name:
 *      ---------
 *      Input Pins : CLK CEN GWEN WEN[7:0] A[7:0] D[7:0]
 *      Inout Pins:  VDD VSS
 *      Output Pins: Q[7:0]
 *
 *     Revision History: 1.0 (Initial Release: June 20, 2014)
 */

library(gf180mcu_fd_ip_sram__sram256x8m8wm1__ff_125C_3v60) {
        delay_model             : table_lookup;
        revision                : 1.0;
        date                    : "June 20, 2014";
        comment                 : "GF 180nm 5V Green";
        voltage_unit            : "1V";
        time_unit               : "1ns";
        current_unit            : "1mA";
        leakage_power_unit      : "1mW";
        nom_process             : 1;
        nom_temperature         : 125;
        nom_voltage             : 3.6;
        capacitive_load_unit    (1,pf);
        pulling_resistance_unit : "1kohm";

        /* additional header data */
        default_fanout_load            : 1;
        default_inout_pin_cap          : 0.045;
        default_input_pin_cap          : 0.045;
        default_output_pin_cap         : 0;
        default_max_transition         : 2.3877;
        default_cell_leakage_power     : 0;

         /* default attributes */
         slew_derate_from_library      : 1.000;
         slew_lower_threshold_pct_fall : 10.000;
         slew_upper_threshold_pct_fall : 90.000;
         slew_lower_threshold_pct_rise : 10.000;
         slew_upper_threshold_pct_rise : 90.000;
         input_threshold_pct_fall      : 50.000;
         input_threshold_pct_rise      : 50.000;
         output_threshold_pct_fall     : 50.000;
         output_threshold_pct_rise     : 50.000;
         default_leakage_power_density : 0;

        /* k-factors */
        k_process_recovery_fall        : 1;
        k_process_recovery_rise        : 1;
        k_process_cell_fall            : 1;
        k_process_cell_leakage_power   : 0;
        k_process_cell_rise            : 1;
        k_process_fall_transition      : 1;
        k_process_hold_fall            : 1;
        k_process_hold_rise            : 1;
        k_process_internal_power       : 0;
        k_process_min_pulse_width_high : 1;
        k_process_min_pulse_width_low  : 1;
        k_process_setup_fall           : 1;
        k_process_setup_rise           : 1;
        k_process_wire_cap             : 0;
        k_process_wire_res             : 0;
        k_process_pin_cap              : 0;
        k_process_rise_transition      : 1;
        k_temp_cell_fall               : 0.000;
        k_temp_cell_rise               : 0.000;
        k_temp_hold_fall               : 0.000;
        k_temp_hold_rise               : 0.000;
        k_temp_min_pulse_width_high    : 0.000;
        k_temp_min_pulse_width_low     : 0.000;
        k_temp_min_period              : 0.000;
        k_temp_rise_propagation        : 0.000;
        k_temp_fall_propagation        : 0.000;
        k_temp_rise_transition         : 0.000;
        k_temp_fall_transition         : 0.000;
        k_temp_recovery_fall           : 0.000;
        k_temp_recovery_rise           : 0.000;
        k_temp_setup_fall              : 0.000;
        k_temp_setup_rise              : 0.000;
        k_volt_cell_fall               : 0.000;
        k_volt_cell_rise               : 0.000;
        k_volt_hold_fall               : 0.000;
        k_volt_hold_rise               : 0.000;
        k_volt_min_pulse_width_high    : 0.000;
        k_volt_min_pulse_width_low     : 0.000;
        k_volt_min_period              : 0.000;
        k_volt_recovery_fall           : 0.000;
        k_volt_recovery_rise           : 0.000;
        k_volt_setup_fall              : 0.000;
        k_volt_setup_rise              : 0.000;
        k_volt_rise_propagation        : 0.000;
        k_volt_fall_propagation        : 0.000;
        k_volt_rise_transition         : 0.000;
        k_volt_fall_transition         : 0.000;

         voltage_map (VDD, 3.6);
         voltage_map (VSS, 0.00);
         operating_conditions(ff_3p6v_125C) {
                process       : 1;
                temperature   : 125;
                voltage       : 3.6;
                tree_type     : balanced_tree;
         }

         default_operating_conditions : ff_3p6v_125C;
         wire_load("Estimate") {
                resistance    : 1.44e-05;
                capacitance   : 0.00018;
                area          : 1.7;
                slope         : 500;
                fanout_length (1,500);
         }
         power_lut_template(power_template) {
            variable_1 : input_transition_time;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(q_delay_template) {
            variable_1 : input_net_transition;
            variable_2 : total_output_net_capacitance;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
                 index_2 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(q_slew_template) {
            variable_1 : total_output_net_capacitance;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(constraint_template) {
            variable_1 : related_pin_transition;
            variable_2 : constrained_pin_transition;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
                 index_2 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }

         library_features(report_delay_calculation);

         type (A_BUS) {
                base_type : array;
                data_type : bit;
                bit_width : 8;
                bit_from  : 7;
                bit_to    : 0;
                downto    : true;
         }
         type (Q_BUS) {
                base_type : array;
                data_type : bit;
                bit_width : 8;
                bit_from  : 7;
                bit_to    : 0;
                downto    : true;
         }
 cell(gf180mcu_fd_ip_sram__sram256x8m8wm1) {
        area             : 147212.4368;
        dont_use         : TRUE;
        dont_touch       : TRUE;
        interface_timing : TRUE;
        memory() {
                type          : ram;
                address_width : 8;
                word_width    : 8;
        }

                 bus(Q)   {
                  bus_type             : Q_BUS;
                  direction            : output;
                  max_capacitance      : 1.0626;
                  memory_read() {
                        address        : A;
                  }
                  timing() {
                          related_pin  : "CLK";
                          timing_type  : rising_edge;
                          timing_sense : non_unate;
       		  when : "((!CEN) & (GWEN))";
        	  sdf_cond : "CEN== 1'b0 && GWEN== 1'b1";
                          cell_rise(q_delay_template) {
			  index_1 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
			  index_2 ("0.0100, 0.0289, 0.0954, 0.2223, 0.4200, 0.6975, 1.0626");
                          values  ( \
                            "5.67528, 5.70048, 5.77056, 5.90496, 6.0786, 6.32916, 6.65904", \
                            "5.68032, 5.7006, 5.77668, 5.9016, 6.08316, 6.32976, 6.6594", \
                            "5.68344, 5.70948, 5.7768, 5.90436, 6.0864, 6.33276, 6.66456", \
                            "5.68476, 5.715, 5.787, 5.91288, 6.0918, 6.3426, 6.67524", \
                            "5.7042, 5.73, 5.79888, 5.92284, 6.10608, 6.35496, 6.68724", \
                            "5.69532, 5.71884, 5.79252, 5.91816, 6.10188, 6.35256, 6.67872", \
                            "5.66508, 5.6934, 5.76144, 5.88348, 6.06936, 6.31968, 6.65064" \
                          )
                          }
                          rise_transition(q_slew_template) {
                          index_1 ("0.0100, 0.0289, 0.0954, 0.2223, 0.4200, 0.6975, 1.0626");
                          values  ( \
  	                     "0.233736, 0.267564, 0.384744, 0.612996, 0.980628, 1.51752, 2.22252" \
                          )

                          }
                          cell_fall(q_delay_template) {
                          index_1 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          index_2 ("0.0100, 0.0289, 0.0954, 0.2223, 0.4200, 0.6975, 1.0626");
                          values  ( \
                            "5.86212, 5.8878, 5.95692, 6.07152, 6.20448, 6.37872, 6.59808", \
                            "5.86848, 5.88912, 5.96256, 6.06984, 6.21384, 6.38052, 6.5976", \
                            "5.87064, 5.89584, 5.96184, 6.07356, 6.21168, 6.38568, 6.60264", \
                            "5.87148, 5.90304, 5.97432, 6.08076, 6.2202, 6.39132, 6.6138", \
                            "5.89236, 5.91708, 5.9868, 6.08928, 6.23352, 6.4068, 6.62616", \
                            "5.8842, 5.90664, 5.97684, 6.08532, 6.22956, 6.4038, 6.61668", \
                            "5.8518, 5.87928, 5.94636, 6.05208, 6.19752, 6.37176, 6.58812" \
                          )
                          }
                          fall_transition(q_slew_template) {
                          index_1 ("0.0100, 0.0289, 0.0954, 0.2223, 0.4200, 0.6975, 1.0626");
                          values  ( \
                            "0.240372, 0.266004, 0.350172, 0.480024, 0.6765, 0.956628, 1.3128" \
                          )
                          }
                  }
          }
          pin(CLK)   {
                  direction            : input;
                  capacitance          : 0.28235;
                  clock                : true;
                  max_transition       : 2.3877;
                  min_pulse_width_high : 2.897535;
                  min_pulse_width_low  : 2.973765;
                  min_period           : 7.39779;

/* WRITE POWER */
             internal_power() {
              when : "!CEN & !GWEN & (!WEN[0] | !WEN[1] | !WEN[2] | !WEN[3] | !WEN[4] | !WEN[5] | !WEN[6] | !WEN[7])";
              rise_power(power_template) {
                index_1 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                values  ("478.296, 478.296, 478.296, 478.296, 478.296, 478.296, 478.296");
              }
              fall_power(power_template) {
                index_1 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                values  ("478.296, 478.296, 478.296, 478.296, 478.296, 478.296, 478.296");
              }
             }
/* DISABLED POWER */
             internal_power() {
              when : "CEN";
              rise_power(power_template) {
                index_1 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                values  ("0.00731952, 0.00731952, 0.00731952, 0.00731952, 0.00731952, 0.00731952, 0.00731952");
              }
              fall_power(power_template) {
                index_1 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                values  ("0.00731952, 0.00731952, 0.00731952, 0.00731952, 0.00731952, 0.00731952, 0.00731952");
              }
             }
/* READ POWER */
             internal_power() {
             when : "!CEN & GWEN";
             rise_power(power_template) {
                index_1 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                values  ("430.812, 430.812, 430.812, 430.812, 430.812, 430.812, 430.812");
              }
              fall_power(power_template) {
                index_1 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                values  ("430.812, 430.812, 430.812, 430.812, 430.812, 430.812, 430.812");
              }
             }
          }

          pg_pin(VDD) {
                  voltage_name     : VDD;
                  pg_type          : primary_power;
          }
          pg_pin(VSS) {
                  voltage_name     : VSS;
                  pg_type          : primary_ground;
          }
          pin(CEN)   {
                  direction            : input;
                  capacitance          : 0.0175659;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          index_2 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          values  ( \
                            "0.534072, 0.530849, 0.524018, 0.547019, 0.580734, 0.6094, 0.644083", \
                            "0.528836, 0.524007, 0.519321, 0.541178, 0.575278, 0.603933, 0.63866", \
                            "0.521136, 0.51513, 0.510235, 0.529364, 0.555753, 0.584463, 0.619168", \
                            "0.520872, 0.516109, 0.509982, 0.529925, 0.546227, 0.557678, 0.587686", \
                            "0.520685, 0.515922, 0.509762, 0.528924, 0.558855, 0.557436, 0.58586", \
                            "0.520597, 0.514602, 0.509652, 0.528836, 0.550066, 0.59169, 0.61347", \
                            "0.572088, 0.567567, 0.561858, 0.584177, 0.630773, 0.647207, 0.681912" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          index_2 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          values  ( \
                            "0.49511, 0.499433, 0.519673, 0.572946, 0.66308, 0.762872, 0.874368", \
                            "0.49489, 0.499224, 0.520135, 0.572737, 0.662904, 0.762553, 0.871948", \
                            "0.494615, 0.498872, 0.519838, 0.572286, 0.662607, 0.762586, 0.873873", \
                            "0.494362, 0.498597, 0.519596, 0.572198, 0.662376, 0.761981, 0.873609", \
                            "0.494186, 0.498542, 0.519354, 0.572, 0.662145, 0.762102, 0.871211", \
                            "0.494087, 0.49841, 0.519299, 0.571923, 0.662046, 0.761816, 0.871123", \
                            "0.507683, 0.509927, 0.531685, 0.582373, 0.67276, 0.77242, 0.885467" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          index_2 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          values  ( \
                            "1.4784, 1.4828, 1.48896, 1.46894, 1.45266, 1.44122, 1.42054", \
                            "1.48742, 1.4938, 1.49754, 1.47884, 1.46212, 1.45068, 1.42989", \
                            "1.50832, 1.51426, 1.51921, 1.50007, 1.48302, 1.47158, 1.45079", \
                            "1.55749, 1.56222, 1.56838, 1.54836, 1.53208, 1.52064, 1.49996", \
                            "1.61535, 1.62008, 1.62624, 1.6071, 1.57718, 1.57861, 1.55782", \
                            "1.66991, 1.67585, 1.6808, 1.66166, 1.64461, 1.62184, 1.61238", \
                            "1.69323, 1.69928, 1.70412, 1.68509, 1.65396, 1.65649, 1.6357" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          index_2 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          values  ( \
                            "1.50458, 1.50029, 1.48005, 1.4267, 1.33661, 1.23681, 1.1253", \
                            "1.51393, 1.50964, 1.48874, 1.43605, 1.34596, 1.24627, 1.13688", \
                            "1.53483, 1.53054, 1.50964, 1.45717, 1.36686, 1.26686, 1.15557", \
                            "1.584, 1.57971, 1.5587, 1.50612, 1.41592, 1.31637, 1.20473", \
                            "1.64186, 1.63746, 1.61667, 1.56398, 1.47389, 1.3739, 1.26481", \
                            "1.69642, 1.69213, 1.67123, 1.61854, 1.52845, 1.42868, 1.31934", \
                            "1.71974, 1.71556, 1.69466, 1.64307, 1.55188, 1.45222, 1.34057" \
                          )
                          }
                 }
          }
          pin(GWEN)   {
                  direction            : input;
                  capacitance          : 0.0480847;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          index_2 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          values  ( \
                            "0.740993, 0.746064, 0.763004, 0.809303, 0.873697, 0.93951, 0.995049", \
                            "0.736164, 0.741235, 0.760749, 0.803781, 0.869121, 0.934659, 0.990209", \
                            "0.717508, 0.722579, 0.739486, 0.785807, 0.850465, 0.915992, 0.972246", \
                            "0.672771, 0.679426, 0.695013, 0.741202, 0.805849, 0.87175, 0.926959", \
                            "0.624921, 0.629981, 0.646921, 0.693231, 0.757988, 0.823427, 0.878977", \
                            "0.585805, 0.590898, 0.607915, 0.654126, 0.718718, 0.785345, 0.840235", \
                            "0.56661, 0.57167, 0.588731, 0.634931, 0.699688, 0.765116, 0.82093" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          index_2 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          values  ( \
                            "0.811316, 0.815012, 0.848925, 0.913638, 1.02094, 1.15984, 1.32308", \
                            "0.806476, 0.810359, 0.843282, 0.908776, 1.01609, 1.15509, 1.31593", \
                            "0.78782, 0.794651, 0.824637, 0.890142, 0.996787, 1.1361, 1.29954", \
                            "0.743237, 0.750057, 0.780417, 0.845515, 0.952193, 1.09166, 1.25496", \
                            "0.695244, 0.699809, 0.732512, 0.797566, 0.904211, 1.04387, 1.20473", \
                            "0.656095, 0.660011, 0.693407, 0.758417, 0.865755, 1.00477, 1.16562", \
                            "0.636944, 0.643786, 0.674135, 0.739398, 0.84656, 0.985402, 1.14866" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          index_2 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          values  ( \
                            "1.03903, 1.03581, 1.02024, 0.979748, 0.949025, 0.932778, 0.935803", \
                            "1.03888, 1.03566, 1.01828, 0.979825, 0.948882, 0.932635, 0.93566", \
                            "1.04613, 1.04293, 1.02738, 0.987261, 0.956153, 0.939917, 0.942942", \
                            "1.05229, 1.04912, 1.03355, 0.993058, 0.962335, 0.946088, 0.949102", \
                            "1.05809, 1.05485, 1.03929, 0.9988, 0.968077, 0.951841, 0.954833", \
                            "1.05953, 1.05631, 1.04074, 1.00025, 0.969419, 0.951599, 0.956021", \
                            "1.02385, 1.02068, 1.00511, 0.964623, 0.9339, 0.917642, 0.920678" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          index_2 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          values  ( \
                            "0.577907, 0.573023, 0.541398, 0.476729, 0.372658, 0.242279, 0.07832", \
                            "0.577885, 0.572891, 0.540595, 0.475728, 0.372515, 0.241891, 0.079134", \
                            "0.584826, 0.579106, 0.547844, 0.483747, 0.378906, 0.249618, 0.0854084", \
                            "0.591063, 0.585277, 0.553509, 0.489148, 0.385044, 0.255431, 0.091586", \
                            "0.597245, 0.590788, 0.559229, 0.495759, 0.390808, 0.260907, 0.0982817", \
                            "0.610247, 0.606122, 0.574178, 0.507419, 0.39578, 0.262379, 0.107695", \
                            "0.663333, 0.656304, 0.627253, 0.560351, 0.448855, 0.313456, 0.158411" \
                          )
                          }
                 }
          }
          bus(WEN)   {
                  bus_type             : Q_BUS;
                  direction            : input;
                  capacitance          : 0.0075492;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          index_2 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          values  ( \
                            "0, 0, 0, 0, 0, 0, 0", \
                            "0, 0, 0, 0, 0, 0, 0", \
                            "0, 0, 0, 0, 0, 0, 0", \
                            "0, 0, 0, 0, 0, 0, 0", \
                            "0, 0, 0, 0, 0, 0, 0", \
                            "0, 0, 0, 0, 0, 0, 0", \
                            "0, 0, 0, 0, 0, 0, 0" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          index_2 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          values  ( \
                            "0.318527, 0.324236, 0.352979, 0.420189, 0.522555, 0.654797, 0.819885", \
                            "0.317702, 0.324544, 0.354277, 0.421828, 0.52536, 0.656029, 0.816849", \
                            "0.310387, 0.317911, 0.347094, 0.413347, 0.516582, 0.647812, 0.810183", \
                            "0.303941, 0.311663, 0.342397, 0.40766, 0.511753, 0.641883, 0.806322", \
                            "0.297824, 0.305712, 0.335588, 0.400598, 0.504097, 0.635052, 0.79827", \
                            "0.297692, 0.30331, 0.334048, 0.400829, 0.503426, 0.633611, 0.796631", \
                            "0.333773, 0.340549, 0.370392, 0.435523, 0.538131, 0.670802, 0.832997" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          index_2 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          values  ( \
                            "1.03903, 1.03581, 1.02024, 0.979748, 0.949025, 0.932778, 0.935803", \
                            "1.03888, 1.03566, 1.01828, 0.979825, 0.948882, 0.932635, 0.93566", \
                            "1.04613, 1.04293, 1.02738, 0.987261, 0.956153, 0.939917, 0.942942", \
                            "1.05229, 1.04912, 1.03355, 0.993058, 0.962335, 0.946088, 0.949102", \
                            "1.05809, 1.05485, 1.03929, 0.9988, 0.968077, 0.951841, 0.954833", \
                            "1.05953, 1.05631, 1.04074, 1.00025, 0.969419, 0.951599, 0.956021", \
                            "1.02385, 1.02068, 1.00511, 0.964623, 0.9339, 0.917642, 0.920678" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          index_2 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          values  ( \
                            "0.577907, 0.573023, 0.541398, 0.476729, 0.372658, 0.242279, 0.07832", \
                            "0.577885, 0.572891, 0.540595, 0.475728, 0.372515, 0.241891, 0.079134", \
                            "0.584826, 0.579106, 0.547844, 0.483747, 0.378906, 0.249618, 0.0854084", \
                            "0.591063, 0.585277, 0.553509, 0.489148, 0.385044, 0.255431, 0.091586", \
                            "0.597245, 0.590788, 0.559229, 0.495759, 0.390808, 0.260907, 0.0982817", \
                            "0.598862, 0.593538, 0.560747, 0.496243, 0.393162, 0.262379, 0.0998393", \
                            "0.562584, 0.556303, 0.524887, 0.461252, 0.357533, 0.226788, 0.063151" \
                          )
                          }
                 }
          }
          bus(A)   {
                  bus_type             : A_BUS;
                  direction            : input;
                  capacitance          : 0.0377769;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          index_2 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          values  ( \
                            "0.638748, 0.631191, 0.626901, 0.648989, 0.699193, 0.733007, 0.755249", \
                            "0.638803, 0.631675, 0.627616, 0.648593, 0.695948, 0.733876, 0.755227", \
                            "0.631708, 0.622908, 0.621346, 0.642048, 0.692384, 0.725989, 0.748825", \
                            "0.620994, 0.617837, 0.614801, 0.635921, 0.675884, 0.7161, 0.738749", \
                            "0.617188, 0.611732, 0.608465, 0.629761, 0.678051, 0.714791, 0.735581", \
                            "0.615736, 0.61138, 0.606386, 0.628936, 0.676522, 0.709236, 0.734272", \
                            "0.652894, 0.648956, 0.640871, 0.666655, 0.715066, 0.750607, 0.772783" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          index_2 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          values  ( \
                            "0.793012, 0.796884, 0.822745, 0.873444, 0.967769, 1.08231, 1.21824", \
                            "0.791901, 0.796796, 0.82192, 0.87472, 0.969034, 1.08265, 1.21685", \
                            "0.78595, 0.790416, 0.816959, 0.867757, 0.961048, 1.07549, 1.21109", \
                            "0.778426, 0.782925, 0.809567, 0.86141, 0.953898, 1.06798, 1.2027", \
                            "0.77319, 0.777766, 0.804375, 0.854909, 0.948794, 1.06368, 1.1991", \
                            "0.772904, 0.776721, 0.802065, 0.853479, 0.946638, 1.06134, 1.19768", \
                            "0.809094, 0.813043, 0.838409, 0.891088, 0.98384, 1.10014, 1.23411" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          index_2 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          values  ( \
                            "0.611677, 0.617969, 0.615241, 0.605913, 0.601007, 0.59664, 0.59356", \
                            "0.61688, 0.623172, 0.620455, 0.611127, 0.60621, 0.601843, 0.598763", \
                            "0.636031, 0.642323, 0.639804, 0.630278, 0.625361, 0.620994, 0.617914", \
                            "0.675961, 0.679283, 0.676764, 0.667238, 0.662299, 0.657954, 0.654874", \
                            "0.732974, 0.739266, 0.736758, 0.727221, 0.722282, 0.717937, 0.714857", \
                            "0.779933, 0.783266, 0.780538, 0.771221, 0.766304, 0.761937, 0.758857", \
                            "0.789492, 0.795784, 0.793056, 0.783739, 0.778822, 0.774455, 0.771375" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          index_2 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          values  ( \
                            "0.635338, 0.629948, 0.60555, 0.576422, 0.56584, 0.56881, 0.577478", \
                            "0.640541, 0.635195, 0.610753, 0.581614, 0.571043, 0.573023, 0.582692", \
                            "0.659681, 0.654302, 0.629893, 0.600776, 0.590205, 0.593175, 0.601832", \
                            "0.696641, 0.691295, 0.666864, 0.637736, 0.627165, 0.629057, 0.638792", \
                            "0.756635, 0.751256, 0.726847, 0.697719, 0.687137, 0.690107, 0.698786", \
                            "0.800635, 0.795245, 0.770847, 0.741719, 0.731137, 0.733117, 0.742786", \
                            "0.813153, 0.807763, 0.783365, 0.754237, 0.743655, 0.746625, 0.755304" \
                          )
                          }
                 }
          }
          bus(D)   {
                  bus_type             : Q_BUS;
                  memory_write() {
                          address      : A;
                          clocked_on   : "CLK";
                  }
                  direction            : input;
                  capacitance          : 0.0156578;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          index_2 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          values  ( \
                            "0.558657, 0.560472, 0.582472, 0.583286, 0.567941, 0.526273, 0.446963", \
                            "0.559603, 0.563079, 0.580657, 0.582043, 0.569382, 0.524282, 0.445797", \
                            "0.550539, 0.557051, 0.575476, 0.580668, 0.558811, 0.515746, 0.438691", \
                            "0.545919, 0.54846, 0.568535, 0.570163, 0.556094, 0.511478, 0.432421", \
                            "0.540837, 0.542289, 0.562012, 0.56188, 0.54967, 0.505538, 0.42889", \
                            "0.538824, 0.542311, 0.560791, 0.564652, 0.548834, 0.504889, 0.424468", \
                            "0.574574, 0.579546, 0.596299, 0.601425, 0.585244, 0.538736, 0.462803" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          index_2 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          values  ( \
                            "0.122307, 0.120814, 0.152153, 0.230342, 0.353078, 0.511291, 0.710215", \
                            "0.11998, 0.12067, 0.152016, 0.230063, 0.352946, 0.511159, 0.710204", \
                            "0.115668, 0.11422, 0.145541, 0.223742, 0.346467, 0.50446, 0.703648", \
                            "0.108255, 0.106769, 0.138101, 0.216346, 0.339031, 0.497189, 0.696179", \
                            "0.103587, 0.101567, 0.132902, 0.209846, 0.333828, 0.492503, 0.690921", \
                            "0.102253, 0.100768, 0.131993, 0.208975, 0.33297, 0.491634, 0.690107", \
                            "0.138514, 0.137018, 0.168347, 0.245006, 0.369281, 0.527945, 0.726396" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          index_2 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          values  ( \
                            "0.559955, 0.556237, 0.534655, 0.531432, 0.549032, 0.592163, 0.670219", \
                            "0.557128, 0.557403, 0.5368, 0.533016, 0.550297, 0.593846, 0.671044", \
                            "0.56452, 0.562166, 0.542465, 0.538945, 0.555236, 0.600215, 0.676709", \
                            "0.570999, 0.570867, 0.550451, 0.545776, 0.564113, 0.605506, 0.684233", \
                            "0.575718, 0.575454, 0.552948, 0.551188, 0.568326, 0.611028, 0.683991", \
                            "0.579117, 0.577698, 0.555049, 0.552134, 0.570537, 0.614075, 0.691273", \
                            "0.542399, 0.539825, 0.520113, 0.515427, 0.533819, 0.577368, 0.654566" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          index_2 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          values  ( \
                            "0.813835, 0.814363, 0.783871, 0.705177, 0.582868, 0.424864, 0.228526", \
                            "0.815023, 0.815265, 0.784751, 0.706057, 0.583759, 0.425755, 0.229412", \
                            "0.82038, 0.820919, 0.790416, 0.711733, 0.589424, 0.43142, 0.235078", \
                            "0.828586, 0.829114, 0.798622, 0.719928, 0.59763, 0.439626, 0.243283", \
                            "0.832843, 0.83336, 0.802868, 0.724185, 0.601876, 0.443872, 0.24753", \
                            "0.834966, 0.835472, 0.80498, 0.726297, 0.603988, 0.445984, 0.249642", \
                            "0.798248, 0.798765, 0.768273, 0.68959, 0.567281, 0.409277, 0.21294" \
                          )
                          }
                 }
        }
          cell_leakage_power : 0.00731952;
}
}
