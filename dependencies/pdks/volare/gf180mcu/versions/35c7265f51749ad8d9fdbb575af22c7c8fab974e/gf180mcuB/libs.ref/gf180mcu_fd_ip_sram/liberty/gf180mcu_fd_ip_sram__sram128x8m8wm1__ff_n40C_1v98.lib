/*
 * Copyright 2022 GlobalFoundries PDK Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 *      Single Port SRAM cell name : gf180mcu_fd_ip_sram__sram128x8m8wm1
 *      Technology                 : GF 180nm 5V Green
 *
 *      ---------
 *      Pin name:
 *      ---------
 *      Input Pins : CLK CEN GWEN WEN[7:0] A[6:0] D[7:0]
 *      Inout Pins:  VDD VSS
 *      Output Pins: Q[7:0]
 *
 *     Revision History: 1.0 (Initial Release: June 20, 2014)
 */

library(gf180mcu_fd_ip_sram__sram128x8m8wm1__ff_n40C_1v98) {
        delay_model             : table_lookup;
        revision                : 1.0;
        date                    : "June 20, 2014";
        comment                 : "GF 180nm 5V Green";
        voltage_unit            : "1V";
        time_unit               : "1ns";
        current_unit            : "1mA";
        leakage_power_unit      : "1mW";
        nom_process             : 1;
        nom_temperature         : -40;
        nom_voltage             : 1.98;
        capacitive_load_unit    (1,pf);
        pulling_resistance_unit : "1kohm";

        /* additional header data */
        default_fanout_load            : 1;
        default_inout_pin_cap          : 0.045;
        default_input_pin_cap          : 0.045;
        default_output_pin_cap         : 0;
        default_max_transition         : 2.315;
        default_cell_leakage_power     : 0;

         /* default attributes */
         slew_derate_from_library      : 1.000;
         slew_lower_threshold_pct_fall : 10.000;
         slew_upper_threshold_pct_fall : 90.000;
         slew_lower_threshold_pct_rise : 10.000;
         slew_upper_threshold_pct_rise : 90.000;
         input_threshold_pct_fall      : 50.000;
         input_threshold_pct_rise      : 50.000;
         output_threshold_pct_fall     : 50.000;
         output_threshold_pct_rise     : 50.000;
         default_leakage_power_density : 0;

        /* k-factors */
        k_process_recovery_fall        : 1;
        k_process_recovery_rise        : 1;
        k_process_cell_fall            : 1;
        k_process_cell_leakage_power   : 0;
        k_process_cell_rise            : 1;
        k_process_fall_transition      : 1;
        k_process_hold_fall            : 1;
        k_process_hold_rise            : 1;
        k_process_internal_power       : 0;
        k_process_min_pulse_width_high : 1;
        k_process_min_pulse_width_low  : 1;
        k_process_setup_fall           : 1;
        k_process_setup_rise           : 1;
        k_process_wire_cap             : 0;
        k_process_wire_res             : 0;
        k_process_pin_cap              : 0;
        k_process_rise_transition      : 1;
        k_temp_cell_fall               : 0.000;
        k_temp_cell_rise               : 0.000;
        k_temp_hold_fall               : 0.000;
        k_temp_hold_rise               : 0.000;
        k_temp_min_pulse_width_high    : 0.000;
        k_temp_min_pulse_width_low     : 0.000;
        k_temp_min_period              : 0.000;
        k_temp_rise_propagation        : 0.000;
        k_temp_fall_propagation        : 0.000;
        k_temp_rise_transition         : 0.000;
        k_temp_fall_transition         : 0.000;
        k_temp_recovery_fall           : 0.000;
        k_temp_recovery_rise           : 0.000;
        k_temp_setup_fall              : 0.000;
        k_temp_setup_rise              : 0.000;
        k_volt_cell_fall               : 0.000;
        k_volt_cell_rise               : 0.000;
        k_volt_hold_fall               : 0.000;
        k_volt_hold_rise               : 0.000;
        k_volt_min_pulse_width_high    : 0.000;
        k_volt_min_pulse_width_low     : 0.000;
        k_volt_min_period              : 0.000;
        k_volt_recovery_fall           : 0.000;
        k_volt_recovery_rise           : 0.000;
        k_volt_setup_fall              : 0.000;
        k_volt_setup_rise              : 0.000;
        k_volt_rise_propagation        : 0.000;
        k_volt_fall_propagation        : 0.000;
        k_volt_rise_transition         : 0.000;
        k_volt_fall_transition         : 0.000;

         voltage_map (VDD, 1.98);
         voltage_map (VSS, 0.00);
         operating_conditions(ff_1p98v_m40C) {
                process       : 1;
                temperature   : -40;
                voltage       : 1.98;
                tree_type     : balanced_tree;
         }

         default_operating_conditions : ff_1p98v_m40C;
         wire_load("Estimate") {
                resistance    : 1.44e-05;
                capacitance   : 0.00018;
                area          : 1.7;
                slope         : 500;
                fanout_length (1,500);
         }
         power_lut_template(power_template) {
            variable_1 : input_transition_time;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(q_delay_template) {
            variable_1 : input_net_transition;
            variable_2 : total_output_net_capacitance;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
                 index_2 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(q_slew_template) {
            variable_1 : total_output_net_capacitance;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(constraint_template) {
            variable_1 : related_pin_transition;
            variable_2 : constrained_pin_transition;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
                 index_2 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }

         library_features(report_delay_calculation);

         type (A_BUS) {
                base_type : array;
                data_type : bit;
                bit_width : 7;
                bit_from  : 6;
                bit_to    : 0;
                downto    : true;
         }
         type (Q_BUS) {
                base_type : array;
                data_type : bit;
                bit_width : 8;
                bit_from  : 7;
                bit_to    : 0;
                downto    : true;
         }
 cell(gf180mcu_fd_ip_sram__sram128x8m8wm1) {
        area             : 116118.5168;
        dont_use         : TRUE;
        dont_touch       : TRUE;
        interface_timing : TRUE;
        memory() {
                type          : ram;
                address_width : 7;
                word_width    : 8;
        }

                 bus(Q)   {
                  bus_type             : Q_BUS;
                  direction            : output;
                  max_capacitance      : 0.973;
                  memory_read() {
                        address        : A;
                  }
                  timing() {
                          related_pin  : "CLK";
                          timing_type  : rising_edge;
                          timing_sense : non_unate;
       		  when : "((!CEN) & (GWEN))";
        	  sdf_cond : "CEN== 1'b0 && GWEN== 1'b1";
                          cell_rise(q_delay_template) {
			  index_1 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
			  index_2 ("0.01, 0.02732, 0.08813, 0.2042, 0.3851, 0.639, 0.973");
                          values  ( \
                            "7.54308, 7.587, 7.70196, 7.87524, 8.13504, 8.46828, 8.92932", \
                            "7.575, 7.60644, 7.70592, 7.88148, 8.13324, 8.46996, 8.9226", \
                            "7.60536, 7.635, 7.73676, 7.91088, 8.1642, 8.50884, 8.96292", \
                            "7.64076, 7.67172, 7.78956, 7.95504, 8.20176, 8.54712, 9.0108", \
                            "7.69656, 7.72308, 7.83408, 8.00556, 8.27544, 8.6064, 9.07164", \
                            "7.75536, 7.7646, 7.887, 8.05392, 8.3178, 8.66112, 9.11472", \
                            "7.8006, 7.82916, 7.94964, 8.10864, 8.37276, 8.71104, 9.16596" \
                          )
                          }
                          rise_transition(q_slew_template) {
                          index_1 ("0.01, 0.02732, 0.08813, 0.2042, 0.3851, 0.639, 0.973");
                          values  ( \
  	                     "0.256272, 0.310944, 0.449688, 0.735024, 1.18511, 1.84944, 2.71164" \
                          )

                          }
                          cell_fall(q_delay_template) {
                          index_1 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                          index_2 ("0.01, 0.02732, 0.08813, 0.2042, 0.3851, 0.639, 0.973");
                          values  ( \
                            "7.91376, 7.95864, 8.0592, 8.18952, 8.3508, 8.53608, 8.77488", \
                            "7.94352, 7.97928, 8.05512, 8.19192, 8.35308, 8.53416, 8.77248", \
                            "7.97952, 8.00304, 8.09604, 8.22036, 8.38392, 8.56812, 8.8104", \
                            "8.01636, 8.04588, 8.14368, 8.27088, 8.42148, 8.61108, 8.85756", \
                            "8.07, 8.09436, 8.1894, 8.31744, 8.49132, 8.66844, 8.92068", \
                            "8.12904, 8.13432, 8.24208, 8.3628, 8.53752, 8.72748, 8.96652", \
                            "8.16756, 8.20068, 8.29548, 8.41896, 8.59344, 8.775, 9.00984" \
                          )
                          }
                          fall_transition(q_slew_template) {
                          index_1 ("0.01, 0.02732, 0.08813, 0.2042, 0.3851, 0.639, 0.973");
                          values  ( \
                            "0.25668, 0.287976, 0.388644, 0.518544, 0.725616, 1.01522, 1.38096" \
                          )
                          }
                  }
          }
          pin(CLK)   {
                  direction            : input;
                  capacitance          : 0.270753;
                  clock                : true;
                  max_transition       : 2.315;
                  min_pulse_width_high : 2.69679;
                  min_pulse_width_low  : 3.722595;
                  min_period           : 10.276665;

/* WRITE POWER */
             internal_power() {
              when : "!CEN & !GWEN & (!WEN[0] | !WEN[1] | !WEN[2] | !WEN[3] | !WEN[4] | !WEN[5] | !WEN[6] | !WEN[7])";
              rise_power(power_template) {
                index_1 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                values  ("115.503, 115.503, 115.503, 115.503, 115.503, 115.503, 115.503");
              }
              fall_power(power_template) {
                index_1 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                values  ("115.503, 115.503, 115.503, 115.503, 115.503, 115.503, 115.503");
              }
             }
/* DISABLED POWER */
             internal_power() {
              when : "CEN";
              rise_power(power_template) {
                index_1 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                values  ("3.1484e-05, 3.1484e-05, 3.1484e-05, 3.1484e-05, 3.1484e-05, 3.1484e-05, 3.1484e-05");
              }
              fall_power(power_template) {
                index_1 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                values  ("3.1484e-05, 3.1484e-05, 3.1484e-05, 3.1484e-05, 3.1484e-05, 3.1484e-05, 3.1484e-05");
              }
             }
/* READ POWER */
             internal_power() {
             when : "!CEN & GWEN";
             rise_power(power_template) {
                index_1 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                values  ("105.088, 105.088, 105.088, 105.088, 105.088, 105.088, 105.088");
              }
              fall_power(power_template) {
                index_1 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                values  ("105.088, 105.088, 105.088, 105.088, 105.088, 105.088, 105.088");
              }
             }
          }

          pg_pin(VDD) {
                  voltage_name     : VDD;
                  pg_type          : primary_power;
          }
          pg_pin(VSS) {
                  voltage_name     : VSS;
                  pg_type          : primary_ground;
          }
          pin(CEN)   {
                  direction            : input;
                  capacitance          : 0.0165507;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                          index_2 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                          values  ( \
                            "0.796818, 0.79101, 0.789811, 0.834999, 0.938773, 1.09287, 1.25063", \
                            "0.789085, 0.779053, 0.779944, 0.825132, 0.928917, 1.08301, 1.24078", \
                            "0.754468, 0.748671, 0.747472, 0.79266, 0.896445, 1.05053, 1.20831", \
                            "0.706651, 0.700909, 0.697345, 0.742588, 0.837661, 0.986084, 1.14417", \
                            "0.706464, 0.700348, 0.698962, 0.742412, 0.837485, 0.969078, 1.08177", \
                            "0.706321, 0.700205, 0.698808, 0.742258, 0.837331, 0.95546, 1.04848", \
                            "0.706431, 0.700689, 0.698929, 0.742368, 0.837441, 0.969045, 1.06726" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                          index_2 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                          values  ( \
                            "0.6534, 0.66242, 0.691977, 0.762696, 0.883399, 1.05633, 1.25964", \
                            "0.650441, 0.657844, 0.688974, 0.758527, 0.879747, 1.05307, 1.24977", \
                            "0.64999, 0.657426, 0.688655, 0.758186, 0.879395, 1.05273, 1.24909", \
                            "0.649759, 0.657129, 0.688314, 0.757845, 0.879065, 1.05239, 1.24876", \
                            "0.649616, 0.656909, 0.688138, 0.757669, 0.878878, 1.05222, 1.24859", \
                            "0.649385, 0.656832, 0.688017, 0.757515, 0.878713, 1.05206, 1.24843", \
                            "0.64944, 0.656942, 0.688083, 0.757636, 0.878845, 1.05218, 1.24854" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                          index_2 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                          values  ( \
                            "2.00013, 2.00585, 2.00761, 1.96416, 1.86912, 1.73756, 1.63933", \
                            "2.00299, 2.01036, 2.01212, 1.96867, 1.87363, 1.74207, 1.64384", \
                            "2.04325, 2.04897, 2.05073, 2.00728, 1.91213, 1.78057, 1.68234", \
                            "2.10595, 2.11167, 2.11519, 2.06998, 1.97494, 1.84327, 1.74504", \
                            "2.21122, 2.21738, 2.21881, 2.17536, 2.08021, 1.94865, 1.85042", \
                            "2.34729, 2.35334, 2.35477, 2.31132, 2.21628, 2.09814, 2.00508", \
                            "2.47214, 2.47786, 2.47962, 2.43617, 2.34113, 2.20957, 2.11134" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                          index_2 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                          values  ( \
                            "2.05711, 2.04963, 2.0185, 1.94898, 1.82776, 1.6544, 1.45805", \
                            "2.06151, 2.05414, 2.02301, 1.95349, 1.83227, 1.65891, 1.46256", \
                            "2.10023, 2.09275, 2.06151, 1.99199, 1.87077, 1.69741, 1.50106", \
                            "2.16282, 2.15545, 2.12421, 2.05469, 1.93347, 1.76022, 1.56376", \
                            "2.26809, 2.26083, 2.22959, 2.16007, 2.03885, 1.86549, 1.66914", \
                            "2.40416, 2.39679, 2.36555, 2.29603, 2.17481, 2.00156, 1.8051", \
                            "2.52912, 2.52164, 2.49051, 2.42099, 2.29977, 2.12641, 1.93006" \
                          )
                          }
                 }
          }
          pin(GWEN)   {
                  direction            : input;
                  capacitance          : 0.0442008;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                          index_2 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                          values  ( \
                            "1.00481, 1.01309, 1.04727, 1.10783, 1.20559, 1.31868, 1.43088", \
                            "0.990605, 1.0036, 1.03303, 1.0936, 1.19131, 1.30445, 1.41669", \
                            "0.965085, 0.973302, 1.00757, 1.06806, 1.16581, 1.2789, 1.39117", \
                            "0.909106, 0.917378, 0.951599, 1.01209, 1.10985, 1.22294, 1.33518", \
                            "0.818422, 0.830643, 0.860959, 0.921448, 1.01921, 1.1323, 1.24452", \
                            "0.73447, 0.746691, 0.777007, 0.837496, 0.935253, 1.04834, 1.16057", \
                            "0.67386, 0.682143, 0.716364, 0.776853, 0.87461, 0.987712, 1.09993" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                          index_2 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                          values  ( \
                            "1.18974, 1.19226, 1.23824, 1.31404, 1.44815, 1.62437, 1.83898", \
                            "1.1755, 1.17803, 1.22399, 1.2998, 1.43396, 1.61018, 1.82479", \
                            "1.14996, 1.1525, 1.19846, 1.27426, 1.40844, 1.58466, 1.79916", \
                            "1.09398, 1.09651, 1.14249, 1.21597, 1.35245, 1.52867, 1.74328", \
                            "1.00337, 1.00588, 1.05185, 1.12765, 1.2618, 1.43803, 1.65264", \
                            "0.919402, 0.921921, 0.967901, 1.0437, 1.17912, 1.3541, 1.5686", \
                            "0.858759, 0.861289, 0.907258, 0.983059, 1.1172, 1.29341, 1.50799" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                          index_2 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                          values  ( \
                            "1.31513, 1.30838, 1.27285, 1.21589, 1.13762, 1.07268, 1.01426", \
                            "1.32044, 1.31375, 1.27875, 1.22134, 1.14308, 1.08008, 1.0197", \
                            "1.34321, 1.3365, 1.30109, 1.24412, 1.16586, 1.09988, 1.04249", \
                            "1.37687, 1.37016, 1.33529, 1.27777, 1.19951, 1.13663, 1.07613", \
                            "1.42846, 1.41911, 1.38677, 1.32935, 1.25113, 1.18814, 1.12776", \
                            "1.48324, 1.47367, 1.44133, 1.38391, 1.30568, 1.24266, 1.1823", \
                            "1.52603, 1.51932, 1.48445, 1.42703, 1.34871, 1.28576, 1.22537" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                          index_2 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                          values  ( \
                            "0.683463, 0.666688, 0.629992, 0.547404, 0.420255, 0.248624, 0.048741", \
                            "0.688578, 0.673904, 0.637318, 0.553982, 0.427669, 0.254305, 0.056155", \
                            "0.711469, 0.695871, 0.65989, 0.575839, 0.449669, 0.277077, 0.078188", \
                            "0.744997, 0.730477, 0.693704, 0.611556, 0.484198, 0.31073, 0.112686", \
                            "0.796851, 0.781924, 0.745393, 0.662035, 0.535711, 0.362351, 0.164194", \
                            "0.851301, 0.836429, 0.802142, 0.716584, 0.590821, 0.416911, 0.218728", \
                            "0.894355, 0.879604, 0.84524, 0.759473, 0.633336, 0.459998, 0.261809" \
                          )
                          }
                 }
          }
          bus(WEN)   {
                  bus_type             : Q_BUS;
                  direction            : input;
                  capacitance          : 0.00700372;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                          index_2 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                          values  ( \
                            "0, 0, 0, 0, 0.035288, 0.105501, 0.160127", \
                            "0, 0, 0, 0, 0.031482, 0.101541, 0.156318", \
                            "0, 0, 0, 0, 0.007216, 0.077473, 0.132059", \
                            "0, 0, 0, 0, 0, 0.045639, 0.100309", \
                            "0, 0, 0, 0, 0, 0, 0.04653", \
                            "0, 0, 0, 0, 0, 0, 0", \
                            "0, 0, 0, 0, 0, 0, 0" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                          index_2 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                          values  ( \
                            "0.487839, 0.500093, 0.535975, 0.618464, 0.750013, 0.921624, 1.12217", \
                            "0.484902, 0.49632, 0.532092, 0.614196, 0.743787, 0.917851, 1.11667", \
                            "0.463001, 0.472186, 0.507727, 0.590425, 0.719587, 0.893398, 1.09351", \
                            "0.431244, 0.44033, 0.477532, 0.560725, 0.69014, 0.861817, 1.06174", \
                            "0.375155, 0.386584, 0.423236, 0.503932, 0.633787, 0.80806, 1.00716", \
                            "0.320663, 0.333454, 0.367983, 0.45078, 0.582582, 0.754886, 0.955042", \
                            "0.279202, 0.292586, 0.326542, 0.409629, 0.541167, 0.71313, 0.912989" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                          index_2 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                          values  ( \
                            "1.31725, 1.30838, 1.27829, 1.21756, 1.14237, 1.07268, 1.01426", \
                            "1.32275, 1.31375, 1.28376, 1.22302, 1.14784, 1.08008, 1.0197", \
                            "1.34475, 1.3365, 1.30577, 1.24502, 1.16985, 1.09988, 1.04249", \
                            "1.37929, 1.37016, 1.34035, 1.27962, 1.20443, 1.13663, 1.07613", \
                            "1.43077, 1.42164, 1.39183, 1.33111, 1.25588, 1.18814, 1.12776", \
                            "1.48533, 1.4762, 1.44639, 1.38556, 1.31043, 1.24266, 1.1823", \
                            "1.52834, 1.51932, 1.4894, 1.42868, 1.35344, 1.28576, 1.22537" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                          index_2 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                          values  ( \
                            "0.683463, 0.666688, 0.631576, 0.54802, 0.421905, 0.248624, 0.051271", \
                            "0.688578, 0.673904, 0.637318, 0.553982, 0.427669, 0.254305, 0.056155", \
                            "0.711469, 0.695871, 0.65989, 0.575839, 0.449669, 0.277077, 0.078188", \
                            "0.744997, 0.730477, 0.693704, 0.611556, 0.484198, 0.31073, 0.113322", \
                            "0.796851, 0.781924, 0.745393, 0.662035, 0.535711, 0.362351, 0.164779", \
                            "0.851301, 0.836429, 0.802142, 0.716584, 0.590821, 0.416911, 0.218728", \
                            "0.894355, 0.879604, 0.84524, 0.759473, 0.633336, 0.459998, 0.261809" \
                          )
                          }
                 }
          }
          bus(A)   {
                  bus_type             : A_BUS;
                  direction            : input;
                  capacitance          : 0.0363908;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                          index_2 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                          values  ( \
                            "0.960234, 0.953821, 0.967307, 0.998349, 1.1005, 1.24382, 1.41724", \
                            "0.955515, 0.9515, 0.964491, 0.992244, 1.09623, 1.24105, 1.40921", \
                            "0.932712, 0.937233, 0.939774, 0.966702, 1.07152, 1.21526, 1.38688", \
                            "0.900548, 0.906191, 0.907885, 0.933768, 1.04121, 1.18403, 1.35399", \
                            "0.847286, 0.853083, 0.856537, 0.882266, 0.988207, 1.1308, 1.30159", \
                            "0.790262, 0.802263, 0.799931, 0.829213, 0.933207, 1.07755, 1.25069", \
                            "0.74976, 0.754094, 0.755777, 0.785213, 0.887986, 1.03325, 1.20368" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                          index_2 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                          values  ( \
                            "1.18819, 1.18787, 1.21767, 1.28596, 1.41031, 1.5851, 1.80565", \
                            "1.17428, 1.18395, 1.21245, 1.28331, 1.40074, 1.58191, 1.80323", \
                            "1.14745, 1.16141, 1.19063, 1.25859, 1.37786, 1.55804, 1.77826", \
                            "1.12013, 1.12571, 1.15986, 1.22613, 1.34728, 1.52416, 1.74658", \
                            "1.0713, 1.07346, 1.10612, 1.17128, 1.29642, 1.47136, 1.68487", \
                            "1.02199, 1.01729, 1.05086, 1.11883, 1.24347, 1.41779, 1.63757", \
                            "0.974633, 0.974468, 1.00731, 1.07534, 1.1954, 1.3717, 1.59687" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                          index_2 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                          values  ( \
                            "0.764808, 0.768955, 0.751487, 0.717574, 0.651673, 0.55374, 0.440902", \
                            "0.77704, 0.781198, 0.763719, 0.729817, 0.663597, 0.565796, 0.453761", \
                            "0.801229, 0.79046, 0.787908, 0.753995, 0.687632, 0.590612, 0.477081", \
                            "0.866239, 0.85547, 0.852918, 0.819016, 0.75295, 0.655556, 0.542289", \
                            "0.95315, 0.942436, 0.939884, 0.905971, 0.839916, 0.742522, 0.629255", \
                            "1.07847, 1.06582, 1.06374, 1.02979, 0.963732, 0.866338, 0.752433", \
                            "1.18725, 1.17649, 1.17405, 1.1401, 1.07404, 0.976327, 0.862928" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                          index_2 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                          values  ( \
                            "0.840554, 0.835582, 0.803418, 0.743578, 0.679921, 0.608883, 0.539264", \
                            "0.855822, 0.847814, 0.815661, 0.755821, 0.692164, 0.621115, 0.551507", \
                            "0.879967, 0.871992, 0.839817, 0.779999, 0.716342, 0.645304, 0.575674", \
                            "0.944977, 0.937002, 0.904827, 0.845009, 0.781352, 0.710314, 0.640695", \
                            "1.03006, 1.02397, 0.991815, 0.931964, 0.868318, 0.79728, 0.730763", \
                            "1.15277, 1.14771, 1.11563, 1.05577, 0.992123, 0.921085, 0.851301", \
                            "1.26385, 1.25809, 1.22589, 1.16608, 1.10243, 1.03139, 0.962885" \
                          )
                          }
                 }
          }
          bus(D)   {
                  bus_type             : Q_BUS;
                  memory_write() {
                          address      : A;
                          clocked_on   : "CLK";
                  }
                  direction            : input;
                  capacitance          : 0.015364;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                          index_2 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                          values  ( \
                            "0.92752, 0.939598, 0.969848, 1.02186, 1.05302, 1.0672, 1.06403", \
                            "0.930149, 0.936595, 0.965987, 1.01957, 1.053, 1.05745, 1.05865", \
                            "0.902627, 0.91674, 0.942194, 0.989868, 1.02391, 1.04344, 1.0343", \
                            "0.868769, 0.884004, 0.910492, 0.963446, 0.992277, 1.00577, 1.00145", \
                            "0.818917, 0.829367, 0.856163, 0.906796, 0.941446, 0.953843, 0.95337", \
                            "0.761453, 0.773003, 0.803495, 0.85371, 0.886358, 0.899657, 0.894883", \
                            "0.71808, 0.732028, 0.763323, 0.804551, 0.841302, 0.864578, 0.851422" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                          index_2 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                          values  ( \
                            "0.184745, 0.182879, 0.217614, 0.295145, 0.418924, 0.597421, 0.79112", \
                            "0.182009, 0.180029, 0.214105, 0.292674, 0.416075, 0.590535, 0.788271", \
                            "0.156019, 0.155243, 0.189317, 0.267511, 0.391292, 0.565752, 0.763488", \
                            "0.123959, 0.123083, 0.157106, 0.235072, 0.359128, 0.533588, 0.731324", \
                            "0.071929, 0.071126, 0.105215, 0.183422, 0.307175, 0.485397, 0.679371", \
                            "0.018414, 0.0165, 0.050589, 0.128802, 0.252556, 0.42702, 0.624756", \
                            "0, 0, 0.006138, 0.084392, 0.208163, 0.382624, 0.58036" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                          index_2 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                          values  ( \
                            "0.557425, 0.547547, 0.517198, 0.467687, 0.434148, 0.421311, 0.417846", \
                            "0.556336, 0.541046, 0.516285, 0.466653, 0.429484, 0.420299, 0.416823", \
                            "0.584672, 0.569382, 0.544511, 0.495, 0.457809, 0.442354, 0.445181", \
                            "0.614823, 0.599533, 0.574673, 0.525151, 0.487971, 0.478797, 0.475321", \
                            "0.671924, 0.664763, 0.634469, 0.582692, 0.54835, 0.535898, 0.532422", \
                            "0.725406, 0.715979, 0.68519, 0.636097, 0.598499, 0.589325, 0.585849", \
                            "0.763884, 0.747615, 0.723723, 0.674663, 0.637054, 0.627737, 0.624481" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                          index_2 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                          values  ( \
                            "1.04844, 1.05091, 1.01498, 0.938817, 0.814946, 0.638341, 0.445467", \
                            "1.04731, 1.04985, 1.01396, 0.937794, 0.813923, 0.637318, 0.444444", \
                            "1.07572, 1.07818, 1.04229, 0.96613, 0.842259, 0.665654, 0.47278", \
                            "1.10589, 1.10835, 1.07246, 0.996292, 0.872421, 0.695816, 0.502942", \
                            "1.16302, 1.16545, 1.12956, 1.05339, 0.929522, 0.752917, 0.560043", \
                            "1.2165, 1.21897, 1.18307, 1.10691, 0.983037, 0.806432, 0.613558", \
                            "1.25488, 1.25744, 1.22152, 1.14535, 1.02148, 0.844877, 0.652003" \
                          )
                          }
                 }
        }
          cell_leakage_power : 3.148398e-05;
}
}
