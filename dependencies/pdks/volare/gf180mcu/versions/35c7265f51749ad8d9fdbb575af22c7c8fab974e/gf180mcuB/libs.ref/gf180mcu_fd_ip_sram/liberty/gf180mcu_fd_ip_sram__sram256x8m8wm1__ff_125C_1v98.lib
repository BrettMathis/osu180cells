/*
 * Copyright 2022 GlobalFoundries PDK Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 *      Single Port SRAM cell name : gf180mcu_fd_ip_sram__sram256x8m8wm1
 *      Technology                 : GF 180nm 5V Green
 *
 *      ---------
 *      Pin name:
 *      ---------
 *      Input Pins : CLK CEN GWEN WEN[7:0] A[7:0] D[7:0]
 *      Inout Pins:  VDD VSS
 *      Output Pins: Q[7:0]
 *
 *     Revision History: 1.0 (Initial Release: June 20, 2014)
 */

library(gf180mcu_fd_ip_sram__sram256x8m8wm1__ff_125C_1v98) {
        delay_model             : table_lookup;
        revision                : 1.0;
        date                    : "June 20, 2014";
        comment                 : "GF 180nm 5V Green";
        voltage_unit            : "1V";
        time_unit               : "1ns";
        current_unit            : "1mA";
        leakage_power_unit      : "1mW";
        nom_process             : 1;
        nom_temperature         : 125;
        nom_voltage             : 1.98;
        capacitive_load_unit    (1,pf);
        pulling_resistance_unit : "1kohm";

        /* additional header data */
        default_fanout_load            : 1;
        default_inout_pin_cap          : 0.045;
        default_input_pin_cap          : 0.045;
        default_output_pin_cap         : 0;
        default_max_transition         : 3.235;
        default_cell_leakage_power     : 0;

         /* default attributes */
         slew_derate_from_library      : 1.000;
         slew_lower_threshold_pct_fall : 10.000;
         slew_upper_threshold_pct_fall : 90.000;
         slew_lower_threshold_pct_rise : 10.000;
         slew_upper_threshold_pct_rise : 90.000;
         input_threshold_pct_fall      : 50.000;
         input_threshold_pct_rise      : 50.000;
         output_threshold_pct_fall     : 50.000;
         output_threshold_pct_rise     : 50.000;
         default_leakage_power_density : 0;

        /* k-factors */
        k_process_recovery_fall        : 1;
        k_process_recovery_rise        : 1;
        k_process_cell_fall            : 1;
        k_process_cell_leakage_power   : 0;
        k_process_cell_rise            : 1;
        k_process_fall_transition      : 1;
        k_process_hold_fall            : 1;
        k_process_hold_rise            : 1;
        k_process_internal_power       : 0;
        k_process_min_pulse_width_high : 1;
        k_process_min_pulse_width_low  : 1;
        k_process_setup_fall           : 1;
        k_process_setup_rise           : 1;
        k_process_wire_cap             : 0;
        k_process_wire_res             : 0;
        k_process_pin_cap              : 0;
        k_process_rise_transition      : 1;
        k_temp_cell_fall               : 0.000;
        k_temp_cell_rise               : 0.000;
        k_temp_hold_fall               : 0.000;
        k_temp_hold_rise               : 0.000;
        k_temp_min_pulse_width_high    : 0.000;
        k_temp_min_pulse_width_low     : 0.000;
        k_temp_min_period              : 0.000;
        k_temp_rise_propagation        : 0.000;
        k_temp_fall_propagation        : 0.000;
        k_temp_rise_transition         : 0.000;
        k_temp_fall_transition         : 0.000;
        k_temp_recovery_fall           : 0.000;
        k_temp_recovery_rise           : 0.000;
        k_temp_setup_fall              : 0.000;
        k_temp_setup_rise              : 0.000;
        k_volt_cell_fall               : 0.000;
        k_volt_cell_rise               : 0.000;
        k_volt_hold_fall               : 0.000;
        k_volt_hold_rise               : 0.000;
        k_volt_min_pulse_width_high    : 0.000;
        k_volt_min_pulse_width_low     : 0.000;
        k_volt_min_period              : 0.000;
        k_volt_recovery_fall           : 0.000;
        k_volt_recovery_rise           : 0.000;
        k_volt_setup_fall              : 0.000;
        k_volt_setup_rise              : 0.000;
        k_volt_rise_propagation        : 0.000;
        k_volt_fall_propagation        : 0.000;
        k_volt_rise_transition         : 0.000;
        k_volt_fall_transition         : 0.000;

         voltage_map (VDD, 1.98);
         voltage_map (VSS, 0.00);
         operating_conditions(ff_1p98v_125C) {
                process       : 1;
                temperature   : 125;
                voltage       : 1.98;
                tree_type     : balanced_tree;
         }

         default_operating_conditions : ff_1p98v_125C;
         wire_load("Estimate") {
                resistance    : 1.44e-05;
                capacitance   : 0.00018;
                area          : 1.7;
                slope         : 500;
                fanout_length (1,500);
         }
         power_lut_template(power_template) {
            variable_1 : input_transition_time;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(q_delay_template) {
            variable_1 : input_net_transition;
            variable_2 : total_output_net_capacitance;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
                 index_2 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(q_slew_template) {
            variable_1 : total_output_net_capacitance;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(constraint_template) {
            variable_1 : related_pin_transition;
            variable_2 : constrained_pin_transition;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
                 index_2 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }

         library_features(report_delay_calculation);

         type (A_BUS) {
                base_type : array;
                data_type : bit;
                bit_width : 8;
                bit_from  : 7;
                bit_to    : 0;
                downto    : true;
         }
         type (Q_BUS) {
                base_type : array;
                data_type : bit;
                bit_width : 8;
                bit_from  : 7;
                bit_to    : 0;
                downto    : true;
         }
 cell(gf180mcu_fd_ip_sram__sram256x8m8wm1) {
        area             : 147212.4368;
        dont_use         : TRUE;
        dont_touch       : TRUE;
        interface_timing : TRUE;
        memory() {
                type          : ram;
                address_width : 8;
                word_width    : 8;
        }

                 bus(Q)   {
                  bus_type             : Q_BUS;
                  direction            : output;
                  max_capacitance      : 1.018;
                  memory_read() {
                        address        : A;
                  }
                  timing() {
                          related_pin  : "CLK";
                          timing_type  : rising_edge;
                          timing_sense : non_unate;
       		  when : "((!CEN) & (GWEN))";
        	  sdf_cond : "CEN== 1'b0 && GWEN== 1'b1";
                          cell_rise(q_delay_template) {
			  index_1 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
			  index_2 ("0.01, 0.02813, 0.09177, 0.2133, 0.4026, 0.6683, 1.018");
                          values  ( \
                            "10.61376, 10.68732, 10.8108, 11.06184, 11.40036, 11.87364, 12.5016", \
                            "10.6434, 10.69032, 10.82532, 11.06532, 11.39796, 11.88948, 12.5112", \
                            "10.66284, 10.70472, 10.8576, 11.09088, 11.43828, 11.90532, 12.5352", \
                            "10.69536, 10.74816, 10.88376, 11.1234, 11.46948, 11.937, 12.5616", \
                            "10.74948, 10.80204, 10.9398, 11.1846, 11.52288, 12.0024, 12.618", \
                            "10.79544, 10.83948, 10.98216, 11.22432, 11.5644, 12.0468, 12.66", \
                            "10.8084, 10.85748, 10.99896, 11.23968, 11.58672, 12.0576, 12.678" \
                          )
                          }
                          rise_transition(q_slew_template) {
                          index_1 ("0.01, 0.02813, 0.09177, 0.2133, 0.4026, 0.6683, 1.018");
                          values  ( \
  	                     "0.405492, 0.470904, 0.708468, 1.11352, 1.76556, 2.74272, 4.00344" \
                          )

                          }
                          cell_fall(q_delay_template) {
                          index_1 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          index_2 ("0.01, 0.02813, 0.09177, 0.2133, 0.4026, 0.6683, 1.018");
                          values  ( \
                            "11.09508, 11.1624, 11.25648, 11.44968, 11.68476, 11.9658, 12.312", \
                            "11.12112, 11.16528, 11.27748, 11.45784, 11.68104, 11.98236, 12.3252", \
                            "11.1342, 11.17476, 11.304, 11.4906, 11.71932, 11.99088, 12.3444", \
                            "11.18052, 11.21772, 11.3298, 11.52288, 11.75652, 12.0336, 12.384", \
                            "11.22444, 11.26872, 11.37936, 11.57484, 11.80608, 12.09, 12.4332", \
                            "11.27388, 11.30076, 11.42724, 11.61732, 11.84664, 12.1392, 12.4656", \
                            "11.2818, 11.32728, 11.44452, 11.62968, 11.86224, 12.1488, 12.4824" \
                          )
                          }
                          fall_transition(q_slew_template) {
                          index_1 ("0.01, 0.02813, 0.09177, 0.2133, 0.4026, 0.6683, 1.018");
                          values  ( \
                            "0.39522, 0.440472, 0.581952, 0.803652, 1.11091, 1.5408, 2.06892" \
                          )
                          }
                  }
          }
          pin(CLK)   {
                  direction            : input;
                  capacitance          : 0.275464;
                  clock                : true;
                  max_transition       : 3.235;
                  min_pulse_width_high : 3.831945;
                  min_pulse_width_low  : 5.350155;
                  min_period           : 14.439045;

/* WRITE POWER */
             internal_power() {
              when : "!CEN & !GWEN & (!WEN[0] | !WEN[1] | !WEN[2] | !WEN[3] | !WEN[4] | !WEN[5] | !WEN[6] | !WEN[7])";
              rise_power(power_template) {
                index_1 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                values  ("130.858, 130.858, 130.858, 130.858, 130.858, 130.858, 130.858");
              }
              fall_power(power_template) {
                index_1 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                values  ("130.858, 130.858, 130.858, 130.858, 130.858, 130.858, 130.858");
              }
             }
/* DISABLED POWER */
             internal_power() {
              when : "CEN";
              rise_power(power_template) {
                index_1 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                values  ("0.00236273, 0.00236273, 0.00236273, 0.00236273, 0.00236273, 0.00236273, 0.00236273");
              }
              fall_power(power_template) {
                index_1 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                values  ("0.00236273, 0.00236273, 0.00236273, 0.00236273, 0.00236273, 0.00236273, 0.00236273");
              }
             }
/* READ POWER */
             internal_power() {
             when : "!CEN & GWEN";
             rise_power(power_template) {
                index_1 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                values  ("119.087, 119.087, 119.087, 119.087, 119.087, 119.087, 119.087");
              }
              fall_power(power_template) {
                index_1 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                values  ("119.087, 119.087, 119.087, 119.087, 119.087, 119.087, 119.087");
              }
             }
          }

          pg_pin(VDD) {
                  voltage_name     : VDD;
                  pg_type          : primary_power;
          }
          pg_pin(VSS) {
                  voltage_name     : VSS;
                  pg_type          : primary_ground;
          }
          pin(CEN)   {
                  direction            : input;
                  capacitance          : 0.0177209;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          index_2 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          values  ( \
                            "0.97009, 0.960509, 0.955504, 1.00225, 1.10178, 1.23411, 1.32462", \
                            "0.956582, 0.946693, 0.94292, 0.98879, 1.08491, 1.22065, 1.31094", \
                            "0.928818, 0.919248, 0.915156, 0.961015, 1.05712, 1.19286, 1.28324", \
                            "0.85008, 0.839806, 0.840037, 0.878581, 0.974699, 1.11044, 1.20871", \
                            "0.849893, 0.839619, 0.839828, 0.878075, 0.96833, 1.04913, 1.1502", \
                            "0.849915, 0.839289, 0.838134, 0.878009, 0.970068, 1.05411, 1.12254", \
                            "0.846802, 0.838992, 0.839542, 0.877701, 0.972972, 1.05379, 1.13098" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          index_2 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          values  ( \
                            "0.791197, 0.800558, 0.839113, 0.938674, 1.07594, 1.2981, 1.51965", \
                            "0.786445, 0.794442, 0.835428, 0.92961, 1.07054, 1.29472, 1.50678", \
                            "0.786016, 0.79453, 0.833965, 0.928873, 1.07031, 1.29447, 1.50238", \
                            "0.785631, 0.794244, 0.833624, 0.928543, 1.06997, 1.29411, 1.50612", \
                            "0.785037, 0.794167, 0.833437, 0.924506, 1.06977, 1.29392, 1.50172", \
                            "0.785488, 0.794288, 0.833448, 0.924528, 1.06982, 1.29399, 1.50601", \
                            "0.78474, 0.793683, 0.83314, 0.924198, 1.06943, 1.29364, 1.50568" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          index_2 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          values  ( \
                            "2.74505, 2.75528, 2.75605, 2.71689, 2.62493, 2.54089, 2.4992", \
                            "2.75539, 2.76595, 2.7654, 2.72723, 2.63516, 2.55112, 2.51801", \
                            "2.78542, 2.79576, 2.79554, 2.75737, 2.6653, 2.58126, 2.54804", \
                            "2.87969, 2.88992, 2.8897, 2.85153, 2.75946, 2.67542, 2.62735", \
                            "3.00025, 3.01059, 3.01037, 2.97209, 2.88189, 2.80104, 2.75242", \
                            "3.14611, 3.15667, 3.15788, 3.11795, 3.02588, 2.94184, 2.90862", \
                            "3.289, 3.29681, 3.29626, 3.25809, 3.16283, 3.08209, 3.04876" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          index_2 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          values  ( \
                            "2.80984, 2.80071, 2.76144, 2.66607, 2.52516, 2.30098, 2.08901", \
                            "2.81963, 2.8116, 2.77057, 2.67641, 2.5355, 2.31132, 2.09924", \
                            "2.84988, 2.8413, 2.80192, 2.70699, 2.56553, 2.34135, 2.13356", \
                            "2.94415, 2.93546, 2.89608, 2.80115, 2.6598, 2.43562, 2.22354", \
                            "3.06515, 3.05602, 3.01675, 2.92567, 2.78036, 2.55629, 2.34839", \
                            "3.21046, 3.20166, 3.1625, 3.07142, 2.92622, 2.70204, 2.48996", \
                            "3.35104, 3.34213, 3.30264, 3.21167, 3.06636, 2.84218, 2.63021" \
                          )
                          }
                 }
          }
          pin(GWEN)   {
                  direction            : input;
                  capacitance          : 0.0457334;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          index_2 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          values  ( \
                            "1.30375, 1.31032, 1.34519, 1.41933, 1.53637, 1.66166, 1.78783", \
                            "1.29256, 1.29832, 1.33441, 1.40723, 1.52383, 1.64967, 1.77672", \
                            "1.26461, 1.27144, 1.3075, 1.38039, 1.4971, 1.62272, 1.74988", \
                            "1.17909, 1.18547, 1.22168, 1.29463, 1.4113, 1.53714, 1.66331", \
                            "1.07804, 1.08486, 1.12088, 1.19285, 1.31105, 1.43671, 1.55716", \
                            "0.993146, 1.0003, 1.035, 1.10926, 1.22594, 1.35168, 1.47873", \
                            "0.934725, 0.943976, 0.980144, 1.05295, 1.16894, 1.29532, 1.42241" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          index_2 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          values  ( \
                            "1.5312, 1.54297, 1.5917, 1.68047, 1.84965, 2.0757, 2.35532", \
                            "1.51921, 1.53131, 1.57916, 1.66782, 1.83766, 2.0636, 2.34322", \
                            "1.49237, 1.50414, 1.55133, 1.64538, 1.81082, 2.03445, 2.31693", \
                            "1.40822, 1.41845, 1.46553, 1.55969, 1.72502, 1.95096, 2.23069", \
                            "1.30569, 1.3176, 1.36477, 1.46234, 1.62426, 1.8502, 2.13026", \
                            "1.22119, 1.23296, 1.28168, 1.37775, 1.53967, 1.76561, 2.04534", \
                            "1.16427, 1.17663, 1.22384, 1.32143, 1.48335, 1.70698, 1.98891" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          index_2 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          values  ( \
                            "1.79223, 1.78431, 1.74944, 1.67398, 1.59357, 1.5268, 1.48522", \
                            "1.79256, 1.78398, 1.7457, 1.67442, 1.59544, 1.52724, 1.48401", \
                            "1.80884, 1.80015, 1.76187, 1.69048, 1.61161, 1.54341, 1.50018", \
                            "1.83348, 1.8216, 1.78662, 1.71523, 1.63625, 1.56805, 1.52647", \
                            "1.87286, 1.86417, 1.82589, 1.7556, 1.66936, 1.60611, 1.56706", \
                            "1.92632, 1.91763, 1.88298, 1.80807, 1.72909, 1.66089, 1.61766", \
                            "1.92588, 1.9173, 1.87902, 1.80763, 1.72326, 1.66045, 1.61733" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          index_2 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          values  ( \
                            "0.905773, 0.883201, 0.836319, 0.743281, 0.582263, 0.365024, 0.114337", \
                            "0.906653, 0.88737, 0.836693, 0.751091, 0.581119, 0.365409, 0.114763", \
                            "0.922625, 0.899888, 0.855976, 0.757636, 0.598708, 0.384461, 0.129958", \
                            "0.934934, 0.925694, 0.880715, 0.782254, 0.623414, 0.406285, 0.155643", \
                            "0.98648, 0.963996, 0.919963, 0.818389, 0.663014, 0.44594, 0.19391", \
                            "1.04022, 1.01758, 0.970508, 0.87164, 0.716243, 0.49907, 0.248181", \
                            "1.0306, 1.01713, 0.973126, 0.871486, 0.716001, 0.50215, 0.248067" \
                          )
                          }
                 }
          }
          bus(WEN)   {
                  bus_type             : Q_BUS;
                  direction            : input;
                  capacitance          : 0.00723483;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          index_2 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          values  ( \
                            "0, 0, 0, 0, 0, 0, 0", \
                            "0, 0, 0, 0, 0, 0, 0", \
                            "0, 0, 0, 0, 0, 0, 0", \
                            "0, 0, 0, 0, 0, 0, 0", \
                            "0, 0, 0, 0, 0, 0, 0", \
                            "0, 0, 0, 0, 0, 0, 0", \
                            "0, 0, 0, 0, 0, 0, 0" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          index_2 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          values  ( \
                            "0.526922, 0.546821, 0.591987, 0.683012, 0.845856, 1.06323, 1.31597", \
                            "0.523369, 0.53636, 0.586036, 0.678106, 0.843722, 1.06, 1.31259", \
                            "0.511236, 0.529815, 0.57464, 0.672529, 0.829092, 1.04316, 1.2971", \
                            "0.490897, 0.500269, 0.547943, 0.644765, 0.802395, 1.02116, 1.2735", \
                            "0.445038, 0.465047, 0.510136, 0.609906, 0.763829, 0.98252, 1.23638", \
                            "0.390885, 0.411136, 0.456654, 0.557909, 0.710732, 0.927883, 1.18227", \
                            "0.391633, 0.411774, 0.454707, 0.553322, 0.710633, 0.924737, 1.18076" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          index_2 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          values  ( \
                            "1.79223, 1.78431, 1.74944, 1.67398, 1.59357, 1.5268, 1.48522", \
                            "1.79256, 1.78398, 1.7457, 1.67442, 1.59544, 1.52724, 1.4883", \
                            "1.80884, 1.80015, 1.76187, 1.69048, 1.61161, 1.54341, 1.50447", \
                            "1.83348, 1.8216, 1.78662, 1.71523, 1.63625, 1.56805, 1.52922", \
                            "1.87286, 1.86417, 1.82589, 1.7556, 1.66936, 1.60611, 1.5686", \
                            "1.92632, 1.91763, 1.88298, 1.80807, 1.72909, 1.66089, 1.62162", \
                            "1.92588, 1.9173, 1.87902, 1.80763, 1.72326, 1.66045, 1.62162" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          index_2 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          values  ( \
                            "0.905773, 0.883201, 0.836319, 0.743281, 0.582263, 0.365024, 0.114337", \
                            "0.906653, 0.88737, 0.836693, 0.751091, 0.581702, 0.365409, 0.114763", \
                            "0.922625, 0.899888, 0.855976, 0.757636, 0.598708, 0.384461, 0.129958", \
                            "0.934934, 0.925694, 0.880715, 0.782254, 0.623414, 0.406285, 0.155643", \
                            "0.98648, 0.963996, 0.919963, 0.818389, 0.663014, 0.44594, 0.19391", \
                            "1.04022, 1.01758, 0.970508, 0.87164, 0.716243, 0.49907, 0.248181", \
                            "1.0306, 1.01713, 0.973126, 0.871486, 0.716001, 0.50215, 0.248067" \
                          )
                          }
                 }
          }
          bus(A)   {
                  bus_type             : A_BUS;
                  direction            : input;
                  capacitance          : 0.0379319;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          index_2 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          values  ( \
                            "1.13468, 1.12149, 1.12642, 1.16681, 1.27734, 1.39744, 1.49567", \
                            "1.12746, 1.12201, 1.11972, 1.16169, 1.27151, 1.38435, 1.49072", \
                            "1.11606, 1.10792, 1.10838, 1.14939, 1.25784, 1.36785, 1.46839", \
                            "1.09152, 1.0753, 1.08244, 1.12824, 1.23347, 1.34651, 1.44705", \
                            "1.05611, 1.0491, 1.04663, 1.08906, 1.19105, 1.31898, 1.4344", \
                            "1.001, 0.994565, 0.993938, 1.03752, 1.13823, 1.25731, 1.36279", \
                            "1.00566, 0.997755, 0.994125, 1.04042, 1.14331, 1.26679, 1.36499" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          index_2 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          values  ( \
                            "1.34497, 1.35223, 1.39227, 1.48709, 1.63691, 1.84569, 2.08208", \
                            "1.32341, 1.34541, 1.38677, 1.48115, 1.63801, 1.84294, 2.08329", \
                            "1.31768, 1.33034, 1.37555, 1.47037, 1.62107, 1.83799, 2.07438", \
                            "1.30014, 1.30428, 1.34717, 1.44067, 1.59687, 1.80389, 2.04633", \
                            "1.26304, 1.27673, 1.31504, 1.40833, 1.56211, 1.76671, 2.01091", \
                            "1.20965, 1.21813, 1.25771, 1.35476, 1.50865, 1.71545, 1.95459", \
                            "1.21497, 1.21617, 1.26157, 1.35619, 1.50755, 1.71435, 1.94843" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          index_2 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          values  ( \
                            "0.951852, 0.960333, 0.95898, 0.904739, 0.850894, 0.805992, 0.775522", \
                            "0.95788, 0.963732, 0.962808, 0.908138, 0.854293, 0.809391, 0.778921", \
                            "0.991749, 1.00023, 0.999317, 0.944636, 0.890791, 0.845889, 0.815419", \
                            "1.07293, 1.0814, 1.08049, 1.02581, 0.97196, 0.927058, 0.887777", \
                            "1.18242, 1.19087, 1.18999, 1.13529, 1.07779, 1.03869, 0.997029", \
                            "1.30996, 1.31843, 1.31707, 1.26283, 1.20899, 1.16409, 1.13362", \
                            "1.40844, 1.41691, 1.41603, 1.36136, 1.30747, 1.26497, 1.23211" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          index_2 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          values  ( \
                            "1.03141, 1.0222, 0.978087, 0.895114, 0.820611, 0.753434, 0.706761", \
                            "1.03688, 1.02556, 0.981486, 0.898502, 0.824021, 0.756833, 0.71016", \
                            "1.07343, 1.06209, 1.01798, 0.935, 0.86053, 0.79332, 0.746658", \
                            "1.1546, 1.14323, 1.09915, 1.01618, 0.941699, 0.874489, 0.827827", \
                            "1.26196, 1.25272, 1.20865, 1.12566, 1.05118, 0.983983, 0.937321", \
                            "1.38952, 1.38028, 1.33617, 1.25321, 1.17873, 1.11154, 1.06487", \
                            "1.48797, 1.47873, 1.43462, 1.35168, 1.27721, 1.21, 1.16335" \
                          )
                          }
                 }
          }
          bus(D)   {
                  bus_type             : Q_BUS;
                  memory_write() {
                          address      : A;
                          clocked_on   : "CLK";
                  }
                  direction            : input;
                  capacitance          : 0.0154863;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          index_2 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          values  ( \
                            "1.02852, 1.03962, 1.07066, 1.10771, 1.13817, 1.14375, 1.08743", \
                            "1.02715, 1.03419, 1.0723, 1.11652, 1.13795, 1.13862, 1.06823", \
                            "1.01242, 1.02433, 1.05321, 1.10365, 1.12479, 1.12521, 1.06511", \
                            "0.987063, 0.998184, 1.0344, 1.07469, 1.09798, 1.09831, 1.04232", \
                            "0.955042, 0.963754, 0.998217, 1.04082, 1.06147, 1.05292, 1.00313", \
                            "0.892672, 0.911449, 0.934505, 0.991111, 1.00818, 1.01052, 0.939565", \
                            "0.904079, 0.910239, 0.946638, 0.990913, 1.00662, 1.01451, 0.94204" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          index_2 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          values  ( \
                            "0.106766, 0.104643, 0.138697, 0.243309, 0.412709, 0.637362, 0.894344", \
                            "0.10153, 0.099638, 0.133673, 0.238282, 0.408199, 0.631972, 0.889317", \
                            "0.089991, 0.087923, 0.121979, 0.22659, 0.396121, 0.621027, 0.877624", \
                            "0.067661, 0.061776, 0.095656, 0.200422, 0.36982, 0.59411, 0.851312", \
                            "0.028457, 0.026499, 0.060566, 0.165168, 0.334708, 0.558855, 0.816112", \
                            "0, 0, 0.005753, 0.110362, 0.279904, 0.504053, 0.761398", \
                            "0, 0, 0.008041, 0.112652, 0.282192, 0.506341, 0.763455" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          index_2 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          values  ( \
                            "0.771309, 0.773696, 0.738298, 0.691724, 0.675048, 0.667975, 0.714175", \
                            "0.786731, 0.7755, 0.735372, 0.691812, 0.676225, 0.669625, 0.733084", \
                            "0.785697, 0.788128, 0.752576, 0.70444, 0.689359, 0.682253, 0.741664", \
                            "0.819423, 0.818312, 0.777601, 0.734041, 0.718949, 0.711854, 0.77308", \
                            "0.852401, 0.850707, 0.810557, 0.768559, 0.743589, 0.752807, 0.800008", \
                            "0.918049, 0.902341, 0.870837, 0.820699, 0.807301, 0.800525, 0.863973", \
                            "0.906554, 0.903474, 0.863357, 0.818004, 0.804507, 0.797599, 0.862895" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          index_2 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          values  ( \
                            "1.37995, 1.3827, 1.34904, 1.24772, 1.07392, 0.850872, 0.596849", \
                            "1.38182, 1.38446, 1.35069, 1.24937, 1.07559, 0.852533, 0.59851", \
                            "1.39425, 1.39711, 1.36334, 1.262, 1.08821, 0.865161, 0.611138", \
                            "1.42373, 1.4267, 1.39293, 1.2916, 1.11781, 0.894762, 0.640728", \
                            "1.45695, 1.45948, 1.42593, 1.32451, 1.15077, 0.927707, 0.673684", \
                            "1.51195, 1.51525, 1.48159, 1.38028, 1.20647, 0.983422, 0.729399", \
                            "1.50898, 1.51239, 1.47873, 1.37731, 1.20357, 0.980507, 0.726484" \
                          )
                          }
                 }
        }
          cell_leakage_power : 0.002362734;
}
}
