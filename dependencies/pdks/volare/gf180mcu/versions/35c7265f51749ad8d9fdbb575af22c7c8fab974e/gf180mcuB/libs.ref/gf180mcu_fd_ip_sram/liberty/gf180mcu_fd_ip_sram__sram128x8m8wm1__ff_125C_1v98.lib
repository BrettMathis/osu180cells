/*
 * Copyright 2022 GlobalFoundries PDK Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 *      Single Port SRAM cell name : gf180mcu_fd_ip_sram__sram128x8m8wm1
 *      Technology                 : GF 180nm 5V Green
 *
 *      ---------
 *      Pin name:
 *      ---------
 *      Input Pins : CLK CEN GWEN WEN[7:0] A[6:0] D[7:0]
 *      Inout Pins:  VDD VSS
 *      Output Pins: Q[7:0]
 *
 *     Revision History: 1.0 (Initial Release: June 20, 2014)
 */

library(gf180mcu_fd_ip_sram__sram128x8m8wm1__ff_125C_1v98) {
        delay_model             : table_lookup;
        revision                : 1.0;
        date                    : "June 20, 2014";
        comment                 : "GF 180nm 5V Green";
        voltage_unit            : "1V";
        time_unit               : "1ns";
        current_unit            : "1mA";
        leakage_power_unit      : "1mW";
        nom_process             : 1;
        nom_temperature         : 125;
        nom_voltage             : 1.98;
        capacitive_load_unit    (1,pf);
        pulling_resistance_unit : "1kohm";

        /* additional header data */
        default_fanout_load            : 1;
        default_inout_pin_cap          : 0.045;
        default_input_pin_cap          : 0.045;
        default_output_pin_cap         : 0;
        default_max_transition         : 3.235;
        default_cell_leakage_power     : 0;

         /* default attributes */
         slew_derate_from_library      : 1.000;
         slew_lower_threshold_pct_fall : 10.000;
         slew_upper_threshold_pct_fall : 90.000;
         slew_lower_threshold_pct_rise : 10.000;
         slew_upper_threshold_pct_rise : 90.000;
         input_threshold_pct_fall      : 50.000;
         input_threshold_pct_rise      : 50.000;
         output_threshold_pct_fall     : 50.000;
         output_threshold_pct_rise     : 50.000;
         default_leakage_power_density : 0;

        /* k-factors */
        k_process_recovery_fall        : 1;
        k_process_recovery_rise        : 1;
        k_process_cell_fall            : 1;
        k_process_cell_leakage_power   : 0;
        k_process_cell_rise            : 1;
        k_process_fall_transition      : 1;
        k_process_hold_fall            : 1;
        k_process_hold_rise            : 1;
        k_process_internal_power       : 0;
        k_process_min_pulse_width_high : 1;
        k_process_min_pulse_width_low  : 1;
        k_process_setup_fall           : 1;
        k_process_setup_rise           : 1;
        k_process_wire_cap             : 0;
        k_process_wire_res             : 0;
        k_process_pin_cap              : 0;
        k_process_rise_transition      : 1;
        k_temp_cell_fall               : 0.000;
        k_temp_cell_rise               : 0.000;
        k_temp_hold_fall               : 0.000;
        k_temp_hold_rise               : 0.000;
        k_temp_min_pulse_width_high    : 0.000;
        k_temp_min_pulse_width_low     : 0.000;
        k_temp_min_period              : 0.000;
        k_temp_rise_propagation        : 0.000;
        k_temp_fall_propagation        : 0.000;
        k_temp_rise_transition         : 0.000;
        k_temp_fall_transition         : 0.000;
        k_temp_recovery_fall           : 0.000;
        k_temp_recovery_rise           : 0.000;
        k_temp_setup_fall              : 0.000;
        k_temp_setup_rise              : 0.000;
        k_volt_cell_fall               : 0.000;
        k_volt_cell_rise               : 0.000;
        k_volt_hold_fall               : 0.000;
        k_volt_hold_rise               : 0.000;
        k_volt_min_pulse_width_high    : 0.000;
        k_volt_min_pulse_width_low     : 0.000;
        k_volt_min_period              : 0.000;
        k_volt_recovery_fall           : 0.000;
        k_volt_recovery_rise           : 0.000;
        k_volt_setup_fall              : 0.000;
        k_volt_setup_rise              : 0.000;
        k_volt_rise_propagation        : 0.000;
        k_volt_fall_propagation        : 0.000;
        k_volt_rise_transition         : 0.000;
        k_volt_fall_transition         : 0.000;

         voltage_map (VDD, 1.98);
         voltage_map (VSS, 0.00);
         operating_conditions(ff_1p98v_125C) {
                process       : 1;
                temperature   : 125;
                voltage       : 1.98;
                tree_type     : balanced_tree;
         }

         default_operating_conditions : ff_1p98v_125C;
         wire_load("Estimate") {
                resistance    : 1.44e-05;
                capacitance   : 0.00018;
                area          : 1.7;
                slope         : 500;
                fanout_length (1,500);
         }
         power_lut_template(power_template) {
            variable_1 : input_transition_time;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(q_delay_template) {
            variable_1 : input_net_transition;
            variable_2 : total_output_net_capacitance;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
                 index_2 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(q_slew_template) {
            variable_1 : total_output_net_capacitance;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(constraint_template) {
            variable_1 : related_pin_transition;
            variable_2 : constrained_pin_transition;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
                 index_2 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }

         library_features(report_delay_calculation);

         type (A_BUS) {
                base_type : array;
                data_type : bit;
                bit_width : 7;
                bit_from  : 6;
                bit_to    : 0;
                downto    : true;
         }
         type (Q_BUS) {
                base_type : array;
                data_type : bit;
                bit_width : 8;
                bit_from  : 7;
                bit_to    : 0;
                downto    : true;
         }
 cell(gf180mcu_fd_ip_sram__sram128x8m8wm1) {
        area             : 116118.5168;
        dont_use         : TRUE;
        dont_touch       : TRUE;
        interface_timing : TRUE;
        memory() {
                type          : ram;
                address_width : 7;
                word_width    : 8;
        }

                 bus(Q)   {
                  bus_type             : Q_BUS;
                  direction            : output;
                  max_capacitance      : 1.018;
                  memory_read() {
                        address        : A;
                  }
                  timing() {
                          related_pin  : "CLK";
                          timing_type  : rising_edge;
                          timing_sense : non_unate;
       		  when : "((!CEN) & (GWEN))";
        	  sdf_cond : "CEN== 1'b0 && GWEN== 1'b1";
                          cell_rise(q_delay_template) {
			  index_1 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
			  index_2 ("0.01, 0.02813, 0.09177, 0.2133, 0.4026, 0.6683, 1.018");
                          values  ( \
                            "10.27524, 10.32228, 10.46364, 10.71708, 11.04288, 11.53104, 12.1548", \
                            "10.29564, 10.3386, 10.48596, 10.74792, 11.07036, 11.55264, 12.1656", \
                            "10.3224, 10.36464, 10.51692, 10.75176, 11.09844, 11.57616, 12.1944", \
                            "10.35252, 10.3938, 10.54452, 10.78224, 11.1168, 11.58492, 12.2172", \
                            "10.39752, 10.4754, 10.59324, 10.84416, 11.19372, 11.64588, 12.2676", \
                            "10.443, 10.49292, 10.617, 10.87584, 11.22756, 11.69556, 12.3204", \
                            "10.4526, 10.50432, 10.64796, 10.88628, 11.226, 11.7012, 12.3024" \
                          )
                          }
                          rise_transition(q_slew_template) {
                          index_1 ("0.01, 0.02813, 0.09177, 0.2133, 0.4026, 0.6683, 1.018");
                          values  ( \
  	                     "0.398952, 0.469272, 0.687852, 1.1048, 1.77096, 2.73984, 3.99984" \
                          )

                          }
                          cell_fall(q_delay_template) {
                          index_1 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          index_2 ("0.01, 0.02813, 0.09177, 0.2133, 0.4026, 0.6683, 1.018");
                          values  ( \
                            "10.75104, 10.7916, 10.91112, 11.10372, 11.33556, 11.61288, 11.95872", \
                            "10.77396, 10.81584, 10.93824, 11.13396, 11.35356, 11.64024, 11.9796", \
                            "10.80012, 10.83612, 10.9668, 11.15196, 11.38608, 11.6664, 12.0036", \
                            "10.82508, 10.85856, 10.9848, 11.16972, 11.40192, 11.67936, 12.0204", \
                            "10.8714, 10.94784, 11.04528, 11.24436, 11.48496, 11.73312, 12.0792", \
                            "10.92456, 10.9602, 11.05524, 11.26644, 11.50632, 11.78436, 12.1332", \
                            "10.9278, 10.96776, 11.10312, 11.27196, 11.508, 11.78928, 12.1164" \
                          )
                          }
                          fall_transition(q_slew_template) {
                          index_1 ("0.01, 0.02813, 0.09177, 0.2133, 0.4026, 0.6683, 1.018");
                          values  ( \
                            "0.395868, 0.445152, 0.584028, 0.803784, 1.12232, 1.53864, 2.07072" \
                          )
                          }
                  }
          }
          pin(CLK)   {
                  direction            : input;
                  capacitance          : 0.27565;
                  clock                : true;
                  max_transition       : 3.235;
                  min_pulse_width_high : 3.77334;
                  min_pulse_width_low  : 5.14851;
                  min_period           : 14.0727;

/* WRITE POWER */
             internal_power() {
              when : "!CEN & !GWEN & (!WEN[0] | !WEN[1] | !WEN[2] | !WEN[3] | !WEN[4] | !WEN[5] | !WEN[6] | !WEN[7])";
              rise_power(power_template) {
                index_1 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                values  ("125.948, 125.948, 125.948, 125.948, 125.948, 125.948, 125.948");
              }
              fall_power(power_template) {
                index_1 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                values  ("125.948, 125.948, 125.948, 125.948, 125.948, 125.948, 125.948");
              }
             }
/* DISABLED POWER */
             internal_power() {
              when : "CEN";
              rise_power(power_template) {
                index_1 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                values  ("0.00159443, 0.00159443, 0.00159443, 0.00159443, 0.00159443, 0.00159443, 0.00159443");
              }
              fall_power(power_template) {
                index_1 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                values  ("0.00159443, 0.00159443, 0.00159443, 0.00159443, 0.00159443, 0.00159443, 0.00159443");
              }
             }
/* READ POWER */
             internal_power() {
             when : "!CEN & GWEN";
             rise_power(power_template) {
                index_1 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                values  ("114.038, 114.038, 114.038, 114.038, 114.038, 114.038, 114.038");
              }
              fall_power(power_template) {
                index_1 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                values  ("114.038, 114.038, 114.038, 114.038, 114.038, 114.038, 114.038");
              }
             }
          }

          pg_pin(VDD) {
                  voltage_name     : VDD;
                  pg_type          : primary_power;
          }
          pg_pin(VSS) {
                  voltage_name     : VSS;
                  pg_type          : primary_ground;
          }
          pin(CEN)   {
                  direction            : input;
                  capacitance          : 0.0170277;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          index_2 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          values  ( \
                            "0.971311, 0.966251, 0.960234, 0.998822, 1.11, 1.23105, 1.33221", \
                            "0.960685, 0.954723, 0.949333, 0.987932, 1.0991, 1.22016, 1.32451", \
                            "0.921239, 0.913066, 0.907247, 0.945835, 1.05701, 1.17808, 1.27928", \
                            "0.848661, 0.843568, 0.839069, 0.873147, 0.981728, 1.10279, 1.20399", \
                            "0.849981, 0.843315, 0.838816, 0.862081, 0.97372, 1.04984, 1.14103", \
                            "0.849926, 0.843062, 0.838761, 0.872839, 0.97229, 1.0498, 1.11456", \
                            "0.849211, 0.842831, 0.83831, 0.861586, 0.97185, 1.04936, 1.12574" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          index_2 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          values  ( \
                            "0.800503, 0.805563, 0.845988, 0.942249, 1.09478, 1.3019, 1.52526", \
                            "0.789789, 0.799073, 0.839421, 0.932008, 1.08485, 1.29734, 1.51437", \
                            "0.789448, 0.798809, 0.839146, 0.931744, 1.08461, 1.29707, 1.51261", \
                            "0.789261, 0.798545, 0.838948, 0.931546, 1.08434, 1.29688, 1.51239", \
                            "0.789052, 0.798358, 0.838717, 0.931293, 1.08416, 1.29661, 1.51206", \
                            "0.788942, 0.798314, 0.838662, 0.931227, 1.08407, 1.29656, 1.51206", \
                            "0.788502, 0.797863, 0.838222, 0.930787, 1.08367, 1.29612, 1.51162" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          index_2 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          values  ( \
                            "2.74604, 2.75242, 2.75693, 2.72283, 2.62339, 2.54595, 2.50184", \
                            "2.761, 2.76793, 2.77222, 2.73812, 2.63868, 2.56113, 2.51702", \
                            "2.79125, 2.80049, 2.80478, 2.77079, 2.67124, 2.5938, 2.54969", \
                            "2.87837, 2.88354, 2.88794, 2.85395, 2.75451, 2.67696, 2.63285", \
                            "2.98826, 2.99486, 2.99937, 2.97616, 2.86451, 2.78839, 2.74659", \
                            "3.13984, 3.14677, 3.15106, 3.11696, 3.01752, 2.93997, 2.8963", \
                            "3.24951, 3.25589, 3.2604, 3.23719, 3.12686, 3.04942, 3.00531" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          index_2 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          values  ( \
                            "2.80676, 2.79752, 2.75704, 2.66442, 2.51163, 2.29911, 2.08362", \
                            "2.82194, 2.8127, 2.77233, 2.67971, 2.52681, 2.3144, 2.09891", \
                            "2.85461, 2.84526, 2.80489, 2.71238, 2.55948, 2.34696, 2.13147", \
                            "2.93777, 2.92853, 2.88816, 2.79554, 2.64275, 2.43023, 2.21463", \
                            "3.0492, 3.03985, 2.99948, 2.90697, 2.75407, 2.54166, 2.32617", \
                            "3.20089, 3.19143, 3.15117, 3.05855, 2.90576, 2.69324, 2.47775", \
                            "3.31023, 3.30088, 3.26051, 3.168, 3.0151, 2.80269, 2.58709" \
                          )
                          }
                 }
          }
          pin(GWEN)   {
                  direction            : input;
                  capacitance          : 0.0459268;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          index_2 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          values  ( \
                            "1.30105, 1.30862, 1.34167, 1.41581, 1.53241, 1.6632, 1.78849", \
                            "1.29053, 1.29809, 1.33111, 1.40525, 1.52185, 1.65451, 1.77793", \
                            "1.26056, 1.26814, 1.30119, 1.37533, 1.49182, 1.62272, 1.74801", \
                            "1.18457, 1.19541, 1.22607, 1.30048, 1.41911, 1.54792, 1.67321", \
                            "1.07886, 1.08644, 1.11949, 1.19361, 1.30607, 1.44023, 1.56629", \
                            "0.994961, 1.00235, 1.03563, 1.10975, 1.2254, 1.35718, 1.48247", \
                            "0.943778, 0.951368, 0.984445, 1.05856, 1.17516, 1.306, 1.43132" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          index_2 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          values  ( \
                            "1.53406, 1.53824, 1.58719, 1.6852, 1.84184, 2.07328, 2.35114", \
                            "1.5235, 1.52768, 1.57663, 1.672, 1.83326, 2.06195, 2.34058", \
                            "1.49358, 1.49952, 1.54671, 1.64208, 1.80246, 2.03082, 2.31066", \
                            "1.41889, 1.42461, 1.4718, 1.55705, 1.72755, 1.958, 2.23586", \
                            "1.31185, 1.31601, 1.36499, 1.45761, 1.62063, 1.85031, 2.12894", \
                            "1.22815, 1.23395, 1.28113, 1.37588, 1.53681, 1.76638, 2.04853", \
                            "1.17679, 1.18103, 1.22992, 1.32528, 1.48654, 1.71402, 1.99397" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          index_2 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          values  ( \
                            "1.76396, 1.75373, 1.71468, 1.64439, 1.56376, 1.50161, 1.45156", \
                            "1.76726, 1.76165, 1.72227, 1.64769, 1.56706, 1.51261, 1.45948", \
                            "1.77188, 1.76165, 1.7226, 1.6522, 1.57157, 1.50942, 1.46234", \
                            "1.80389, 1.79366, 1.75472, 1.68443, 1.59797, 1.54154, 1.4916", \
                            "1.84382, 1.83359, 1.79454, 1.72425, 1.63955, 1.58125, 1.53439", \
                            "1.88727, 1.87924, 1.83799, 1.7677, 1.683, 1.62019, 1.57498", \
                            "1.89849, 1.88826, 1.84921, 1.77892, 1.69829, 1.63614, 1.58609" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          index_2 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          values  ( \
                            "0.86856, 0.851345, 0.797137, 0.705463, 0.549736, 0.341022, 0.079728", \
                            "0.876491, 0.854832, 0.805046, 0.713526, 0.557964, 0.345345, 0.087626", \
                            "0.87648, 0.854447, 0.805024, 0.713515, 0.561011, 0.348865, 0.087615", \
                            "0.907632, 0.887007, 0.837166, 0.747274, 0.59026, 0.381073, 0.119749", \
                            "0.948442, 0.930666, 0.880847, 0.787138, 0.632995, 0.420002, 0.162231", \
                            "0.991859, 0.97361, 0.920425, 0.829543, 0.673497, 0.463474, 0.203209", \
                            "1.00679, 0.985369, 0.931656, 0.840136, 0.688622, 0.475178, 0.214239" \
                          )
                          }
                 }
          }
          bus(WEN)   {
                  bus_type             : Q_BUS;
                  direction            : input;
                  capacitance          : 0.00723483;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          index_2 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          values  ( \
                            "0, 0, 0, 0, 0, 0, 0", \
                            "0, 0, 0, 0, 0, 0, 0", \
                            "0, 0, 0, 0, 0, 0, 0", \
                            "0, 0, 0, 0, 0, 0, 0", \
                            "0, 0, 0, 0, 0, 0, 0", \
                            "0, 0, 0, 0, 0, 0, 0", \
                            "0, 0, 0, 0, 0, 0, 0" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          index_2 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          values  ( \
                            "0.556875, 0.57761, 0.627935, 0.721809, 0.87703, 1.08512, 1.34629", \
                            "0.550088, 0.568007, 0.619993, 0.713867, 0.868835, 1.07928, 1.34068", \
                            "0.549868, 0.56892, 0.617045, 0.710633, 0.862994, 1.07858, 1.33771", \
                            "0.517858, 0.53592, 0.586377, 0.679635, 0.836187, 1.04354, 1.30705", \
                            "0.479556, 0.498421, 0.544742, 0.639936, 0.79266, 1.00599, 1.26671", \
                            "0.434808, 0.458832, 0.504713, 0.598477, 0.754523, 0.965547, 1.22236", \
                            "0.422565, 0.443289, 0.492481, 0.586058, 0.737781, 0.952204, 1.21314" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          index_2 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          values  ( \
                            "1.76396, 1.75373, 1.71468, 1.64439, 1.56376, 1.50161, 1.45651", \
                            "1.76748, 1.76165, 1.72227, 1.64769, 1.56706, 1.51261, 1.46443", \
                            "1.77188, 1.76165, 1.7226, 1.6522, 1.57157, 1.50942, 1.46443", \
                            "1.80389, 1.79366, 1.75472, 1.68443, 1.59797, 1.54154, 1.49655", \
                            "1.84382, 1.83359, 1.79454, 1.72425, 1.63955, 1.58125, 1.53604", \
                            "1.88727, 1.87924, 1.83799, 1.7677, 1.683, 1.62019, 1.57982", \
                            "1.89849, 1.88826, 1.84921, 1.77892, 1.69829, 1.63614, 1.59104" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          index_2 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          values  ( \
                            "0.86856, 0.851345, 0.797137, 0.705463, 0.549736, 0.341022, 0.079728", \
                            "0.876491, 0.858209, 0.805046, 0.713526, 0.558591, 0.347545, 0.087626", \
                            "0.87648, 0.854447, 0.805024, 0.713515, 0.561011, 0.348865, 0.087615", \
                            "0.907632, 0.887007, 0.837166, 0.747274, 0.59026, 0.381073, 0.119749", \
                            "0.948442, 0.930666, 0.880847, 0.787138, 0.632995, 0.420002, 0.162231", \
                            "0.991859, 0.97361, 0.920425, 0.829543, 0.673497, 0.463474, 0.203209", \
                            "1.00679, 0.985369, 0.931656, 0.840136, 0.688622, 0.475178, 0.214239" \
                          )
                          }
                 }
          }
          bus(A)   {
                  bus_type             : A_BUS;
                  direction            : input;
                  capacitance          : 0.0368678;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          index_2 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          values  ( \
                            "1.16537, 1.16246, 1.15401, 1.20223, 1.30528, 1.43649, 1.54352", \
                            "1.1618, 1.15487, 1.14899, 1.19188, 1.30342, 1.43011, 1.53769", \
                            "1.15172, 1.15135, 1.14275, 1.18731, 1.29883, 1.42087, 1.52999", \
                            "1.12316, 1.1212, 1.11225, 1.15342, 1.26717, 1.39436, 1.50238", \
                            "1.08511, 1.08277, 1.07761, 1.11602, 1.23043, 1.3574, 1.46685", \
                            "1.04038, 1.03828, 1.03242, 1.07149, 1.17925, 1.31176, 1.41911", \
                            "1.03076, 1.02757, 1.02499, 1.06724, 1.17316, 1.29901, 1.40866" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          index_2 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          values  ( \
                            "1.45475, 1.45783, 1.49765, 1.59456, 1.75285, 1.95646, 2.19802", \
                            "1.44749, 1.45024, 1.4817, 1.58444, 1.74537, 1.94986, 2.19769", \
                            "1.44353, 1.44595, 1.47774, 1.58169, 1.73877, 1.94953, 2.19065", \
                            "1.41449, 1.41856, 1.44705, 1.54836, 1.70643, 1.91576, 2.16117", \
                            "1.37764, 1.36631, 1.40899, 1.50975, 1.67112, 1.8788, 2.11816", \
                            "1.33023, 1.33738, 1.36609, 1.46641, 1.62855, 1.83623, 2.07361", \
                            "1.32011, 1.32561, 1.3552, 1.45607, 1.61843, 1.82743, 2.06822" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          index_2 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          values  ( \
                            "0.9482, 0.954646, 0.958573, 0.90486, 0.849035, 0.796026, 0.764258", \
                            "0.959475, 0.965899, 0.969848, 0.91641, 0.860387, 0.807136, 0.775533", \
                            "1.00147, 1.0039, 1.00784, 0.954118, 0.898381, 0.845152, 0.813791", \
                            "1.07112, 1.07754, 1.0815, 1.02806, 0.972037, 0.919028, 0.887172", \
                            "1.17765, 1.18407, 1.18802, 1.13458, 1.07856, 1.02556, 0.993707", \
                            "1.30671, 1.31313, 1.31706, 1.26365, 1.2076, 1.15429, 1.12295", \
                            "1.39139, 1.39788, 1.40184, 1.34838, 1.29234, 1.23908, 1.20748" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          index_2 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          values  ( \
                            "1.03617, 1.02675, 0.985171, 0.904739, 0.833635, 0.773014, 0.719631", \
                            "1.04749, 1.03703, 0.996457, 0.916036, 0.84491, 0.78298, 0.730433", \
                            "1.08645, 1.07595, 1.03444, 0.95403, 0.882904, 0.820963, 0.768416", \
                            "1.16018, 1.14868, 1.10808, 1.02766, 0.959145, 0.894619, 0.842072", \
                            "1.26592, 1.26067, 1.21462, 1.13421, 1.06308, 1.00114, 0.948596", \
                            "1.3948, 1.38435, 1.34365, 1.26324, 1.19221, 1.13154, 1.07765", \
                            "1.47939, 1.46894, 1.42835, 1.34794, 1.27686, 1.21493, 1.16237" \
                          )
                          }
                 }
          }
          bus(D)   {
                  bus_type             : Q_BUS;
                  memory_write() {
                          address      : A;
                          clocked_on   : "CLK";
                  }
                  direction            : input;
                  capacitance          : 0.0154868;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          index_2 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          values  ( \
                            "1.05883, 1.06712, 1.10741, 1.15677, 1.16557, 1.15485, 1.10505", \
                            "1.04985, 1.07048, 1.1029, 1.13986, 1.15715, 1.14353, 1.09397", \
                            "1.04578, 1.05506, 1.09417, 1.13132, 1.15544, 1.13402, 1.08802", \
                            "1.00837, 1.03333, 1.06418, 1.10569, 1.1243, 1.12091, 1.05578", \
                            "0.980958, 0.98527, 1.0211, 1.06715, 1.08924, 1.06856, 1.01818", \
                            "0.934681, 0.94468, 0.983576, 1.03246, 1.03939, 1.03072, 0.984731", \
                            "0.928983, 0.936771, 0.968451, 1.00705, 1.0359, 1.02593, 0.966273" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          index_2 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          values  ( \
                            "0.133432, 0.125703, 0.165253, 0.270305, 0.439648, 0.66352, 0.920854", \
                            "0.125793, 0.117664, 0.157627, 0.262213, 0.432014, 0.655897, 0.913231", \
                            "0.121761, 0.119496, 0.153637, 0.258492, 0.428032, 0.650683, 0.909238", \
                            "0.091036, 0.088902, 0.122784, 0.227965, 0.397309, 0.621181, 0.878427", \
                            "0.051601, 0.049192, 0.083303, 0.188489, 0.357819, 0.581713, 0.839036", \
                            "0.009075, 0.006545, 0.040898, 0.145955, 0.315285, 0.53702, 0.796422", \
                            "0, 0, 0.030558, 0.135414, 0.304944, 0.528836, 0.786159" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          index_2 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          values  ( \
                            "0.756052, 0.748803, 0.70378, 0.666468, 0.648956, 0.655369, 0.705859", \
                            "0.761464, 0.753225, 0.70884, 0.671363, 0.654225, 0.664224, 0.710754", \
                            "0.756646, 0.759506, 0.717893, 0.677644, 0.65571, 0.666699, 0.717035", \
                            "0.79838, 0.789844, 0.748231, 0.707487, 0.690635, 0.6941, 0.747549", \
                            "0.825737, 0.82819, 0.786731, 0.746537, 0.723272, 0.735042, 0.785895", \
                            "0.878394, 0.870496, 0.826353, 0.788073, 0.765743, 0.778085, 0.820391", \
                            "0.890505, 0.878867, 0.841203, 0.80157, 0.783409, 0.790042, 0.840345" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          index_2 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          values  ( \
                            "1.3541, 1.35674, 1.32319, 1.22188, 1.04809, 0.825033, 0.571021", \
                            "1.35916, 1.36191, 1.32825, 1.22693, 1.05314, 0.830082, 0.57607", \
                            "1.36554, 1.36818, 1.33452, 1.23321, 1.05942, 0.836363, 0.582351", \
                            "1.39579, 1.39865, 1.36488, 1.26356, 1.08976, 0.866712, 0.612689", \
                            "1.43418, 1.43682, 1.40327, 1.3019, 1.12812, 0.905058, 0.651035", \
                            "1.47675, 1.47939, 1.44573, 1.34442, 1.17061, 0.947562, 0.69355", \
                            "1.48885, 1.49149, 1.45783, 1.35652, 1.18272, 0.959673, 0.70565" \
                          )
                          }
                 }
        }
          cell_leakage_power : 0.0015944346;
}
}
