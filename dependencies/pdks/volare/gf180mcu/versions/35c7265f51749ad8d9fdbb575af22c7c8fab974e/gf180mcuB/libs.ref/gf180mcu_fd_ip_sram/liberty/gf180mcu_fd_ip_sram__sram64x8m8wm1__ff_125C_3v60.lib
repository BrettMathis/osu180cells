/*
 * Copyright 2022 GlobalFoundries PDK Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 *      Single Port SRAM cell name : gf180mcu_fd_ip_sram__sram64x8m8wm1
 *      Technology                 : GF 180nm 5V Green
 *
 *      ---------
 *      Pin name:
 *      ---------
 *      Input Pins : CLK CEN GWEN WEN[7:0] A[5:0] D[7:0]
 *      Inout Pins:  VDD VSS
 *      Output Pins: Q[7:0]
 *
 *     Revision History: 1.0 (Initial Release: June 20, 2014)
 */

library(gf180mcu_fd_ip_sram__sram64x8m8wm1__ff_125C_3v60) {
        delay_model             : table_lookup;
        revision                : 1.0;
        date                    : "June 20, 2014";
        comment                 : "GF 180nm 5V Green";
        voltage_unit            : "1V";
        time_unit               : "1ns";
        current_unit            : "1mA";
        leakage_power_unit      : "1mW";
        nom_process             : 1;
        nom_temperature         : 125;
        nom_voltage             : 3.6;
        capacitive_load_unit    (1,pf);
        pulling_resistance_unit : "1kohm";

        /* additional header data */
        default_fanout_load            : 1;
        default_inout_pin_cap          : 0.045;
        default_input_pin_cap          : 0.045;
        default_output_pin_cap         : 0;
        default_max_transition         : 2.3877;
        default_cell_leakage_power     : 0;

         /* default attributes */
         slew_derate_from_library      : 1.000;
         slew_lower_threshold_pct_fall : 10.000;
         slew_upper_threshold_pct_fall : 90.000;
         slew_lower_threshold_pct_rise : 10.000;
         slew_upper_threshold_pct_rise : 90.000;
         input_threshold_pct_fall      : 50.000;
         input_threshold_pct_rise      : 50.000;
         output_threshold_pct_fall     : 50.000;
         output_threshold_pct_rise     : 50.000;
         default_leakage_power_density : 0;

        /* k-factors */
        k_process_recovery_fall        : 1;
        k_process_recovery_rise        : 1;
        k_process_cell_fall            : 1;
        k_process_cell_leakage_power   : 0;
        k_process_cell_rise            : 1;
        k_process_fall_transition      : 1;
        k_process_hold_fall            : 1;
        k_process_hold_rise            : 1;
        k_process_internal_power       : 0;
        k_process_min_pulse_width_high : 1;
        k_process_min_pulse_width_low  : 1;
        k_process_setup_fall           : 1;
        k_process_setup_rise           : 1;
        k_process_wire_cap             : 0;
        k_process_wire_res             : 0;
        k_process_pin_cap              : 0;
        k_process_rise_transition      : 1;
        k_temp_cell_fall               : 0.000;
        k_temp_cell_rise               : 0.000;
        k_temp_hold_fall               : 0.000;
        k_temp_hold_rise               : 0.000;
        k_temp_min_pulse_width_high    : 0.000;
        k_temp_min_pulse_width_low     : 0.000;
        k_temp_min_period              : 0.000;
        k_temp_rise_propagation        : 0.000;
        k_temp_fall_propagation        : 0.000;
        k_temp_rise_transition         : 0.000;
        k_temp_fall_transition         : 0.000;
        k_temp_recovery_fall           : 0.000;
        k_temp_recovery_rise           : 0.000;
        k_temp_setup_fall              : 0.000;
        k_temp_setup_rise              : 0.000;
        k_volt_cell_fall               : 0.000;
        k_volt_cell_rise               : 0.000;
        k_volt_hold_fall               : 0.000;
        k_volt_hold_rise               : 0.000;
        k_volt_min_pulse_width_high    : 0.000;
        k_volt_min_pulse_width_low     : 0.000;
        k_volt_min_period              : 0.000;
        k_volt_recovery_fall           : 0.000;
        k_volt_recovery_rise           : 0.000;
        k_volt_setup_fall              : 0.000;
        k_volt_setup_rise              : 0.000;
        k_volt_rise_propagation        : 0.000;
        k_volt_fall_propagation        : 0.000;
        k_volt_rise_transition         : 0.000;
        k_volt_fall_transition         : 0.000;

         voltage_map (VDD, 3.6);
         voltage_map (VSS, 0.00);
         operating_conditions(ff_3p6v_125C) {
                process       : 1;
                temperature   : 125;
                voltage       : 3.6;
                tree_type     : balanced_tree;
         }

         default_operating_conditions : ff_3p6v_125C;
         wire_load("Estimate") {
                resistance    : 1.44e-05;
                capacitance   : 0.00018;
                area          : 1.7;
                slope         : 500;
                fanout_length (1,500);
         }
         power_lut_template(power_template) {
            variable_1 : input_transition_time;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(q_delay_template) {
            variable_1 : input_net_transition;
            variable_2 : total_output_net_capacitance;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
                 index_2 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(q_slew_template) {
            variable_1 : total_output_net_capacitance;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(constraint_template) {
            variable_1 : related_pin_transition;
            variable_2 : constrained_pin_transition;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
                 index_2 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }

         library_features(report_delay_calculation);

         type (A_BUS) {
                base_type : array;
                data_type : bit;
                bit_width : 6;
                bit_from  : 5;
                bit_to    : 0;
                downto    : true;
         }
         type (Q_BUS) {
                base_type : array;
                data_type : bit;
                bit_width : 8;
                bit_from  : 7;
                bit_to    : 0;
                downto    : true;
         }
 cell(gf180mcu_fd_ip_sram__sram64x8m8wm1) {
        area             : 100571.5568;
        dont_use         : TRUE;
        dont_touch       : TRUE;
        interface_timing : TRUE;
        memory() {
                type          : ram;
                address_width : 6;
                word_width    : 8;
        }

                 bus(Q)   {
                  bus_type             : Q_BUS;
                  direction            : output;
                  max_capacitance      : 1.0626;
                  memory_read() {
                        address        : A;
                  }
                  timing() {
                          related_pin  : "CLK";
                          timing_type  : rising_edge;
                          timing_sense : non_unate;
       		  when : "((!CEN) & (GWEN))";
        	  sdf_cond : "CEN== 1'b0 && GWEN== 1'b1";
                          cell_rise(q_delay_template) {
			  index_1 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
			  index_2 ("0.0100, 0.0289, 0.0954, 0.2223, 0.4200, 0.6975, 1.0626");
                          values  ( \
                            "5.40288, 5.4342, 5.49768, 5.62752, 5.80764, 6.06252, 6.39192", \
                            "5.41008, 5.43084, 5.50416, 5.62812, 5.81232, 6.06096, 6.39228", \
                            "5.4156, 5.43912, 5.50872, 5.63364, 5.814, 6.06516, 6.3948", \
                            "5.4156, 5.44368, 5.51652, 5.63868, 5.82468, 6.0732, 6.40356", \
                            "5.43384, 5.45928, 5.53092, 5.65416, 5.83524, 6.08436, 6.41364", \
                            "5.42652, 5.44908, 5.52252, 5.64732, 5.83008, 6.07824, 6.41028", \
                            "5.39652, 5.41884, 5.493, 5.61444, 5.7972, 6.05256, 6.37884" \
                          )
                          }
                          rise_transition(q_slew_template) {
                          index_1 ("0.0100, 0.0289, 0.0954, 0.2223, 0.4200, 0.6975, 1.0626");
                          values  ( \
  	                     "0.233568, 0.26934, 0.38616, 0.614856, 0.98046, 1.51872, 2.2206" \
                          )

                          }
                          cell_fall(q_delay_template) {
                          index_1 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          index_2 ("0.0100, 0.0289, 0.0954, 0.2223, 0.4200, 0.6975, 1.0626");
                          values  ( \
                            "5.59008, 5.61912, 5.68308, 5.79396, 5.93196, 6.11172, 6.32856", \
                            "5.59524, 5.61756, 5.68932, 5.79504, 5.93772, 6.11112, 6.33072", \
                            "5.60124, 5.62428, 5.694, 5.80152, 5.94168, 6.11652, 6.33516", \
                            "5.6016, 5.63052, 5.6988, 5.80596, 5.95128, 6.12372, 6.34116", \
                            "5.61888, 5.64516, 5.71524, 5.82408, 5.96292, 6.13704, 6.35304", \
                            "5.61252, 5.63676, 5.70528, 5.81412, 5.9568, 6.129, 6.3486", \
                            "5.58204, 5.60616, 5.67696, 5.78112, 5.92596, 6.10272, 6.3162" \
                          )
                          }
                          fall_transition(q_slew_template) {
                          index_1 ("0.0100, 0.0289, 0.0954, 0.2223, 0.4200, 0.6975, 1.0626");
                          values  ( \
                            "0.239436, 0.266952, 0.344916, 0.477228, 0.682512, 0.95532, 1.3152" \
                          )
                          }
                  }
          }
          pin(CLK)   {
                  direction            : input;
                  capacitance          : 0.281059;
                  clock                : true;
                  max_transition       : 2.3877;
                  min_pulse_width_high : 3.49452;
                  min_pulse_width_low  : 3.18729;
                  min_period           : 7.14045;

/* WRITE POWER */
             internal_power() {
              when : "!CEN & !GWEN & (!WEN[0] | !WEN[1] | !WEN[2] | !WEN[3] | !WEN[4] | !WEN[5] | !WEN[6] | !WEN[7])";
              rise_power(power_template) {
                index_1 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                values  ("441.252, 441.252, 441.252, 441.252, 441.252, 441.252, 441.252");
              }
              fall_power(power_template) {
                index_1 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                values  ("441.252, 441.252, 441.252, 441.252, 441.252, 441.252, 441.252");
              }
             }
/* DISABLED POWER */
             internal_power() {
              when : "CEN";
              rise_power(power_template) {
                index_1 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                values  ("0.00370476, 0.00370476, 0.00370476, 0.00370476, 0.00370476, 0.00370476, 0.00370476");
              }
              fall_power(power_template) {
                index_1 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                values  ("0.00370476, 0.00370476, 0.00370476, 0.00370476, 0.00370476, 0.00370476, 0.00370476");
              }
             }
/* READ POWER */
             internal_power() {
             when : "!CEN & GWEN";
             rise_power(power_template) {
                index_1 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                values  ("395.91, 395.91, 395.91, 395.91, 395.91, 395.91, 395.91");
              }
              fall_power(power_template) {
                index_1 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                values  ("395.91, 395.91, 395.91, 395.91, 395.91, 395.91, 395.91");
              }
             }
          }

          pg_pin(VDD) {
                  voltage_name     : VDD;
                  pg_type          : primary_power;
          }
          pg_pin(VSS) {
                  voltage_name     : VSS;
                  pg_type          : primary_ground;
          }
          pin(CEN)   {
                  direction            : input;
                  capacitance          : 0.0170368;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          index_2 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          values  ( \
                            "0.538263, 0.531685, 0.528231, 0.550165, 0.594605, 0.629607, 0.654115", \
                            "0.531861, 0.525052, 0.521906, 0.544159, 0.589193, 0.623502, 0.648318", \
                            "0.523039, 0.515757, 0.512325, 0.531355, 0.568194, 0.602492, 0.627319", \
                            "0.522082, 0.51546, 0.512028, 0.527714, 0.551056, 0.568392, 0.597872", \
                            "0.522544, 0.515262, 0.51183, 0.53086, 0.559713, 0.572836, 0.595276", \
                            "0.522577, 0.515229, 0.511797, 0.530827, 0.56078, 0.595089, 0.619905", \
                            "0.571593, 0.564564, 0.561407, 0.583671, 0.628705, 0.663014, 0.68783" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          index_2 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          values  ( \
                            "0.497013, 0.502447, 0.524029, 0.575883, 0.664741, 0.764357, 0.878878", \
                            "0.496859, 0.502293, 0.523831, 0.575454, 0.664587, 0.766326, 0.878724", \
                            "0.496573, 0.502007, 0.523556, 0.571758, 0.663718, 0.76604, 0.877327", \
                            "0.496287, 0.501699, 0.52327, 0.575135, 0.663993, 0.765743, 0.87813", \
                            "0.495506, 0.50149, 0.523061, 0.574662, 0.663806, 0.765523, 0.877943", \
                            "0.496045, 0.501457, 0.52305, 0.571219, 0.661782, 0.764324, 0.877899", \
                            "0.504702, 0.510147, 0.531608, 0.582637, 0.670252, 0.772343, 0.886314" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          index_2 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          values  ( \
                            "1.47587, 1.48258, 1.48632, 1.46773, 1.43935, 1.42615, 1.41999", \
                            "1.4861, 1.49303, 1.49655, 1.47752, 1.44859, 1.4355, 1.42956", \
                            "1.5059, 1.51327, 1.51668, 1.49765, 1.46883, 1.45563, 1.44969", \
                            "1.55056, 1.55716, 1.56068, 1.54495, 1.52163, 1.50612, 1.49369", \
                            "1.61106, 1.61832, 1.62173, 1.6027, 1.57388, 1.56068, 1.55485", \
                            "1.66353, 1.6709, 1.67431, 1.65528, 1.62646, 1.61337, 1.60743", \
                            "1.69169, 1.69895, 1.70236, 1.68333, 1.65451, 1.64142, 1.63548" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          index_2 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          values  ( \
                            "1.50205, 1.49666, 1.4751, 1.42318, 1.3343, 1.23474, 1.12022", \
                            "1.51228, 1.50678, 1.48533, 1.43363, 1.34453, 1.24279, 1.13039", \
                            "1.53241, 1.52702, 1.50546, 1.45728, 1.36521, 1.26294, 1.15166", \
                            "1.57641, 1.57091, 1.54935, 1.49754, 1.40866, 1.30691, 1.19452", \
                            "1.63812, 1.63207, 1.61051, 1.55892, 1.46982, 1.36807, 1.25563", \
                            "1.69015, 1.68465, 1.66309, 1.61491, 1.52438, 1.42186, 1.30823", \
                            "1.71798, 1.7127, 1.69114, 1.63955, 1.55045, 1.4487, 1.33628" \
                          )
                          }
                 }
          }
          pin(GWEN)   {
                  direction            : input;
                  capacitance          : 0.0482391;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          index_2 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          values  ( \
                            "0.742049, 0.745954, 0.764918, 0.808665, 0.872806, 0.941413, 0.991419", \
                            "0.737759, 0.741477, 0.761244, 0.804815, 0.868956, 0.93225, 0.987569", \
                            "0.71951, 0.723063, 0.742302, 0.78628, 0.850179, 0.913473, 0.968814", \
                            "0.675521, 0.679019, 0.698038, 0.74184, 0.805409, 0.870661, 0.924539", \
                            "0.625141, 0.629167, 0.647944, 0.691922, 0.755183, 0.824428, 0.874445", \
                            "0.588192, 0.592031, 0.610995, 0.654522, 0.718872, 0.782166, 0.837496", \
                            "0.568766, 0.572594, 0.591734, 0.635305, 0.699446, 0.764181, 0.818059" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          index_2 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          values  ( \
                            "0.813274, 0.817135, 0.8492, 0.915706, 1.02091, 1.16119, 1.31791", \
                            "0.809424, 0.813274, 0.845284, 0.911856, 1.01707, 1.15674, 1.31406", \
                            "0.790581, 0.794508, 0.826507, 0.888525, 0.998294, 1.13832, 1.29525", \
                            "0.746383, 0.750244, 0.781836, 0.848815, 0.95403, 1.09406, 1.25101", \
                            "0.696366, 0.70015, 0.732149, 0.798721, 0.903936, 1.0436, 1.20091", \
                            "0.659274, 0.663179, 0.695189, 0.761772, 0.866987, 1.00702, 1.16395", \
                            "0.639881, 0.643764, 0.675763, 0.742335, 0.847561, 0.987591, 1.14453" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          index_2 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          values  ( \
                            "1.01571, 1.01272, 0.994378, 0.956747, 0.924572, 0.907676, 0.912065", \
                            "1.01598, 1.01298, 0.994862, 0.957242, 0.925067, 0.90783, 0.91256", \
                            "1.02228, 1.01972, 1.00039, 0.96415, 0.930589, 0.913352, 0.918082", \
                            "1.02999, 1.02567, 1.00779, 0.969991, 0.9383, 0.921822, 0.925485", \
                            "1.03644, 1.03267, 1.01434, 0.978109, 0.94457, 0.929423, 0.932041", \
                            "1.03382, 1.03165, 1.0127, 0.975084, 0.942909, 0.925672, 0.930402", \
                            "1.00706, 1.0037, 0.985798, 0.948178, 0.915992, 0.899833, 0.903496" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          index_2 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          values  ( \
                            "0.556611, 0.551276, 0.518045, 0.456225, 0.350559, 0.214612, 0.05621", \
                            "0.556842, 0.551034, 0.519079, 0.457974, 0.351054, 0.215303, 0.056705", \
                            "0.562166, 0.556567, 0.524425, 0.463045, 0.356565, 0.220716, 0.062227", \
                            "0.570097, 0.563948, 0.532477, 0.470734, 0.363957, 0.228107, 0.069619", \
                            "0.576664, 0.571252, 0.538923, 0.47729, 0.370535, 0.23478, 0.076186", \
                            "0.603746, 0.598378, 0.567677, 0.501369, 0.391259, 0.254991, 0.10504", \
                            "0.660957, 0.655028, 0.624349, 0.558041, 0.447931, 0.311663, 0.161709" \
                          )
                          }
                 }
          }
          bus(WEN)   {
                  bus_type             : Q_BUS;
                  direction            : input;
                  capacitance          : 0.0075492;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          index_2 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          values  ( \
                            "0, 0, 0, 0, 0, 0, 0", \
                            "0, 0, 0, 0, 0, 0, 0", \
                            "0, 0, 0, 0, 0, 0, 0", \
                            "0, 0, 0, 0, 0, 0, 0", \
                            "0, 0, 0, 0, 0, 0, 0", \
                            "0, 0, 0, 0, 0, 0, 0", \
                            "0, 0, 0, 0, 0, 0, 0" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          index_2 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          values  ( \
                            "0.336985, 0.342969, 0.375804, 0.43725, 0.545039, 0.679316, 0.838057", \
                            "0.335203, 0.341462, 0.375353, 0.435919, 0.543169, 0.678084, 0.836143", \
                            "0.332728, 0.336985, 0.370887, 0.432256, 0.539132, 0.673948, 0.832634", \
                            "0.323961, 0.329912, 0.361251, 0.42372, 0.531113, 0.665258, 0.825253", \
                            "0.316745, 0.322817, 0.354574, 0.416042, 0.524876, 0.659802, 0.817597", \
                            "0.317779, 0.323411, 0.354981, 0.418187, 0.524942, 0.659846, 0.818257", \
                            "0.345444, 0.349437, 0.383207, 0.443498, 0.552332, 0.685674, 0.845482" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          index_2 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          values  ( \
                            "1.01598, 1.01272, 0.996215, 0.956747, 0.924979, 0.90838, 0.912065", \
                            "1.01644, 1.01298, 0.996688, 0.957242, 0.925452, 0.908853, 0.91256", \
                            "1.02228, 1.01972, 1.00223, 0.96415, 0.930985, 0.914386, 0.918082", \
                            "1.02999, 1.02567, 1.00964, 0.969991, 0.93841, 0.921822, 0.925485", \
                            "1.03644, 1.03267, 1.01619, 0.978109, 0.944955, 0.929423, 0.932041", \
                            "1.03429, 1.03165, 1.01452, 0.975084, 0.943283, 0.926684, 0.930402", \
                            "1.00739, 1.0037, 0.987624, 0.948178, 0.916399, 0.899833, 0.903496" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          index_2 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          values  ( \
                            "0.556611, 0.551276, 0.518045, 0.456225, 0.350559, 0.214612, 0.05621", \
                            "0.556842, 0.551034, 0.519079, 0.457974, 0.351054, 0.215303, 0.056705", \
                            "0.562166, 0.556567, 0.524425, 0.463045, 0.356565, 0.220716, 0.062227", \
                            "0.570097, 0.563948, 0.532477, 0.470734, 0.363957, 0.228107, 0.069619", \
                            "0.576664, 0.571252, 0.538923, 0.47729, 0.370535, 0.23478, 0.076186", \
                            "0.574486, 0.569239, 0.537284, 0.474551, 0.368874, 0.233025, 0.074547", \
                            "0.547756, 0.542685, 0.509839, 0.448745, 0.34199, 0.206125, 0.04763" \
                          )
                          }
                 }
          }
          bus(A)   {
                  bus_type             : A_BUS;
                  direction            : input;
                  capacitance          : 0.0322506;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          index_2 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          values  ( \
                            "0.678678, 0.672463, 0.664587, 0.696828, 0.734448, 0.754952, 0.784234", \
                            "0.672815, 0.670637, 0.664191, 0.696124, 0.73183, 0.751949, 0.78243", \
                            "0.668426, 0.666149, 0.65813, 0.691119, 0.728871, 0.751091, 0.777436", \
                            "0.664147, 0.659373, 0.651266, 0.684178, 0.719642, 0.743886, 0.771001", \
                            "0.654478, 0.652674, 0.646382, 0.675807, 0.715033, 0.738815, 0.763378", \
                            "0.655292, 0.652014, 0.647141, 0.677061, 0.712976, 0.735625, 0.764269", \
                            "0.682011, 0.679591, 0.671462, 0.703692, 0.739563, 0.762388, 0.791307" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          index_2 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          values  ( \
                            "0.818323, 0.824428, 0.846571, 0.897017, 0.989648, 1.09978, 1.23444", \
                            "0.815067, 0.821843, 0.842435, 0.894553, 0.987569, 1.09922, 1.23396", \
                            "0.812801, 0.818147, 0.839267, 0.889735, 0.983389, 1.09359, 1.22822", \
                            "0.804969, 0.811316, 0.833404, 0.882783, 0.977196, 1.08684, 1.22213", \
                            "0.797819, 0.804056, 0.825825, 0.87626, 0.969364, 1.07605, 1.21528", \
                            "0.79893, 0.80498, 0.826419, 0.879967, 0.969892, 1.08147, 1.2149", \
                            "0.826166, 0.831611, 0.8536, 0.903782, 0.996556, 1.10712, 1.24274" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          index_2 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          values  ( \
                            "0.607211, 0.611534, 0.607717, 0.590447, 0.588159, 0.589919, 0.587994", \
                            "0.615483, 0.618541, 0.614812, 0.597476, 0.595155, 0.60104, 0.594913", \
                            "0.635844, 0.638902, 0.635173, 0.61743, 0.615527, 0.621401, 0.615274", \
                            "0.674586, 0.677644, 0.673915, 0.656579, 0.654269, 0.660143, 0.654027", \
                            "0.726088, 0.729146, 0.725406, 0.707674, 0.70576, 0.710875, 0.705518", \
                            "0.770429, 0.773487, 0.769758, 0.752422, 0.750101, 0.755986, 0.749859", \
                            "0.779262, 0.78232, 0.778591, 0.761266, 0.758945, 0.764819, 0.758769" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          index_2 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          values  ( \
                            "0.632302, 0.627649, 0.603031, 0.579997, 0.569459, 0.571549, 0.579227", \
                            "0.639298, 0.63459, 0.609829, 0.587268, 0.576466, 0.578413, 0.586223", \
                            "0.659538, 0.655006, 0.630168, 0.607365, 0.596827, 0.598774, 0.606826", \
                            "0.698346, 0.693759, 0.668899, 0.646107, 0.635569, 0.637527, 0.645524", \
                            "0.749903, 0.74525, 0.7205, 0.697609, 0.687071, 0.689403, 0.69707", \
                            "0.79409, 0.789591, 0.764731, 0.738936, 0.731412, 0.733359, 0.741411", \
                            "0.802956, 0.798435, 0.773597, 0.750783, 0.740245, 0.742203, 0.7502" \
                          )
                          }
                 }
          }
          bus(D)   {
                  bus_type             : Q_BUS;
                  memory_write() {
                          address      : A;
                          clocked_on   : "CLK";
                  }
                  direction            : input;
                  capacitance          : 0.0155981;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          index_2 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          values  ( \
                            "0.577412, 0.582824, 0.600094, 0.605957, 0.585772, 0.541156, 0.465509", \
                            "0.575894, 0.580448, 0.594143, 0.60324, 0.584221, 0.540397, 0.463826", \
                            "0.570306, 0.575619, 0.591866, 0.599214, 0.58201, 0.534919, 0.459635", \
                            "0.565895, 0.568975, 0.584595, 0.586729, 0.574904, 0.528561, 0.450758", \
                            "0.558756, 0.560109, 0.576026, 0.584782, 0.567325, 0.521532, 0.4455", \
                            "0.557337, 0.561704, 0.578985, 0.583176, 0.566632, 0.520729, 0.446281", \
                            "0.584452, 0.587884, 0.605176, 0.613129, 0.592702, 0.547008, 0.47003" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          index_2 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          values  ( \
                            "0.144474, 0.136658, 0.171053, 0.248998, 0.371096, 0.530123, 0.728926", \
                            "0.142708, 0.137889, 0.169137, 0.247223, 0.369369, 0.528396, 0.727199", \
                            "0.138219, 0.133389, 0.164654, 0.243037, 0.364892, 0.523897, 0.722711", \
                            "0.131261, 0.126446, 0.157715, 0.235804, 0.357951, 0.516967, 0.714483", \
                            "0.124142, 0.116292, 0.150705, 0.228612, 0.350757, 0.509773, 0.708576", \
                            "0.124868, 0.119332, 0.151448, 0.229382, 0.351538, 0.510554, 0.709357", \
                            "0.15177, 0.144109, 0.177957, 0.256104, 0.378202, 0.537229, 0.736032" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          index_2 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          values  ( \
                            "0.541266, 0.532774, 0.519937, 0.51293, 0.52976, 0.573518, 0.650661", \
                            "0.54263, 0.537449, 0.522698, 0.515614, 0.532444, 0.576532, 0.650067", \
                            "0.54637, 0.541805, 0.5258, 0.518705, 0.536052, 0.580624, 0.653158", \
                            "0.551892, 0.549835, 0.531047, 0.527065, 0.54406, 0.589314, 0.665104", \
                            "0.561627, 0.55858, 0.541497, 0.534402, 0.551705, 0.594913, 0.668855", \
                            "0.560417, 0.555302, 0.540551, 0.533456, 0.550297, 0.594385, 0.667909", \
                            "0.533049, 0.527934, 0.513194, 0.506022, 0.522973, 0.56804, 0.640563" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          index_2 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          values  ( \
                            "0.790823, 0.794794, 0.764313, 0.68563, 0.563321, 0.405328, 0.208989", \
                            "0.793507, 0.797467, 0.766997, 0.688314, 0.566005, 0.408001, 0.211674", \
                            "0.796631, 0.800569, 0.770099, 0.691416, 0.569107, 0.411103, 0.214773", \
                            "0.805299, 0.809259, 0.778767, 0.700073, 0.577775, 0.419771, 0.22344", \
                            "0.812317, 0.816255, 0.785785, 0.707102, 0.584804, 0.4268, 0.230463", \
                            "0.81136, 0.815331, 0.78485, 0.706167, 0.583858, 0.425854, 0.229526", \
                            "0.784003, 0.787974, 0.757493, 0.67881, 0.556501, 0.398497, 0.202168" \
                          )
                          }
                 }
        }
          cell_leakage_power : 0.00370476;
}
}
