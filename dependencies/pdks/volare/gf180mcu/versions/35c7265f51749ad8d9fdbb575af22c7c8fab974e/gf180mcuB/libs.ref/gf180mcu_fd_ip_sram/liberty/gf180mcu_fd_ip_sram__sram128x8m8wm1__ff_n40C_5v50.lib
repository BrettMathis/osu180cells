/*
 * Copyright 2022 GlobalFoundries PDK Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 *      Single Port SRAM cell name : gf180mcu_fd_ip_sram__sram128x8m8wm1
 *      Technology                 : GF 180nm 5V Green
 *
 *      ---------
 *      Pin name:
 *      ---------
 *      Input Pins : CLK CEN GWEN WEN[7:0] A[6:0] D[7:0]
 *      Inout Pins:  VDD VSS
 *      Output Pins: Q[7:0]
 *
 *     Revision History: 1.0 (Initial Release: June 20, 2014)
 */

library(gf180mcu_fd_ip_sram__sram128x8m8wm1__ff_n40C_5v50) {
        delay_model             : table_lookup;
        revision                : 1.0;
        date                    : "June 20, 2014";
        comment                 : "GF 180nm 5V Green";
        voltage_unit            : "1V";
        time_unit               : "1ns";
        current_unit            : "1mA";
        leakage_power_unit      : "1mW";
        nom_process             : 1;
        nom_temperature         : -40;
        nom_voltage             : 5.5;
        capacitive_load_unit    (1,pf);
        pulling_resistance_unit : "1kohm";

        /* additional header data */
        default_fanout_load            : 1;
        default_inout_pin_cap          : 0.045;
        default_input_pin_cap          : 0.045;
        default_output_pin_cap         : 0;
        default_max_transition         : 1.087;
        default_cell_leakage_power     : 0;

         /* default attributes */
         slew_derate_from_library      : 1.000;
         slew_lower_threshold_pct_fall : 10.000;
         slew_upper_threshold_pct_fall : 90.000;
         slew_lower_threshold_pct_rise : 10.000;
         slew_upper_threshold_pct_rise : 90.000;
         input_threshold_pct_fall      : 50.000;
         input_threshold_pct_rise      : 50.000;
         output_threshold_pct_fall     : 50.000;
         output_threshold_pct_rise     : 50.000;
         default_leakage_power_density : 0;

        /* k-factors */
        k_process_recovery_fall        : 1;
        k_process_recovery_rise        : 1;
        k_process_cell_fall            : 1;
        k_process_cell_leakage_power   : 0;
        k_process_cell_rise            : 1;
        k_process_fall_transition      : 1;
        k_process_hold_fall            : 1;
        k_process_hold_rise            : 1;
        k_process_internal_power       : 0;
        k_process_min_pulse_width_high : 1;
        k_process_min_pulse_width_low  : 1;
        k_process_setup_fall           : 1;
        k_process_setup_rise           : 1;
        k_process_wire_cap             : 0;
        k_process_wire_res             : 0;
        k_process_pin_cap              : 0;
        k_process_rise_transition      : 1;
        k_temp_cell_fall               : 0.000;
        k_temp_cell_rise               : 0.000;
        k_temp_hold_fall               : 0.000;
        k_temp_hold_rise               : 0.000;
        k_temp_min_pulse_width_high    : 0.000;
        k_temp_min_pulse_width_low     : 0.000;
        k_temp_min_period              : 0.000;
        k_temp_rise_propagation        : 0.000;
        k_temp_fall_propagation        : 0.000;
        k_temp_rise_transition         : 0.000;
        k_temp_fall_transition         : 0.000;
        k_temp_recovery_fall           : 0.000;
        k_temp_recovery_rise           : 0.000;
        k_temp_setup_fall              : 0.000;
        k_temp_setup_rise              : 0.000;
        k_volt_cell_fall               : 0.000;
        k_volt_cell_rise               : 0.000;
        k_volt_hold_fall               : 0.000;
        k_volt_hold_rise               : 0.000;
        k_volt_min_pulse_width_high    : 0.000;
        k_volt_min_pulse_width_low     : 0.000;
        k_volt_min_period              : 0.000;
        k_volt_recovery_fall           : 0.000;
        k_volt_recovery_rise           : 0.000;
        k_volt_setup_fall              : 0.000;
        k_volt_setup_rise              : 0.000;
        k_volt_rise_propagation        : 0.000;
        k_volt_fall_propagation        : 0.000;
        k_volt_rise_transition         : 0.000;
        k_volt_fall_transition         : 0.000;

         voltage_map (VDD, 5.5);
         voltage_map (VSS, 0.00);
         operating_conditions(ff_5p5v_m40C) {
                process       : 1;
                temperature   : -40;
                voltage       : 5.5;
                tree_type     : balanced_tree;
         }

         default_operating_conditions : ff_5p5v_m40C;
         wire_load("Estimate") {
                resistance    : 1.44e-05;
                capacitance   : 0.00018;
                area          : 1.7;
                slope         : 500;
                fanout_length (1,500);
         }
         power_lut_template(power_template) {
            variable_1 : input_transition_time;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(q_delay_template) {
            variable_1 : input_net_transition;
            variable_2 : total_output_net_capacitance;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
                 index_2 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(q_slew_template) {
            variable_1 : total_output_net_capacitance;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(constraint_template) {
            variable_1 : related_pin_transition;
            variable_2 : constrained_pin_transition;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
                 index_2 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }

         library_features(report_delay_calculation);

         type (A_BUS) {
                base_type : array;
                data_type : bit;
                bit_width : 7;
                bit_from  : 6;
                bit_to    : 0;
                downto    : true;
         }
         type (Q_BUS) {
                base_type : array;
                data_type : bit;
                bit_width : 8;
                bit_from  : 7;
                bit_to    : 0;
                downto    : true;
         }
 cell(gf180mcu_fd_ip_sram__sram128x8m8wm1) {
        area             : 116118.5168;
        dont_use         : TRUE;
        dont_touch       : TRUE;
        interface_timing : TRUE;
        memory() {
                type          : ram;
                address_width : 7;
                word_width    : 8;
        }

                 bus(Q)   {
                  bus_type             : Q_BUS;
                  direction            : output;
                  max_capacitance      : 1.165;
                  memory_read() {
                        address        : A;
                  }
                  timing() {
                          related_pin  : "CLK";
                          timing_type  : rising_edge;
                          timing_sense : non_unate;
       		  when : "((!CEN) & (GWEN))";
        	  sdf_cond : "CEN== 1'b0 && GWEN== 1'b1";
                          cell_rise(q_delay_template) {
			  index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
			  index_2 ("0.01, 0.03078, 0.1037, 0.243, 0.4599, 0.7643, 1.165");
                          values  ( \
                            "2.84268, 2.85732, 2.89716, 2.96664, 3.072, 3.21792, 3.40968", \
                            "2.84388, 2.85888, 2.89632, 2.96712, 3.07116, 3.21804, 3.40944", \
                            "2.84232, 2.85588, 2.8962, 2.96652, 3.06984, 3.21552, 3.40836", \
                            "2.8482, 2.8614, 2.90088, 2.97036, 3.0744, 3.22128, 3.41496", \
                            "2.85384, 2.86764, 2.90988, 2.979, 3.08484, 3.22716, 3.42192", \
                            "2.85372, 2.86848, 2.90772, 2.97876, 3.0822, 3.22704, 3.4188", \
                            "2.84988, 2.86068, 2.90052, 2.96988, 3.07164, 3.21624, 3.41412" \
                          )
                          }
                          rise_transition(q_slew_template) {
                          index_1 ("0.01, 0.03078, 0.1037, 0.243, 0.4599, 0.7643, 1.165");
                          values  ( \
  	                     "0.11136, 0.127308, 0.19266, 0.318288, 0.521664, 0.817188, 1.20636" \
                          )

                          }
                          cell_fall(q_delay_template) {
                          index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          index_2 ("0.01, 0.03078, 0.1037, 0.243, 0.4599, 0.7643, 1.165");
                          values  ( \
                            "2.93004, 2.94672, 2.98656, 3.0492, 3.13368, 3.24096, 3.37872", \
                            "2.93208, 2.94624, 2.98848, 3.04896, 3.13344, 3.23964, 3.37824", \
                            "2.93028, 2.94636, 2.98464, 3.05064, 3.1338, 3.23904, 3.3762", \
                            "2.9346, 2.95008, 2.9898, 3.05388, 3.13656, 3.2436, 3.38316", \
                            "2.9436, 2.95836, 2.99892, 3.0612, 3.14544, 3.25164, 3.39204", \
                            "2.94264, 2.95788, 2.99844, 3.06324, 3.14544, 3.25284, 3.3894", \
                            "2.93724, 2.9496, 2.99088, 3.05328, 3.13596, 3.24144, 3.38352" \
                          )
                          }
                          fall_transition(q_slew_template) {
                          index_1 ("0.01, 0.03078, 0.1037, 0.243, 0.4599, 0.7643, 1.165");
                          values  ( \
                            "0.11329, 0.129156, 0.175428, 0.253704, 0.373716, 0.54708, 0.775368" \
                          )
                          }
                  }
          }
          pin(CLK)   {
                  direction            : input;
                  capacitance          : 0.284021;
                  clock                : true;
                  max_transition       : 1.087;
                  min_pulse_width_high : 1.4110335;
                  min_pulse_width_low  : 1.30293;
                  min_period           : 3.809895;

/* WRITE POWER */
             internal_power() {
              when : "!CEN & !GWEN & (!WEN[0] | !WEN[1] | !WEN[2] | !WEN[3] | !WEN[4] | !WEN[5] | !WEN[6] | !WEN[7])";
              rise_power(power_template) {
                index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                values  ("1091.34, 1091.34, 1091.34, 1091.34, 1091.34, 1091.34, 1091.34");
              }
              fall_power(power_template) {
                index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                values  ("1091.34, 1091.34, 1091.34, 1091.34, 1091.34, 1091.34, 1091.34");
              }
             }
/* DISABLED POWER */
             internal_power() {
              when : "CEN";
              rise_power(power_template) {
                index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                values  ("0.000244332, 0.000244332, 0.000244332, 0.000244332, 0.000244332, 0.000244332, 0.000244332");
              }
              fall_power(power_template) {
                index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                values  ("0.000244332, 0.000244332, 0.000244332, 0.000244332, 0.000244332, 0.000244332, 0.000244332");
              }
             }
/* READ POWER */
             internal_power() {
             when : "!CEN & GWEN";
             rise_power(power_template) {
                index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                values  ("983.758, 983.758, 983.758, 983.758, 983.758, 983.758, 983.758");
              }
              fall_power(power_template) {
                index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                values  ("983.758, 983.758, 983.758, 983.758, 983.758, 983.758, 983.758");
              }
             }
          }

          pg_pin(VDD) {
                  voltage_name     : VDD;
                  pg_type          : primary_power;
          }
          pg_pin(VSS) {
                  voltage_name     : VSS;
                  pg_type          : primary_ground;
          }
          pin(CEN)   {
                  direction            : input;
                  capacitance          : 0.0164412;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          index_2 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          values  ( \
                            "0.337205, 0.334785, 0.328614, 0.331815, 0.348293, 0.366619, 0.388102", \
                            "0.337568, 0.334609, 0.328735, 0.331155, 0.348117, 0.364716, 0.385231", \
                            "0.336963, 0.334367, 0.328603, 0.331397, 0.347292, 0.363209, 0.374715", \
                            "0.336765, 0.333157, 0.328306, 0.331199, 0.347677, 0.363, 0.377223", \
                            "0.336105, 0.333146, 0.327723, 0.330935, 0.347413, 0.362736, 0.376167", \
                            "0.336908, 0.333487, 0.327657, 0.330869, 0.347347, 0.362681, 0.375815", \
                            "0.336754, 0.333894, 0.327712, 0.330924, 0.347402, 0.366795, 0.388267" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          index_2 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          values  ( \
                            "0.323345, 0.323862, 0.330198, 0.344542, 0.376156, 0.416163, 0.461274", \
                            "0.323114, 0.323664, 0.33011, 0.344355, 0.375969, 0.415976, 0.461087", \
                            "0.322894, 0.323433, 0.329274, 0.344036, 0.375738, 0.415745, 0.460856", \
                            "0.32274, 0.32329, 0.329703, 0.343915, 0.375892, 0.415536, 0.460647", \
                            "0.322234, 0.322971, 0.328185, 0.343574, 0.37191, 0.413809, 0.460383", \
                            "0.322366, 0.322916, 0.328097, 0.343508, 0.37521, 0.415217, 0.460328", \
                            "0.322443, 0.322971, 0.329296, 0.342881, 0.375606, 0.415261, 0.460372" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          index_2 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          values  ( \
                            "0.764687, 0.767107, 0.773289, 0.770077, 0.753599, 0.738276, 0.724845", \
                            "0.766876, 0.769835, 0.775709, 0.773289, 0.756327, 0.741004, 0.728662", \
                            "0.772948, 0.775533, 0.781308, 0.778514, 0.762619, 0.746702, 0.737693", \
                            "0.789998, 0.793606, 0.798457, 0.795564, 0.779086, 0.763763, 0.74954", \
                            "0.814297, 0.817245, 0.822668, 0.819456, 0.802978, 0.787655, 0.774235", \
                            "0.830951, 0.834383, 0.840202, 0.837001, 0.820512, 0.805189, 0.792055", \
                            "0.833998, 0.836858, 0.84304, 0.839828, 0.82335, 0.808027, 0.794607" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          index_2 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          values  ( \
                            "0.778558, 0.77803, 0.771694, 0.757361, 0.725736, 0.68574, 0.640629", \
                            "0.78133, 0.780769, 0.774323, 0.760089, 0.728464, 0.688468, 0.643346", \
                            "0.787017, 0.786478, 0.780637, 0.765875, 0.734173, 0.694166, 0.649055", \
                            "0.804023, 0.803473, 0.79706, 0.782837, 0.750871, 0.711216, 0.666105", \
                            "0.828157, 0.82742, 0.822217, 0.806828, 0.778492, 0.736582, 0.690008", \
                            "0.845504, 0.844954, 0.839773, 0.824351, 0.79266, 0.752653, 0.707542", \
                            "0.848309, 0.847781, 0.841456, 0.827871, 0.795146, 0.755491, 0.71038" \
                          )
                          }
                 }
          }
          pin(GWEN)   {
                  direction            : input;
                  capacitance          : 0.0487739;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          index_2 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          values  ( \
                            "0.434357, 0.4367, 0.443784, 0.461637, 0.49544, 0.531773, 0.569338", \
                            "0.432245, 0.434632, 0.441705, 0.460108, 0.493361, 0.529694, 0.56727", \
                            "0.42647, 0.428813, 0.436524, 0.453871, 0.487553, 0.52404, 0.561462", \
                            "0.408716, 0.410531, 0.418704, 0.436051, 0.46948, 0.506066, 0.543642", \
                            "0.379533, 0.381293, 0.388773, 0.407011, 0.440429, 0.476762, 0.514327", \
                            "0.352308, 0.354552, 0.361702, 0.379533, 0.413116, 0.449427, 0.487278", \
                            "0.332101, 0.334345, 0.341198, 0.359425, 0.392964, 0.42955, 0.467126" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          index_2 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          values  ( \
                            "0.454388, 0.456841, 0.468831, 0.495957, 0.541728, 0.603592, 0.675983", \
                            "0.451935, 0.454927, 0.466796, 0.494076, 0.538538, 0.601524, 0.67397", \
                            "0.446512, 0.448987, 0.460889, 0.488268, 0.532741, 0.595716, 0.668107", \
                            "0.428747, 0.431178, 0.443069, 0.470943, 0.51491, 0.577885, 0.650342", \
                            "0.399377, 0.402182, 0.413479, 0.440946, 0.484495, 0.546557, 0.621027", \
                            "0.372031, 0.374847, 0.386782, 0.414491, 0.458557, 0.521521, 0.593967", \
                            "0.352176, 0.354783, 0.365937, 0.393888, 0.438394, 0.50138, 0.573826" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          index_2 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          values  ( \
                            "0.596475, 0.595837, 0.589996, 0.573507, 0.554444, 0.537614, 0.524183", \
                            "0.597993, 0.597355, 0.591173, 0.574508, 0.555962, 0.539132, 0.525701", \
                            "0.598884, 0.598246, 0.59202, 0.575663, 0.556853, 0.540023, 0.526592", \
                            "0.601722, 0.60027, 0.594594, 0.578743, 0.55968, 0.54285, 0.529419", \
                            "0.6061, 0.604439, 0.599016, 0.582912, 0.563849, 0.547019, 0.533588", \
                            "0.608069, 0.607431, 0.600952, 0.58509, 0.566027, 0.548955, 0.536701", \
                            "0.599764, 0.599126, 0.592394, 0.57684, 0.557733, 0.540903, 0.527461" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          index_2 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          values  ( \
                            "0.365398, 0.363396, 0.351252, 0.322828, 0.278872, 0.218927, 0.153014", \
                            "0.366718, 0.365024, 0.351912, 0.323499, 0.281039, 0.220447, 0.154658", \
                            "0.367719, 0.365959, 0.352682, 0.324401, 0.28193, 0.221339, 0.15542", \
                            "0.369996, 0.368742, 0.355663, 0.328526, 0.284746, 0.224104, 0.158257", \
                            "0.374825, 0.372537, 0.359744, 0.332024, 0.287947, 0.229873, 0.162484", \
                            "0.400477, 0.398035, 0.386089, 0.357676, 0.311707, 0.251318, 0.183154", \
                            "0.434379, 0.432003, 0.420596, 0.392304, 0.345609, 0.285219, 0.217055" \
                          )
                          }
                 }
          }
          bus(WEN)   {
                  bus_type             : Q_BUS;
                  direction            : input;
                  capacitance          : 0.00761544;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          index_2 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          values  ( \
                            "0, 0, 0, 0.01397, 0.033869, 0.049368, 0.0610247", \
                            "0, 0, 0, 0.012848, 0.032747, 0.048235, 0.0598939", \
                            "0, 0, 0, 0.012067, 0.031966, 0.047388, 0.0590436", \
                            "0, 0, 0, 0.009317, 0.029216, 0.044715, 0.0563728", \
                            "0, 0, 0, 0.005313, 0.025212, 0.040425, 0.05236", \
                            "0, 0, 0, 0.003058, 0.022957, 0.038357, 0.04983", \
                            "0, 0, 0, 0.011055, 0.030943, 0.046156, 0.0578281" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          index_2 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          values  ( \
                            "0.221842, 0.223793, 0.235378, 0.264569, 0.307813, 0.368522, 0.434148", \
                            "0.220168, 0.223108, 0.235157, 0.26322, 0.306383, 0.367114, 0.433323", \
                            "0.219473, 0.222361, 0.234399, 0.263281, 0.305844, 0.366366, 0.432322", \
                            "0.217879, 0.219695, 0.231242, 0.259961, 0.303193, 0.363737, 0.430265", \
                            "0.212961, 0.215436, 0.227505, 0.256047, 0.299992, 0.357995, 0.42603", \
                            "0.210671, 0.213415, 0.225227, 0.252545, 0.296901, 0.357566, 0.423731", \
                            "0.218425, 0.22076, 0.232232, 0.261547, 0.304832, 0.365706, 0.431552" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          index_2 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          values  ( \
                            "0.596475, 0.595837, 0.589996, 0.573507, 0.554444, 0.537614, 0.524183", \
                            "0.597993, 0.597355, 0.591173, 0.574508, 0.555962, 0.539132, 0.525701", \
                            "0.598884, 0.598246, 0.59202, 0.575663, 0.556853, 0.540023, 0.526592", \
                            "0.601722, 0.600292, 0.594594, 0.578743, 0.55968, 0.54285, 0.529419", \
                            "0.6061, 0.60445, 0.599016, 0.582912, 0.563849, 0.547019, 0.533588", \
                            "0.608069, 0.607431, 0.600952, 0.58509, 0.566027, 0.548955, 0.536701", \
                            "0.599764, 0.599126, 0.592394, 0.57684, 0.557733, 0.540903, 0.527461" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          index_2 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          values  ( \
                            "0.365398, 0.363396, 0.352352, 0.322828, 0.278872, 0.218927, 0.153014", \
                            "0.366718, 0.365024, 0.352979, 0.323763, 0.281039, 0.220447, 0.154658", \
                            "0.367719, 0.365959, 0.353859, 0.324588, 0.28193, 0.221339, 0.15542", \
                            "0.369996, 0.368742, 0.356686, 0.328526, 0.284746, 0.224104, 0.158257", \
                            "0.374858, 0.372537, 0.360635, 0.332024, 0.287947, 0.229873, 0.162484", \
                            "0.376772, 0.375001, 0.363055, 0.33484, 0.291126, 0.230519, 0.164667", \
                            "0.36861, 0.366784, 0.355641, 0.325699, 0.282788, 0.22221, 0.156364" \
                          )
                          }
                 }
          }
          bus(A)   {
                  bus_type             : A_BUS;
                  direction            : input;
                  capacitance          : 0.0362813;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          index_2 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          values  ( \
                            "0.383438, 0.377817, 0.373945, 0.387541, 0.404723, 0.42691, 0.451462", \
                            "0.381183, 0.376684, 0.37213, 0.385715, 0.40282, 0.426811, 0.449592", \
                            "0.38093, 0.375232, 0.371745, 0.385308, 0.403535, 0.426239, 0.44935", \
                            "0.378653, 0.374495, 0.369743, 0.383119, 0.399883, 0.422268, 0.44814", \
                            "0.373571, 0.36927, 0.364991, 0.377905, 0.395626, 0.417692, 0.442189", \
                            "0.372306, 0.367114, 0.363638, 0.376178, 0.391952, 0.414876, 0.438141", \
                            "0.379236, 0.373989, 0.370326, 0.384054, 0.403293, 0.425161, 0.448041" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          index_2 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          values  ( \
                            "0.533731, 0.535535, 0.541739, 0.556237, 0.591965, 0.640893, 0.700381", \
                            "0.53339, 0.533896, 0.539968, 0.554532, 0.58971, 0.639199, 0.698148", \
                            "0.531707, 0.533049, 0.539396, 0.55374, 0.589061, 0.63899, 0.698115", \
                            "0.530167, 0.530706, 0.536877, 0.551529, 0.58641, 0.636669, 0.6952", \
                            "0.52525, 0.525723, 0.530948, 0.546293, 0.581548, 0.631554, 0.690261", \
                            "0.523666, 0.524557, 0.529518, 0.544511, 0.579535, 0.629651, 0.688677", \
                            "0.5313, 0.532158, 0.537713, 0.553102, 0.588159, 0.637681, 0.696762" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          index_2 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          values  ( \
                            "0.401313, 0.405108, 0.407561, 0.406252, 0.408881, 0.40997, 0.410333", \
                            "0.404514, 0.408232, 0.410773, 0.409464, 0.412093, 0.413171, 0.413545", \
                            "0.41107, 0.414865, 0.417329, 0.41602, 0.418649, 0.419727, 0.42009", \
                            "0.428076, 0.431959, 0.434203, 0.433103, 0.435743, 0.437448, 0.437184", \
                            "0.453772, 0.457578, 0.459745, 0.458722, 0.461351, 0.463056, 0.462803", \
                            "0.47806, 0.481866, 0.48411, 0.48301, 0.485639, 0.486728, 0.487091", \
                            "0.501336, 0.505142, 0.507309, 0.506286, 0.508915, 0.509993, 0.510367" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          index_2 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          values  ( \
                            "0.407066, 0.405746, 0.399223, 0.396792, 0.400807, 0.407407, 0.411598", \
                            "0.410278, 0.409013, 0.40249, 0.400004, 0.404019, 0.410608, 0.414799", \
                            "0.416812, 0.415558, 0.409046, 0.406549, 0.410564, 0.417219, 0.421355", \
                            "0.434049, 0.432894, 0.426151, 0.423643, 0.427669, 0.434313, 0.438449", \
                            "0.459668, 0.45837, 0.452166, 0.449262, 0.453277, 0.459921, 0.464002", \
                            "0.483813, 0.482482, 0.47641, 0.47355, 0.477565, 0.484209, 0.488345", \
                            "0.507078, 0.505802, 0.499477, 0.494538, 0.50083, 0.507485, 0.511621" \
                          )
                          }
                 }
          }
          bus(D)   {
                  bus_type             : Q_BUS;
                  memory_write() {
                          address      : A;
                          clocked_on   : "CLK";
                  }
                  direction            : input;
                  capacitance          : 0.0157485;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          index_2 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          values  ( \
                            "0.358974, 0.362274, 0.368203, 0.372636, 0.36586, 0.349932, 0.31779", \
                            "0.359106, 0.360877, 0.367246, 0.370557, 0.364606, 0.348249, 0.315579", \
                            "0.356752, 0.360426, 0.365761, 0.369996, 0.363649, 0.346632, 0.315282", \
                            "0.356851, 0.358512, 0.364232, 0.368346, 0.361493, 0.344949, 0.312917", \
                            "0.351406, 0.352066, 0.358842, 0.36344, 0.356532, 0.338976, 0.308231", \
                            "0.349415, 0.351087, 0.358006, 0.361515, 0.355014, 0.338756, 0.306779", \
                            "0.35684, 0.358765, 0.365321, 0.369116, 0.362153, 0.346071, 0.314391" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          index_2 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          values  ( \
                            "0.128488, 0.130613, 0.14407, 0.180507, 0.235664, 0.310827, 0.4037", \
                            "0.126837, 0.12855, 0.142428, 0.17882, 0.234046, 0.309199, 0.402259", \
                            "0.126225, 0.128363, 0.14184, 0.177062, 0.233417, 0.308561, 0.401555", \
                            "0.123963, 0.126184, 0.139575, 0.17626, 0.231164, 0.306196, 0.399333", \
                            "0.119049, 0.120782, 0.134659, 0.170392, 0.226219, 0.301433, 0.394427", \
                            "0.11714, 0.119397, 0.132883, 0.169156, 0.224528, 0.299607, 0.392436", \
                            "0.124781, 0.126675, 0.140572, 0.177007, 0.23218, 0.307329, 0.400213" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          index_2 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          values  ( \
                            "0.363066, 0.361515, 0.355333, 0.350273, 0.357335, 0.374759, 0.405405", \
                            "0.364452, 0.362824, 0.356565, 0.35156, 0.358952, 0.376057, 0.406703", \
                            "0.363242, 0.362956, 0.356455, 0.35123, 0.35882, 0.376255, 0.406901", \
                            "0.367279, 0.365552, 0.359942, 0.354915, 0.361669, 0.379478, 0.409299", \
                            "0.372086, 0.370447, 0.363374, 0.359502, 0.366553, 0.383625, 0.414315", \
                            "0.373483, 0.371734, 0.365409, 0.360789, 0.367268, 0.383933, 0.414799", \
                            "0.366663, 0.364749, 0.357929, 0.353881, 0.361097, 0.378037, 0.408683" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          index_2 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          values  ( \
                            "0.484264, 0.482372, 0.468446, 0.432157, 0.376959, 0.302104, 0.209926", \
                            "0.485562, 0.48422, 0.469755, 0.433455, 0.378257, 0.303402, 0.211226", \
                            "0.48576, 0.483868, 0.469942, 0.433653, 0.378444, 0.3036, 0.211417", \
                            "0.488862, 0.48697, 0.473033, 0.436744, 0.381546, 0.306856, 0.214516", \
                            "0.493163, 0.491271, 0.477345, 0.441067, 0.385869, 0.311014, 0.21883", \
                            "0.494703, 0.492624, 0.478709, 0.44242, 0.387156, 0.312367, 0.220187", \
                            "0.48774, 0.485639, 0.471724, 0.435435, 0.380237, 0.305382, 0.213202" \
                          )
                          }
                 }
        }
          cell_leakage_power : 0.000244332;
}
}
