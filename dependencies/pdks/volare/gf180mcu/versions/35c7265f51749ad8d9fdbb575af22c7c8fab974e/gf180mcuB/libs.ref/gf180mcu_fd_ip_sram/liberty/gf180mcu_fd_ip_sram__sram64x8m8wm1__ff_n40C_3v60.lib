/*
 * Copyright 2022 GlobalFoundries PDK Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 *      Single Port SRAM cell name : gf180mcu_fd_ip_sram__sram64x8m8wm1
 *      Technology                 : GF 180nm 5V Green
 *
 *      ---------
 *      Pin name:
 *      ---------
 *      Input Pins : CLK CEN GWEN WEN[7:0] A[5:0] D[7:0]
 *      Inout Pins:  VDD VSS
 *      Output Pins: Q[7:0]
 *
 *     Revision History: 1.0 (Initial Release: June 20, 2014)
 */

library(gf180mcu_fd_ip_sram__sram64x8m8wm1__ff_n40C_3v60) {
        delay_model             : table_lookup;
        revision                : 1.0;
        date                    : "June 20, 2014";
        comment                 : "GF 180nm 5V Green";
        voltage_unit            : "1V";
        time_unit               : "1ns";
        current_unit            : "1mA";
        leakage_power_unit      : "1mW";
        nom_process             : 1;
        nom_temperature         : -40;
        nom_voltage             : 3.6;
        capacitive_load_unit    (1,pf);
        pulling_resistance_unit : "1kohm";

        /* additional header data */
        default_fanout_load            : 1;
        default_inout_pin_cap          : 0.045;
        default_input_pin_cap          : 0.045;
        default_output_pin_cap         : 0;
        default_max_transition         : 1.7498;
        default_cell_leakage_power     : 0;

         /* default attributes */
         slew_derate_from_library      : 1.000;
         slew_lower_threshold_pct_fall : 10.000;
         slew_upper_threshold_pct_fall : 90.000;
         slew_lower_threshold_pct_rise : 10.000;
         slew_upper_threshold_pct_rise : 90.000;
         input_threshold_pct_fall      : 50.000;
         input_threshold_pct_rise      : 50.000;
         output_threshold_pct_fall     : 50.000;
         output_threshold_pct_rise     : 50.000;
         default_leakage_power_density : 0;

        /* k-factors */
        k_process_recovery_fall        : 1;
        k_process_recovery_rise        : 1;
        k_process_cell_fall            : 1;
        k_process_cell_leakage_power   : 0;
        k_process_cell_rise            : 1;
        k_process_fall_transition      : 1;
        k_process_hold_fall            : 1;
        k_process_hold_rise            : 1;
        k_process_internal_power       : 0;
        k_process_min_pulse_width_high : 1;
        k_process_min_pulse_width_low  : 1;
        k_process_setup_fall           : 1;
        k_process_setup_rise           : 1;
        k_process_wire_cap             : 0;
        k_process_wire_res             : 0;
        k_process_pin_cap              : 0;
        k_process_rise_transition      : 1;
        k_temp_cell_fall               : 0.000;
        k_temp_cell_rise               : 0.000;
        k_temp_hold_fall               : 0.000;
        k_temp_hold_rise               : 0.000;
        k_temp_min_pulse_width_high    : 0.000;
        k_temp_min_pulse_width_low     : 0.000;
        k_temp_min_period              : 0.000;
        k_temp_rise_propagation        : 0.000;
        k_temp_fall_propagation        : 0.000;
        k_temp_rise_transition         : 0.000;
        k_temp_fall_transition         : 0.000;
        k_temp_recovery_fall           : 0.000;
        k_temp_recovery_rise           : 0.000;
        k_temp_setup_fall              : 0.000;
        k_temp_setup_rise              : 0.000;
        k_volt_cell_fall               : 0.000;
        k_volt_cell_rise               : 0.000;
        k_volt_hold_fall               : 0.000;
        k_volt_hold_rise               : 0.000;
        k_volt_min_pulse_width_high    : 0.000;
        k_volt_min_pulse_width_low     : 0.000;
        k_volt_min_period              : 0.000;
        k_volt_recovery_fall           : 0.000;
        k_volt_recovery_rise           : 0.000;
        k_volt_setup_fall              : 0.000;
        k_volt_setup_rise              : 0.000;
        k_volt_rise_propagation        : 0.000;
        k_volt_fall_propagation        : 0.000;
        k_volt_rise_transition         : 0.000;
        k_volt_fall_transition         : 0.000;

         voltage_map (VDD, 3.6);
         voltage_map (VSS, 0.00);
         operating_conditions(ff_3p6v_m40C) {
                process       : 1;
                temperature   : -40;
                voltage       : 3.6;
                tree_type     : balanced_tree;
         }

         default_operating_conditions : ff_3p6v_m40C;
         wire_load("Estimate") {
                resistance    : 1.44e-05;
                capacitance   : 0.00018;
                area          : 1.7;
                slope         : 500;
                fanout_length (1,500);
         }
         power_lut_template(power_template) {
            variable_1 : input_transition_time;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(q_delay_template) {
            variable_1 : input_net_transition;
            variable_2 : total_output_net_capacitance;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
                 index_2 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(q_slew_template) {
            variable_1 : total_output_net_capacitance;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(constraint_template) {
            variable_1 : related_pin_transition;
            variable_2 : constrained_pin_transition;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
                 index_2 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }

         library_features(report_delay_calculation);

         type (A_BUS) {
                base_type : array;
                data_type : bit;
                bit_width : 6;
                bit_from  : 5;
                bit_to    : 0;
                downto    : true;
         }
         type (Q_BUS) {
                base_type : array;
                data_type : bit;
                bit_width : 8;
                bit_from  : 7;
                bit_to    : 0;
                downto    : true;
         }
 cell(gf180mcu_fd_ip_sram__sram64x8m8wm1) {
        area             : 100571.5568;
        dont_use         : TRUE;
        dont_touch       : TRUE;
        interface_timing : TRUE;
        memory() {
                type          : ram;
                address_width : 6;
                word_width    : 8;
        }

                 bus(Q)   {
                  bus_type             : Q_BUS;
                  direction            : output;
                  max_capacitance      : 1.0614;
                  memory_read() {
                        address        : A;
                  }
                  timing() {
                          related_pin  : "CLK";
                          timing_type  : rising_edge;
                          timing_sense : non_unate;
       		  when : "((!CEN) & (GWEN))";
        	  sdf_cond : "CEN== 1'b0 && GWEN== 1'b1";
                          cell_rise(q_delay_template) {
			  index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
			  index_2 ("0.0100, 0.0289, 0.0953, 0.2221, 0.4195, 0.6967, 1.0614");
                          values  ( \
                            "3.67536, 3.69192, 3.74304, 3.83268, 3.96324, 4.1394, 4.37568", \
                            "3.67704, 3.6924, 3.74628, 3.8334, 3.96264, 4.14264, 4.37736", \
                            "3.68184, 3.70212, 3.75096, 3.84144, 3.97188, 4.14672, 4.37844", \
                            "3.69624, 3.70956, 3.76356, 3.85008, 3.97992, 4.1598, 4.395", \
                            "3.70644, 3.72636, 3.77508, 3.86592, 3.99156, 4.17672, 4.4118", \
                            "3.7032, 3.71808, 3.76608, 3.86196, 3.98556, 4.16844, 4.40424", \
                            "3.69348, 3.71088, 3.76308, 3.85128, 3.9828, 4.16136, 4.3956" \
                          )
                          }
                          rise_transition(q_slew_template) {
                          index_1 ("0.0100, 0.0289, 0.0953, 0.2221, 0.4195, 0.6967, 1.0614");
                          values  ( \
  	                     "0.135252, 0.15876, 0.243348, 0.396, 0.642084, 1.00146, 1.4682" \
                          )

                          }
                          cell_fall(q_delay_template) {
                          index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          index_2 ("0.0100, 0.0289, 0.0953, 0.2221, 0.4195, 0.6967, 1.0614");
                          values  ( \
                            "3.80976, 3.82704, 3.87564, 3.94968, 4.05156, 4.17, 4.32348", \
                            "3.81216, 3.82596, 3.87876, 3.95244, 4.0506, 4.17312, 4.32624", \
                            "3.8166, 3.83772, 3.882, 3.95916, 4.05888, 4.17756, 4.32672", \
                            "3.83004, 3.84708, 3.89604, 3.97128, 4.06752, 4.19232, 4.34472", \
                            "3.84084, 3.86112, 3.90864, 3.98388, 4.07496, 4.2054, 4.362", \
                            "3.8376, 3.85332, 3.90048, 3.981, 4.07208, 4.19664, 4.35408", \
                            "3.82776, 3.84228, 3.8952, 3.96732, 4.06752, 4.1898, 4.34376" \
                          )
                          }
                          fall_transition(q_slew_template) {
                          index_1 ("0.0100, 0.0289, 0.0953, 0.2221, 0.4195, 0.6967, 1.0614");
                          values  ( \
                            "0.140832, 0.156576, 0.21168, 0.309612, 0.4428, 0.629064, 0.876516" \
                          )
                          }
                  }
          }
          pin(CLK)   {
                  direction            : input;
                  capacitance          : 0.278737;
                  clock                : true;
                  max_transition       : 1.7498;
                  min_pulse_width_high : 2.306295;
                  min_pulse_width_low  : 2.047275;
                  min_period           : 4.80033;

/* WRITE POWER */
             internal_power() {
              when : "!CEN & !GWEN & (!WEN[0] | !WEN[1] | !WEN[2] | !WEN[3] | !WEN[4] | !WEN[5] | !WEN[6] | !WEN[7])";
              rise_power(power_template) {
                index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                values  ("409.23, 409.23, 409.23, 409.23, 409.23, 409.23, 409.23");
              }
              fall_power(power_template) {
                index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                values  ("409.23, 409.23, 409.23, 409.23, 409.23, 409.23, 409.23");
              }
             }
/* DISABLED POWER */
             internal_power() {
              when : "CEN";
              rise_power(power_template) {
                index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                values  ("6.81372e-05, 6.81372e-05, 6.81372e-05, 6.81372e-05, 6.81372e-05, 6.81372e-05, 6.81372e-05");
              }
              fall_power(power_template) {
                index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                values  ("6.81372e-05, 6.81372e-05, 6.81372e-05, 6.81372e-05, 6.81372e-05, 6.81372e-05, 6.81372e-05");
              }
             }
/* READ POWER */
             internal_power() {
             when : "!CEN & GWEN";
             rise_power(power_template) {
                index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                values  ("368.748, 368.748, 368.748, 368.748, 368.748, 368.748, 368.748");
              }
              fall_power(power_template) {
                index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                values  ("368.748, 368.748, 368.748, 368.748, 368.748, 368.748, 368.748");
              }
             }
          }

          pg_pin(VDD) {
                  voltage_name     : VDD;
                  pg_type          : primary_power;
          }
          pg_pin(VSS) {
                  voltage_name     : VSS;
                  pg_type          : primary_ground;
          }
          pin(CEN)   {
                  direction            : input;
                  capacitance          : 0.0167045;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          index_2 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          values  ( \
                            "0.425612, 0.422169, 0.418935, 0.438592, 0.47509, 0.501501, 0.520795", \
                            "0.42394, 0.416317, 0.415547, 0.434522, 0.470349, 0.496749, 0.516043", \
                            "0.423621, 0.415998, 0.415228, 0.433081, 0.457072, 0.480502, 0.499796", \
                            "0.424094, 0.415899, 0.415118, 0.432201, 0.456973, 0.46882, 0.475717", \
                            "0.422763, 0.418297, 0.414788, 0.430254, 0.454223, 0.46849, 0.475277", \
                            "0.422587, 0.415437, 0.414854, 0.430683, 0.454905, 0.468369, 0.473231", \
                            "0.422587, 0.418121, 0.41481, 0.430617, 0.463232, 0.49192, 0.502931" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          index_2 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          values  ( \
                            "0.405548, 0.408331, 0.424105, 0.460405, 0.522225, 0.593043, 0.674476", \
                            "0.405592, 0.408111, 0.423896, 0.460196, 0.520916, 0.592834, 0.674267", \
                            "0.405075, 0.407792, 0.423577, 0.459877, 0.520597, 0.592515, 0.673948", \
                            "0.404492, 0.407682, 0.423478, 0.459778, 0.521598, 0.592416, 0.673849", \
                            "0.404162, 0.407352, 0.423137, 0.459437, 0.520157, 0.592086, 0.673508", \
                            "0.404041, 0.407231, 0.423016, 0.459316, 0.520036, 0.591954, 0.673387", \
                            "0.404657, 0.407176, 0.422961, 0.459261, 0.519981, 0.591899, 0.673332" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          index_2 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          values  ( \
                            "1.02017, 1.02337, 1.02688, 1.00981, 0.985039, 0.973192, 0.966394", \
                            "1.0219, 1.02952, 1.0303, 1.01245, 0.988449, 0.976602, 0.969815", \
                            "1.0387, 1.04633, 1.0471, 1.02925, 1.00526, 0.993399, 0.986612", \
                            "1.07461, 1.08281, 1.08359, 1.06651, 1.04173, 1.02989, 1.0231", \
                            "1.11592, 1.12038, 1.1239, 1.10843, 1.08447, 1.0702, 1.06341", \
                            "1.15529, 1.16244, 1.16302, 1.14719, 1.12297, 1.1095, 1.1059", \
                            "1.1757, 1.18017, 1.18348, 1.16767, 1.14425, 1.12999, 1.13281" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          index_2 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          values  ( \
                            "1.03709, 1.03431, 1.01853, 0.982245, 0.920414, 0.849596, 0.768163", \
                            "1.04026, 1.03774, 1.02195, 0.985644, 0.924935, 0.853006, 0.771584", \
                            "1.05725, 1.05454, 1.03874, 1.00245, 0.941732, 0.869814, 0.788381", \
                            "1.09421, 1.09102, 1.07523, 1.03893, 0.977108, 0.90629, 0.824857", \
                            "1.13453, 1.13134, 1.11554, 1.07925, 1.01853, 0.946605, 0.865183", \
                            "1.17384, 1.17064, 1.15486, 1.11856, 1.05784, 0.985919, 0.904486", \
                            "1.19364, 1.19112, 1.17533, 1.13903, 1.07832, 1.00639, 0.924968" \
                          )
                          }
                 }
          }
          pin(GWEN)   {
                  direction            : input;
                  capacitance          : 0.0474066;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          index_2 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          values  ( \
                            "0.557491, 0.562551, 0.575982, 0.611952, 0.662706, 0.711799, 0.751377", \
                            "0.553762, 0.559449, 0.573903, 0.609642, 0.659549, 0.708345, 0.751729", \
                            "0.538241, 0.543389, 0.558228, 0.593582, 0.643577, 0.692362, 0.732171", \
                            "0.506, 0.510477, 0.524524, 0.559779, 0.610522, 0.659527, 0.699193", \
                            "0.470283, 0.4752, 0.490072, 0.524843, 0.575311, 0.623557, 0.663982", \
                            "0.435468, 0.440682, 0.454751, 0.489973, 0.540727, 0.589831, 0.629398", \
                            "0.412357, 0.417725, 0.431211, 0.467082, 0.517836, 0.566192, 0.606496" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          index_2 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          values  ( \
                            "0.601018, 0.606991, 0.627385, 0.67749, 0.754094, 0.85701, 0.968902", \
                            "0.597839, 0.604329, 0.625504, 0.674355, 0.748077, 0.853237, 0.966702", \
                            "0.581911, 0.588269, 0.608179, 0.658295, 0.732039, 0.837188, 0.949707", \
                            "0.549021, 0.555302, 0.575201, 0.625317, 0.701921, 0.80421, 0.916729", \
                            "0.51381, 0.520212, 0.53999, 0.590106, 0.663839, 0.768999, 0.883344", \
                            "0.479226, 0.485485, 0.505406, 0.555522, 0.629244, 0.734129, 0.846934", \
                            "0.455994, 0.462715, 0.482515, 0.532631, 0.606353, 0.711513, 0.824032" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          index_2 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          values  ( \
                            "0.749925, 0.74646, 0.732688, 0.700172, 0.675268, 0.656282, 0.647163", \
                            "0.753753, 0.750299, 0.736516, 0.704066, 0.679107, 0.659967, 0.651002", \
                            "0.761926, 0.758472, 0.744414, 0.712228, 0.687456, 0.668283, 0.659164", \
                            "0.765314, 0.761563, 0.747175, 0.715275, 0.690382, 0.671385, 0.662266", \
                            "0.776523, 0.772805, 0.761079, 0.726627, 0.701613, 0.682616, 0.673508", \
                            "0.779933, 0.776644, 0.762861, 0.730356, 0.705452, 0.686455, 0.677347", \
                            "0.766964, 0.763246, 0.749474, 0.716958, 0.692065, 0.672738, 0.663949" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          index_2 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          values  ( \
                            "0.437382, 0.432344, 0.409288, 0.36278, 0.287593, 0.191305, 0.0843667", \
                            "0.441375, 0.43692, 0.412555, 0.366619, 0.292659, 0.193933, 0.083149", \
                            "0.449053, 0.445071, 0.4213, 0.374847, 0.300828, 0.202086, 0.0963941", \
                            "0.451583, 0.448184, 0.424391, 0.377883, 0.302694, 0.205202, 0.0995005", \
                            "0.462836, 0.459404, 0.435633, 0.389125, 0.315128, 0.216468, 0.108427", \
                            "0.509674, 0.504625, 0.482174, 0.432696, 0.35684, 0.257445, 0.152046", \
                            "0.554664, 0.549186, 0.526746, 0.477257, 0.401401, 0.302839, 0.196612" \
                          )
                          }
                 }
          }
          bus(WEN)   {
                  bus_type             : Q_BUS;
                  direction            : input;
                  capacitance          : 0.0074375;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          index_2 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          values  ( \
                            "0, 0, 0, 0.030261, 0.054758, 0.073348, 0.082654", \
                            "0, 0, 0, 0.025344, 0.050182, 0.067166, 0.078067", \
                            "0, 0, 0, 0.017094, 0.041657, 0.058498, 0.069542", \
                            "0, 0, 0, 0.013959, 0.038478, 0.05709, 0.066363", \
                            "0, 0, 0, 0.002431, 0.026708, 0.045276, 0.054593", \
                            "0, 0, 0, 0, 0.02332, 0.04191, 0.051216", \
                            "0, 0, 0, 0.011902, 0.036707, 0.055528, 0.064592" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          index_2 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          values  ( \
                            "0.292552, 0.296392, 0.32021, 0.366993, 0.44253, 0.536734, 0.645634", \
                            "0.287027, 0.291567, 0.31647, 0.362472, 0.43428, 0.534974, 0.646107", \
                            "0.279742, 0.28307, 0.306966, 0.353386, 0.425755, 0.525932, 0.631257", \
                            "0.276538, 0.279868, 0.30404, 0.350746, 0.426228, 0.523006, 0.629321", \
                            "0.264568, 0.268297, 0.292141, 0.338987, 0.413138, 0.510939, 0.619707", \
                            "0.261236, 0.265571, 0.288589, 0.33561, 0.409035, 0.507276, 0.614515", \
                            "0.273794, 0.278274, 0.301971, 0.348997, 0.420816, 0.521499, 0.62733" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          index_2 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          values  ( \
                            "0.750508, 0.74646, 0.732688, 0.701019, 0.675488, 0.657789, 0.647317", \
                            "0.754336, 0.750299, 0.736516, 0.704847, 0.679316, 0.661617, 0.651145", \
                            "0.762509, 0.758472, 0.744414, 0.713009, 0.687478, 0.669779, 0.659307", \
                            "0.765567, 0.761563, 0.747175, 0.716067, 0.690536, 0.672848, 0.662365", \
                            "0.77682, 0.772805, 0.761079, 0.727331, 0.7018, 0.684101, 0.673629", \
                            "0.780681, 0.776644, 0.762861, 0.731192, 0.705661, 0.687962, 0.67749", \
                            "0.767327, 0.763246, 0.749474, 0.717805, 0.692274, 0.674575, 0.664092" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          index_2 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          values  ( \
                            "0.437382, 0.432344, 0.409288, 0.36278, 0.287593, 0.191305, 0.0843667", \
                            "0.441375, 0.43692, 0.41261, 0.366619, 0.292659, 0.193933, 0.08349", \
                            "0.450087, 0.445071, 0.4213, 0.374847, 0.300828, 0.202086, 0.0963941", \
                            "0.451858, 0.448184, 0.424391, 0.377883, 0.302694, 0.205202, 0.0995005", \
                            "0.462924, 0.459404, 0.435633, 0.389125, 0.315128, 0.216468, 0.108427", \
                            "0.46695, 0.463265, 0.439472, 0.392964, 0.318967, 0.220713, 0.114544", \
                            "0.45452, 0.449856, 0.426085, 0.379566, 0.305613, 0.206884, 0.101189" \
                          )
                          }
                 }
          }
          bus(A)   {
                  bus_type             : A_BUS;
                  direction            : input;
                  capacitance          : 0.0319183;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          index_2 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          values  ( \
                            "0.523237, 0.519838, 0.523281, 0.543884, 0.570449, 0.596156, 0.613602", \
                            "0.519552, 0.514987, 0.520168, 0.539066, 0.565158, 0.589897, 0.611468", \
                            "0.50941, 0.505439, 0.511291, 0.527703, 0.556435, 0.581768, 0.599654", \
                            "0.508805, 0.502304, 0.508563, 0.527109, 0.553597, 0.579447, 0.59598", \
                            "0.494384, 0.490655, 0.496727, 0.515526, 0.542179, 0.56727, 0.585233", \
                            "0.490996, 0.488422, 0.493702, 0.512094, 0.53911, 0.565829, 0.581757", \
                            "0.505637, 0.501171, 0.503415, 0.525657, 0.552464, 0.577654, 0.595067" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          index_2 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          values  ( \
                            "0.652762, 0.656293, 0.669317, 0.7062, 0.771298, 0.850509, 0.941138", \
                            "0.647339, 0.650364, 0.660913, 0.70103, 0.766139, 0.84799, 0.937343", \
                            "0.639177, 0.641509, 0.655017, 0.692494, 0.757724, 0.838024, 0.927289", \
                            "0.635767, 0.638913, 0.652751, 0.689469, 0.754809, 0.83589, 0.923813", \
                            "0.623876, 0.627308, 0.640904, 0.678007, 0.742478, 0.82225, 0.915156", \
                            "0.620928, 0.62414, 0.63745, 0.674674, 0.739926, 0.817256, 0.908985", \
                            "0.63437, 0.637428, 0.650122, 0.687852, 0.753104, 0.834361, 0.922339" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          index_2 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          values  ( \
                            "0.490578, 0.49423, 0.487157, 0.482724, 0.483428, 0.482944, 0.484", \
                            "0.495759, 0.499026, 0.492118, 0.487916, 0.488609, 0.488323, 0.489181", \
                            "0.509432, 0.512688, 0.505791, 0.501589, 0.502304, 0.501985, 0.502854", \
                            "0.543543, 0.547063, 0.540155, 0.535953, 0.536657, 0.53636, 0.537218", \
                            "0.585079, 0.588874, 0.582285, 0.577764, 0.578468, 0.578171, 0.579029", \
                            "0.624404, 0.627682, 0.620785, 0.616572, 0.617276, 0.616979, 0.617848", \
                            "0.645975, 0.649759, 0.643093, 0.63866, 0.639353, 0.639056, 0.639925" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          index_2 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          values  ( \
                            "0.50578, 0.502007, 0.486431, 0.473913, 0.469403, 0.472153, 0.47993", \
                            "0.511082, 0.507078, 0.493636, 0.479094, 0.474595, 0.477334, 0.48422", \
                            "0.5247, 0.520861, 0.505285, 0.492767, 0.488257, 0.491007, 0.498784", \
                            "0.559207, 0.555225, 0.53966, 0.527582, 0.522632, 0.525382, 0.533159", \
                            "0.600875, 0.597036, 0.581471, 0.568953, 0.564443, 0.567193, 0.57497", \
                            "0.639617, 0.635844, 0.620279, 0.607761, 0.603251, 0.606001, 0.613635", \
                            "0.661793, 0.657932, 0.642356, 0.629838, 0.625339, 0.628078, 0.635712" \
                          )
                          }
                 }
          }
          bus(D)   {
                  bus_type             : Q_BUS;
                  memory_write() {
                          address      : A;
                          clocked_on   : "CLK";
                  }
                  direction            : input;
                  capacitance          : 0.0155378;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          index_2 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          values  ( \
                            "0.476355, 0.481954, 0.493944, 0.503316, 0.493504, 0.470316, 0.425227", \
                            "0.473484, 0.476058, 0.489731, 0.496892, 0.491062, 0.465267, 0.422543", \
                            "0.463958, 0.469304, 0.480062, 0.489599, 0.480073, 0.457743, 0.411697", \
                            "0.460548, 0.464805, 0.477972, 0.485474, 0.478313, 0.452529, 0.409563", \
                            "0.449075, 0.454091, 0.467896, 0.47498, 0.465762, 0.443322, 0.396011", \
                            "0.446644, 0.451759, 0.464387, 0.470327, 0.462847, 0.440011, 0.395285", \
                            "0.458139, 0.46453, 0.476344, 0.483571, 0.477565, 0.453563, 0.406802" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          index_2 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          values  ( \
                            "0.165174, 0.167664, 0.189859, 0.246184, 0.330429, 0.440385, 0.573188", \
                            "0.15917, 0.16155, 0.184444, 0.240761, 0.325006, 0.434522, 0.56903", \
                            "0.151174, 0.153452, 0.176351, 0.232033, 0.316921, 0.426536, 0.559691", \
                            "0.147685, 0.150041, 0.172951, 0.229276, 0.313522, 0.423588, 0.555467", \
                            "0.136099, 0.138462, 0.161363, 0.217689, 0.301937, 0.412005, 0.54538", \
                            "0.132832, 0.135156, 0.158096, 0.214422, 0.298639, 0.408584, 0.541409", \
                            "0.146872, 0.148564, 0.171461, 0.22779, 0.312037, 0.421993, 0.554763" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          index_2 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          values  ( \
                            "0.421036, 0.416284, 0.404129, 0.395274, 0.403425, 0.427559, 0.470074", \
                            "0.425205, 0.420882, 0.405658, 0.400356, 0.408364, 0.430419, 0.47652", \
                            "0.432124, 0.428527, 0.417175, 0.408122, 0.41646, 0.44011, 0.482625", \
                            "0.437987, 0.433521, 0.420607, 0.412302, 0.420882, 0.444301, 0.486816", \
                            "0.446754, 0.442816, 0.429792, 0.422279, 0.430969, 0.452342, 0.496903", \
                            "0.45199, 0.445643, 0.434929, 0.426569, 0.434456, 0.456489, 0.501105", \
                            "0.438471, 0.433587, 0.422246, 0.413171, 0.421751, 0.442519, 0.487685" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          index_2 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          values  ( \
                            "0.597927, 0.595386, 0.57332, 0.516912, 0.431783, 0.322773, 0.190445", \
                            "0.603009, 0.600292, 0.578215, 0.521807, 0.436689, 0.327767, 0.195351", \
                            "0.610445, 0.607937, 0.585838, 0.529452, 0.444334, 0.335401, 0.202993", \
                            "0.614669, 0.612139, 0.590051, 0.533643, 0.448525, 0.339614, 0.207198", \
                            "0.624756, 0.622215, 0.600138, 0.54373, 0.458612, 0.349701, 0.217281", \
                            "0.628903, 0.626362, 0.604274, 0.547888, 0.462759, 0.353848, 0.221428", \
                            "0.614933, 0.612997, 0.59092, 0.534512, 0.449394, 0.340472, 0.208051" \
                          )
                          }
                 }
        }
          cell_leakage_power : 6.81372e-05;
}
}
