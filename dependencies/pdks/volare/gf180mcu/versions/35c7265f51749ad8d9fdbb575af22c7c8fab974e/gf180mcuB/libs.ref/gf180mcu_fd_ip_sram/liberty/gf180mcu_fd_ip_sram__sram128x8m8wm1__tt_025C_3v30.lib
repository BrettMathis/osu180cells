/*
 * Copyright 2022 GlobalFoundries PDK Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 *      Single Port SRAM cell name : gf180mcu_fd_ip_sram__sram128x8m8wm1
 *      Technology                 : GF 180nm 5V Green
 *
 *      ---------
 *      Pin name:
 *      ---------
 *      Input Pins : CLK CEN GWEN WEN[7:0] A[6:0] D[7:0]
 *      Inout Pins:  VDD VSS
 *      Output Pins: Q[7:0]
 *
 *     Revision History: 1.0 (Initial Release: June 20, 2014)
 */

library(gf180mcu_fd_ip_sram__sram128x8m8wm1__tt_025C_3v30) {
        delay_model             : table_lookup;
        revision                : 1.0;
        date                    : "June 20, 2014";
        comment                 : "GF 180nm 5V Green";
        voltage_unit            : "1V";
        time_unit               : "1ns";
        current_unit            : "1mA";
        leakage_power_unit      : "1mW";
        nom_process             : 1;
        nom_temperature         : 25;
        nom_voltage             : 3.3;
        capacitive_load_unit    (1,pf);
        pulling_resistance_unit : "1kohm";

        /* additional header data */
        default_fanout_load            : 1;
        default_inout_pin_cap          : 0.045;
        default_input_pin_cap          : 0.045;
        default_output_pin_cap         : 0;
        default_max_transition         : 3.1779;
        default_cell_leakage_power     : 0;

         /* default attributes */
         slew_derate_from_library      : 1.000;
         slew_lower_threshold_pct_fall : 10.000;
         slew_upper_threshold_pct_fall : 90.000;
         slew_lower_threshold_pct_rise : 10.000;
         slew_upper_threshold_pct_rise : 90.000;
         input_threshold_pct_fall      : 50.000;
         input_threshold_pct_rise      : 50.000;
         output_threshold_pct_fall     : 50.000;
         output_threshold_pct_rise     : 50.000;
         default_leakage_power_density : 0;

        /* k-factors */
        k_process_recovery_fall        : 1;
        k_process_recovery_rise        : 1;
        k_process_cell_fall            : 1;
        k_process_cell_leakage_power   : 0;
        k_process_cell_rise            : 1;
        k_process_fall_transition      : 1;
        k_process_hold_fall            : 1;
        k_process_hold_rise            : 1;
        k_process_internal_power       : 0;
        k_process_min_pulse_width_high : 1;
        k_process_min_pulse_width_low  : 1;
        k_process_setup_fall           : 1;
        k_process_setup_rise           : 1;
        k_process_wire_cap             : 0;
        k_process_wire_res             : 0;
        k_process_pin_cap              : 0;
        k_process_rise_transition      : 1;
        k_temp_cell_fall               : 0.000;
        k_temp_cell_rise               : 0.000;
        k_temp_hold_fall               : 0.000;
        k_temp_hold_rise               : 0.000;
        k_temp_min_pulse_width_high    : 0.000;
        k_temp_min_pulse_width_low     : 0.000;
        k_temp_min_period              : 0.000;
        k_temp_rise_propagation        : 0.000;
        k_temp_fall_propagation        : 0.000;
        k_temp_rise_transition         : 0.000;
        k_temp_fall_transition         : 0.000;
        k_temp_recovery_fall           : 0.000;
        k_temp_recovery_rise           : 0.000;
        k_temp_setup_fall              : 0.000;
        k_temp_setup_rise              : 0.000;
        k_volt_cell_fall               : 0.000;
        k_volt_cell_rise               : 0.000;
        k_volt_hold_fall               : 0.000;
        k_volt_hold_rise               : 0.000;
        k_volt_min_pulse_width_high    : 0.000;
        k_volt_min_pulse_width_low     : 0.000;
        k_volt_min_period              : 0.000;
        k_volt_recovery_fall           : 0.000;
        k_volt_recovery_rise           : 0.000;
        k_volt_setup_fall              : 0.000;
        k_volt_setup_rise              : 0.000;
        k_volt_rise_propagation        : 0.000;
        k_volt_fall_propagation        : 0.000;
        k_volt_rise_transition         : 0.000;
        k_volt_fall_transition         : 0.000;

         voltage_map (VDD, 3.3);
         voltage_map (VSS, 0.00);
         operating_conditions(tt_3p3v_25C) {
                process       : 1;
                temperature   : 25;
                voltage       : 3.3;
                tree_type     : balanced_tree;
         }

         default_operating_conditions : tt_3p3v_25C;
         wire_load("Estimate") {
                resistance    : 1.44e-05;
                capacitance   : 0.00018;
                area          : 1.7;
                slope         : 500;
                fanout_length (1,500);
         }
         power_lut_template(power_template) {
            variable_1 : input_transition_time;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(q_delay_template) {
            variable_1 : input_net_transition;
            variable_2 : total_output_net_capacitance;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
                 index_2 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(q_slew_template) {
            variable_1 : total_output_net_capacitance;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(constraint_template) {
            variable_1 : related_pin_transition;
            variable_2 : constrained_pin_transition;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
                 index_2 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }

         library_features(report_delay_calculation);

         type (A_BUS) {
                base_type : array;
                data_type : bit;
                bit_width : 7;
                bit_from  : 6;
                bit_to    : 0;
                downto    : true;
         }
         type (Q_BUS) {
                base_type : array;
                data_type : bit;
                bit_width : 8;
                bit_from  : 7;
                bit_to    : 0;
                downto    : true;
         }
 cell(gf180mcu_fd_ip_sram__sram128x8m8wm1) {
        area             : 116118.5168;
        dont_use         : TRUE;
        dont_touch       : TRUE;
        interface_timing : TRUE;
        memory() {
                type          : ram;
                address_width : 7;
                word_width    : 8;
        }

                 bus(Q)   {
                  bus_type             : Q_BUS;
                  direction            : output;
                  max_capacitance      : 1.0423;
                  memory_read() {
                        address        : A;
                  }
                  timing() {
                          related_pin  : "CLK";
                          timing_type  : rising_edge;
                          timing_sense : non_unate;
       		  when : "((!CEN) & (GWEN))";
        	  sdf_cond : "CEN== 1'b0 && GWEN== 1'b1";
                          cell_rise(q_delay_template) {
			  index_1 ("0.0200, 0.0768, 0.2762, 0.6570, 1.2503, 2.0822, 3.1779");
			  index_2 ("0.0100, 0.0286, 0.0937, 0.2182, 0.4121, 0.6842, 1.0423");
                          values  ( \
                            "6.29796, 6.31248, 6.41184, 6.55188, 6.7566, 7.0296, 7.3974", \
                            "6.29268, 6.3204, 6.40128, 6.54888, 6.75336, 7.03404, 7.40472", \
                            "6.32052, 6.34356, 6.4272, 6.5658, 6.77868, 7.05612, 7.42176", \
                            "6.33756, 6.36492, 6.45444, 6.59232, 6.79968, 7.08072, 7.44384", \
                            "6.37188, 6.39828, 6.48156, 6.62388, 6.82992, 7.1058, 7.47792", \
                            "6.37248, 6.39732, 6.48648, 6.62604, 6.83712, 7.11756, 7.48428", \
                            "6.3522, 6.38496, 6.46872, 6.6072, 6.816, 7.09992, 7.4658" \
                          )
                          }
                          rise_transition(q_slew_template) {
                          index_1 ("0.0100, 0.0286, 0.0937, 0.2182, 0.4121, 0.6842, 1.0423");
                          values  ( \
  	                     "0.228036, 0.267924, 0.398844, 0.645612, 1.0324, 1.599, 2.33568" \
                          )

                          }
                          cell_fall(q_delay_template) {
                          index_1 ("0.0200, 0.0768, 0.2762, 0.6570, 1.2503, 2.0822, 3.1779");
                          index_2 ("0.0100, 0.0286, 0.0937, 0.2182, 0.4121, 0.6842, 1.0423");
                          values  ( \
                            "6.5484, 6.56568, 6.65784, 6.76728, 6.924, 7.09932, 7.33704", \
                            "6.54528, 6.57384, 6.64632, 6.774, 6.92604, 7.11588, 7.34916", \
                            "6.57132, 6.59436, 6.66948, 6.7884, 6.95076, 7.13088, 7.365", \
                            "6.58992, 6.61584, 6.69888, 6.81672, 6.97656, 7.15152, 7.38684", \
                            "6.6234, 6.64488, 6.7254, 6.84492, 7.00248, 7.18128, 7.4166", \
                            "6.62448, 6.65064, 6.7278, 6.84612, 7.00272, 7.1916, 7.425", \
                            "6.60432, 6.639, 6.71664, 6.8304, 6.9852, 7.17732, 7.40496" \
                          )
                          }
                          fall_transition(q_slew_template) {
                          index_1 ("0.0100, 0.0286, 0.0937, 0.2182, 0.4121, 0.6842, 1.0423");
                          values  ( \
                            "0.230184, 0.25476, 0.350112, 0.491472, 0.691176, 0.981708, 1.34988" \
                          )
                          }
                  }
          }
          pin(CLK)   {
                  direction            : input;
                  capacitance          : 0.293691;
                  clock                : true;
                  max_transition       : 3.1779;
                  min_pulse_width_high : 2.76393;
                  min_pulse_width_low  : 2.865195;
                  min_period           : 8.405325;

/* WRITE POWER */
             internal_power() {
              when : "!CEN & !GWEN & (!WEN[0] | !WEN[1] | !WEN[2] | !WEN[3] | !WEN[4] | !WEN[5] | !WEN[6] | !WEN[7])";
              rise_power(power_template) {
                index_1 ("0.0200, 0.0768, 0.2762, 0.6570, 1.2503, 2.0822, 3.1779");
                values  ("357.571, 357.571, 357.571, 357.571, 357.571, 357.571, 357.571");
              }
              fall_power(power_template) {
                index_1 ("0.0200, 0.0768, 0.2762, 0.6570, 1.2503, 2.0822, 3.1779");
                values  ("357.571, 357.571, 357.571, 357.571, 357.571, 357.571, 357.571");
              }
             }
/* DISABLED POWER */
             internal_power() {
              when : "CEN";
              rise_power(power_template) {
                index_1 ("0.0200, 0.0768, 0.2762, 0.6570, 1.2503, 2.0822, 3.1779");
                values  ("8.8011e-05, 8.8011e-05, 8.8011e-05, 8.8011e-05, 8.8011e-05, 8.8011e-05, 8.8011e-05");
              }
              fall_power(power_template) {
                index_1 ("0.0200, 0.0768, 0.2762, 0.6570, 1.2503, 2.0822, 3.1779");
                values  ("8.8011e-05, 8.8011e-05, 8.8011e-05, 8.8011e-05, 8.8011e-05, 8.8011e-05, 8.8011e-05");
              }
             }
/* READ POWER */
             internal_power() {
             when : "!CEN & GWEN";
             rise_power(power_template) {
                index_1 ("0.0200, 0.0768, 0.2762, 0.6570, 1.2503, 2.0822, 3.1779");
                values  ("324.472, 324.472, 324.472, 324.472, 324.472, 324.472, 324.472");
              }
              fall_power(power_template) {
                index_1 ("0.0200, 0.0768, 0.2762, 0.6570, 1.2503, 2.0822, 3.1779");
                values  ("324.472, 324.472, 324.472, 324.472, 324.472, 324.472, 324.472");
              }
             }
          }

          pg_pin(VDD) {
                  voltage_name     : VDD;
                  pg_type          : primary_power;
          }
          pg_pin(VSS) {
                  voltage_name     : VSS;
                  pg_type          : primary_ground;
          }
          pin(CEN)   {
                  direction            : input;
                  capacitance          : 0.0175673;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0768, 0.2762, 0.6570, 1.2503, 2.0822, 3.1779");
                          index_2 ("0.0200, 0.0768, 0.2762, 0.6570, 1.2503, 2.0822, 3.1779");
                          values  ( \
                            "0.613305, 0.605594, 0.606364, 0.658812, 0.732644, 0.792077, 0.817817", \
                            "0.606089, 0.59466, 0.594726, 0.648032, 0.725912, 0.777557, 0.822833", \
                            "0.585607, 0.575333, 0.575311, 0.62161, 0.694881, 0.746515, 0.775995", \
                            "0.585255, 0.575113, 0.576257, 0.620521, 0.672551, 0.700381, 0.726165", \
                            "0.58487, 0.574288, 0.575212, 0.621038, 0.676654, 0.697961, 0.719686", \
                            "0.584672, 0.574541, 0.575003, 0.620818, 0.676335, 0.696982, 0.706937", \
                            "0.584386, 0.573793, 0.574728, 0.620532, 0.676016, 0.727991, 0.753764" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0768, 0.2762, 0.6570, 1.2503, 2.0822, 3.1779");
                          index_2 ("0.0200, 0.0768, 0.2762, 0.6570, 1.2503, 2.0822, 3.1779");
                          values  ( \
                            "0.54208, 0.549131, 0.583077, 0.665654, 0.788975, 0.927883, 1.07858", \
                            "0.540903, 0.547932, 0.58157, 0.664477, 0.786973, 0.926717, 1.07742", \
                            "0.539396, 0.546425, 0.580283, 0.662981, 0.785488, 0.925232, 1.07591", \
                            "0.539165, 0.546348, 0.580382, 0.661089, 0.78705, 0.925023, 1.07568", \
                            "0.538747, 0.546293, 0.579821, 0.662387, 0.784707, 0.92466, 1.07532", \
                            "0.538626, 0.545677, 0.581328, 0.662189, 0.783849, 0.924429, 1.07512", \
                            "0.538329, 0.54582, 0.579029, 0.659131, 0.784443, 0.924198, 1.07485" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0768, 0.2762, 0.6570, 1.2503, 2.0822, 3.1779");
                          index_2 ("0.0200, 0.0768, 0.2762, 0.6570, 1.2503, 2.0822, 3.1779");
                          values  ( \
                            "1.59401, 1.6038, 1.6027, 1.5576, 1.50634, 1.4806, 1.47147", \
                            "1.60237, 1.61315, 1.61249, 1.56673, 1.51118, 1.4905, 1.46806", \
                            "1.63482, 1.64505, 1.64505, 1.59874, 1.5433, 1.52262, 1.51272", \
                            "1.70808, 1.7182, 1.7171, 1.67288, 1.62085, 1.595, 1.58576", \
                            "1.79553, 1.80609, 1.80521, 1.75934, 1.70379, 1.68245, 1.66067", \
                            "1.87968, 1.8898, 1.88925, 1.84349, 1.78794, 1.76737, 1.75736", \
                            "1.92984, 1.94051, 1.93952, 1.89376, 1.83832, 1.81676, 1.80763" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0768, 0.2762, 0.6570, 1.2503, 2.0822, 3.1779");
                          index_2 ("0.0200, 0.0768, 0.2762, 0.6570, 1.2503, 2.0822, 3.1779");
                          values  ( \
                            "1.63977, 1.63273, 1.59874, 1.51613, 1.39282, 1.25393, 1.10323", \
                            "1.6489, 1.64186, 1.60831, 1.52537, 1.40283, 1.26312, 1.11242", \
                            "1.68102, 1.67398, 1.6401, 1.55738, 1.43495, 1.29514, 1.14448", \
                            "1.75417, 1.74702, 1.71303, 1.63229, 1.50634, 1.36829, 1.21769", \
                            "1.84162, 1.83414, 1.80059, 1.71798, 1.59566, 1.45574, 1.30515", \
                            "1.92566, 1.91862, 1.88298, 1.80213, 1.68047, 1.53989, 1.38919", \
                            "1.97593, 1.96845, 1.93523, 1.85515, 1.72986, 1.59005, 1.43946" \
                          )
                          }
                 }
          }
          pin(GWEN)   {
                  direction            : input;
                  capacitance          : 0.0481696;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0768, 0.2762, 0.6570, 1.2503, 2.0822, 3.1779");
                          index_2 ("0.0200, 0.0768, 0.2762, 0.6570, 1.2503, 2.0822, 3.1779");
                          values  ( \
                            "0.823779, 0.83314, 0.867185, 0.935528, 1.03209, 1.12153, 1.20352", \
                            "0.814132, 0.823504, 0.857109, 0.925903, 1.0218, 1.11382, 1.19356", \
                            "0.781913, 0.791285, 0.824813, 0.893662, 0.989703, 1.08159, 1.16164", \
                            "0.714076, 0.723448, 0.757493, 0.825055, 0.921866, 1.01182, 1.09384", \
                            "0.643874, 0.653576, 0.686862, 0.755667, 0.85173, 0.941644, 1.02361", \
                            "0.584232, 0.593604, 0.627187, 0.695981, 0.792022, 0.883905, 0.963963", \
                            "0.548097, 0.557095, 0.590887, 0.659604, 0.755392, 0.84546, 0.927443" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0768, 0.2762, 0.6570, 1.2503, 2.0822, 3.1779");
                          index_2 ("0.0200, 0.0768, 0.2762, 0.6570, 1.2503, 2.0822, 3.1779");
                          values  ( \
                            "0.919853, 0.9251, 0.972422, 1.06675, 1.21217, 1.40129, 1.60677", \
                            "0.909095, 0.915475, 0.962335, 1.05711, 1.20394, 1.39172, 1.5972", \
                            "0.877954, 0.883267, 0.930479, 1.02487, 1.17395, 1.35949, 1.56497", \
                            "0.808159, 0.815419, 0.859749, 0.95458, 1.1059, 1.29164, 1.49523", \
                            "0.738001, 0.745228, 0.791692, 0.886875, 1.0363, 1.22146, 1.42593", \
                            "0.680328, 0.685553, 0.730543, 0.827211, 0.975931, 1.16179, 1.3673", \
                            "0.642708, 0.649055, 0.695904, 0.790757, 0.939774, 1.12529, 1.33078" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0768, 0.2762, 0.6570, 1.2503, 2.0822, 3.1779");
                          index_2 ("0.0200, 0.0768, 0.2762, 0.6570, 1.2503, 2.0822, 3.1779");
                          values  ( \
                            "1.13801, 1.13051, 1.0968, 1.03541, 0.981959, 0.946935, 0.930864", \
                            "1.14536, 1.13777, 1.10408, 1.04267, 0.999064, 0.95601, 0.938135", \
                            "1.16382, 1.15632, 1.12265, 1.06121, 1.0176, 0.974556, 0.956681", \
                            "1.17922, 1.17172, 1.13799, 1.07661, 1.02318, 0.988141, 0.972081", \
                            "1.20507, 1.19756, 1.16388, 1.10248, 1.05886, 1.01401, 0.997964", \
                            "1.21521, 1.2077, 1.17402, 1.11262, 1.069, 1.02597, 1.00811", \
                            "1.20176, 1.1945, 1.16082, 1.09941, 1.05581, 1.01096, 0.994906" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0768, 0.2762, 0.6570, 1.2503, 2.0822, 3.1779");
                          index_2 ("0.0200, 0.0768, 0.2762, 0.6570, 1.2503, 2.0822, 3.1779");
                          values  ( \
                            "0.592031, 0.582439, 0.531927, 0.438746, 0.299548, 0.119712, 0", \
                            "0.600974, 0.589754, 0.538197, 0.445918, 0.307582, 0.126975, 0", \
                            "0.618057, 0.608553, 0.559251, 0.464431, 0.325094, 0.145522, 0", \
                            "0.630531, 0.623711, 0.575311, 0.483538, 0.340615, 0.160959, 0", \
                            "0.658493, 0.64988, 0.603526, 0.506814, 0.366674, 0.18689, 0", \
                            "0.750651, 0.745745, 0.70147, 0.602668, 0.453145, 0.279854, 0.086196", \
                            "0.826166, 0.821282, 0.77451, 0.67815, 0.528308, 0.355377, 0.161761" \
                          )
                          }
                 }
          }
          bus(WEN)   {
                  bus_type             : Q_BUS;
                  direction            : input;
                  capacitance          : 0.007649;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0768, 0.2762, 0.6570, 1.2503, 2.0822, 3.1779");
                          index_2 ("0.0200, 0.0768, 0.2762, 0.6570, 1.2503, 2.0822, 3.1779");
                          values  ( \
                            "0, 0, 0, 0, 0, 0.032142, 0.047498", \
                            "0, 0, 0, 0, 0, 0.023463, 0.039809", \
                            "0, 0, 0, 0, 0, 0.006809, 0.023144", \
                            "0, 0, 0, 0, 0, 0, 0.006677", \
                            "0, 0, 0, 0, 0, 0, 0", \
                            "0, 0, 0, 0, 0, 0, 0", \
                            "0, 0, 0, 0, 0, 0, 0" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0768, 0.2762, 0.6570, 1.2503, 2.0822, 3.1779");
                          index_2 ("0.0200, 0.0768, 0.2762, 0.6570, 1.2503, 2.0822, 3.1779");
                          values  ( \
                            "0.373186, 0.385055, 0.435897, 0.527505, 0.668327, 0.848067, 1.04874", \
                            "0.362538, 0.376233, 0.428912, 0.51986, 0.659593, 0.840488, 1.04136", \
                            "0.347897, 0.359909, 0.409662, 0.504625, 0.64504, 0.823724, 1.02443", \
                            "0.334785, 0.343189, 0.392337, 0.483164, 0.627451, 0.807224, 1.00247", \
                            "0.307824, 0.31636, 0.368775, 0.459767, 0.600556, 0.780109, 0.974171", \
                            "0.296565, 0.307373, 0.357203, 0.450901, 0.591723, 0.771639, 0.972532", \
                            "0.306328, 0.320067, 0.371943, 0.463254, 0.604384, 0.7832, 0.98461" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0768, 0.2762, 0.6570, 1.2503, 2.0822, 3.1779");
                          index_2 ("0.0200, 0.0768, 0.2762, 0.6570, 1.2503, 2.0822, 3.1779");
                          values  ( \
                            "1.13801, 1.13051, 1.09788, 1.03667, 0.985358, 0.946935, 0.930864", \
                            "1.14536, 1.13777, 1.10513, 1.04391, 0.999064, 0.95601, 0.938135", \
                            "1.16382, 1.15632, 1.1237, 1.06249, 1.0176, 0.974556, 0.956681", \
                            "1.17922, 1.17172, 1.13908, 1.07787, 1.02655, 0.988141, 0.972081", \
                            "1.20507, 1.19756, 1.16502, 1.10381, 1.05886, 1.01401, 0.997964", \
                            "1.21521, 1.2077, 1.17517, 1.11396, 1.069, 1.02597, 1.00811", \
                            "1.20177, 1.1945, 1.16194, 1.10073, 1.05581, 1.01096, 0.994906" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0768, 0.2762, 0.6570, 1.2503, 2.0822, 3.1779");
                          index_2 ("0.0200, 0.0768, 0.2762, 0.6570, 1.2503, 2.0822, 3.1779");
                          values  ( \
                            "0.592031, 0.582439, 0.531927, 0.439461, 0.299548, 0.120274, 0", \
                            "0.60148, 0.589754, 0.538197, 0.446611, 0.307582, 0.127514, 0", \
                            "0.618574, 0.608553, 0.559251, 0.465157, 0.325094, 0.146092, 0", \
                            "0.630531, 0.623711, 0.575311, 0.483538, 0.340615, 0.161504, 0", \
                            "0.65659, 0.64977, 0.598092, 0.506495, 0.366674, 0.18689, 0", \
                            "0.669801, 0.659802, 0.611237, 0.516758, 0.376739, 0.197568, 0", \
                            "0.658493, 0.646613, 0.59499, 0.503481, 0.363033, 0.184343, 0" \
                          )
                          }
                 }
          }
          bus(A)   {
                  bus_type             : A_BUS;
                  direction            : input;
                  capacitance          : 0.038934;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0768, 0.2762, 0.6570, 1.2503, 2.0822, 3.1779");
                          index_2 ("0.0200, 0.0768, 0.2762, 0.6570, 1.2503, 2.0822, 3.1779");
                          values  ( \
                            "0.750684, 0.745492, 0.747604, 0.79992, 0.880891, 0.944449, 0.989076", \
                            "0.741862, 0.739728, 0.737055, 0.793881, 0.871398, 0.935792, 0.981332", \
                            "0.729938, 0.718993, 0.723272, 0.776358, 0.856438, 0.9196, 0.964205", \
                            "0.712096, 0.707168, 0.705001, 0.759506, 0.833965, 0.898128, 0.947584", \
                            "0.685289, 0.680317, 0.676698, 0.7326, 0.812801, 0.875556, 0.922911", \
                            "0.673354, 0.668041, 0.668393, 0.722612, 0.805695, 0.866657, 0.913264", \
                            "0.68695, 0.683023, 0.683584, 0.737858, 0.816508, 0.880506, 0.925749" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0768, 0.2762, 0.6570, 1.2503, 2.0822, 3.1779");
                          index_2 ("0.0200, 0.0768, 0.2762, 0.6570, 1.2503, 2.0822, 3.1779");
                          values  ( \
                            "1.00675, 1.0155, 1.05386, 1.13518, 1.2657, 1.42043, 1.59412", \
                            "0.999735, 1.00856, 1.04688, 1.12648, 1.25708, 1.41295, 1.58279", \
                            "0.983026, 0.99132, 1.02951, 1.10926, 1.24135, 1.39381, 1.57003", \
                            "0.966438, 0.975183, 1.01219, 1.0932, 1.22503, 1.37885, 1.55386", \
                            "0.94017, 0.948541, 0.986469, 1.06628, 1.19779, 1.35135, 1.52581", \
                            "0.932415, 0.938982, 0.976811, 1.05927, 1.18897, 1.34277, 1.51712", \
                            "0.943503, 0.951819, 0.991232, 1.06992, 1.20149, 1.3552, 1.53131" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0768, 0.2762, 0.6570, 1.2503, 2.0822, 3.1779");
                          index_2 ("0.0200, 0.0768, 0.2762, 0.6570, 1.2503, 2.0822, 3.1779");
                          values  ( \
                            "0.695497, 0.701624, 0.693583, 0.674916, 0.664884, 0.656623, 0.645986", \
                            "0.707586, 0.714802, 0.70686, 0.688182, 0.678161, 0.669878, 0.659263", \
                            "0.742214, 0.748198, 0.740157, 0.72149, 0.711469, 0.703197, 0.69256", \
                            "0.805915, 0.813307, 0.805178, 0.7865, 0.776479, 0.768218, 0.757581", \
                            "0.902143, 0.908259, 0.900218, 0.881551, 0.87153, 0.863258, 0.852621", \
                            "0.967164, 0.974479, 0.966438, 0.94776, 0.937739, 0.929467, 0.918841", \
                            "1.01974, 1.02574, 1.0177, 0.99902, 0.988999, 0.980738, 0.970101" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0768, 0.2762, 0.6570, 1.2503, 2.0822, 3.1779");
                          index_2 ("0.0200, 0.0768, 0.2762, 0.6570, 1.2503, 2.0822, 3.1779");
                          values  ( \
                            "0.729157, 0.720335, 0.68233, 0.638715, 0.613954, 0.605583, 0.611358", \
                            "0.742445, 0.733612, 0.695607, 0.651981, 0.62722, 0.618849, 0.624624", \
                            "0.775731, 0.766909, 0.728904, 0.685289, 0.660506, 0.652146, 0.657932", \
                            "0.840763, 0.83193, 0.793925, 0.75031, 0.725527, 0.717178, 0.722953", \
                            "0.935803, 0.926981, 0.888998, 0.845361, 0.8206, 0.812218, 0.817993", \
                            "1.00199, 0.99319, 0.955207, 0.91157, 0.886798, 0.878416, 0.884202", \
                            "1.05327, 1.04446, 1.00645, 0.96283, 0.938047, 0.929687, 0.935462" \
                          )
                          }
                 }
          }
          bus(D)   {
                  bus_type             : Q_BUS;
                  memory_write() {
                          address      : A;
                          clocked_on   : "CLK";
                  }
                  direction            : input;
                  capacitance          : 0.0167013;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0768, 0.2762, 0.6570, 1.2503, 2.0822, 3.1779");
                          index_2 ("0.0200, 0.0768, 0.2762, 0.6570, 1.2503, 2.0822, 3.1779");
                          values  ( \
                            "0.715649, 0.721974, 0.748154, 0.771694, 0.770473, 0.736197, 0.661353", \
                            "0.706211, 0.714835, 0.741125, 0.762388, 0.761255, 0.727012, 0.649946", \
                            "0.690129, 0.694155, 0.729487, 0.744062, 0.744403, 0.709082, 0.632676", \
                            "0.675675, 0.680911, 0.706299, 0.730026, 0.726198, 0.691691, 0.617914", \
                            "0.649429, 0.654731, 0.684563, 0.704847, 0.700403, 0.665643, 0.594495", \
                            "0.639045, 0.643467, 0.67298, 0.696388, 0.694243, 0.658097, 0.586278", \
                            "0.651618, 0.659747, 0.68739, 0.705958, 0.705408, 0.671583, 0.594814" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0768, 0.2762, 0.6570, 1.2503, 2.0822, 3.1779");
                          index_2 ("0.0200, 0.0768, 0.2762, 0.6570, 1.2503, 2.0822, 3.1779");
                          values  ( \
                            "0.156043, 0.15911, 0.201089, 0.303721, 0.456643, 0.642554, 0.873675", \
                            "0.148739, 0.152123, 0.193594, 0.296218, 0.449284, 0.63734, 0.863566", \
                            "0.131712, 0.13516, 0.17414, 0.279279, 0.432212, 0.618288, 0.849343", \
                            "0.115005, 0.119349, 0.160765, 0.263423, 0.416328, 0.606903, 0.833459", \
                            "0.088121, 0.0924099, 0.133898, 0.236538, 0.388322, 0.575531, 0.807169", \
                            "0.078826, 0.083094, 0.122078, 0.227294, 0.380402, 0.566236, 0.798556", \
                            "0.0927344, 0.0974336, 0.137585, 0.240198, 0.393151, 0.579238, 0.811569" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0768, 0.2762, 0.6570, 1.2503, 2.0822, 3.1779");
                          index_2 ("0.0200, 0.0768, 0.2762, 0.6570, 1.2503, 2.0822, 3.1779");
                          values  ( \
                            "0.551155, 0.542927, 0.513931, 0.495099, 0.494593, 0.532015, 0.600985", \
                            "0.556809, 0.551364, 0.518903, 0.503602, 0.503657, 0.539605, 0.60797", \
                            "0.573936, 0.56683, 0.534941, 0.5192, 0.519453, 0.557942, 0.620785", \
                            "0.588753, 0.58322, 0.555247, 0.535634, 0.536415, 0.574398, 0.641652", \
                            "0.621214, 0.611061, 0.574035, 0.561418, 0.562727, 0.599698, 0.668228", \
                            "0.626285, 0.61974, 0.58828, 0.569987, 0.57123, 0.60896, 0.678183", \
                            "0.61457, 0.60731, 0.574926, 0.558811, 0.557766, 0.596387, 0.664708" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0768, 0.2762, 0.6570, 1.2503, 2.0822, 3.1779");
                          index_2 ("0.0200, 0.0768, 0.2762, 0.6570, 1.2503, 2.0822, 3.1779");
                          values  ( \
                            "0.866569, 0.864809, 0.82489, 0.719444, 0.567952, 0.379258, 0.153358", \
                            "0.875061, 0.872916, 0.833393, 0.727947, 0.576455, 0.38775, 0.161861", \
                            "0.891308, 0.889152, 0.849629, 0.744183, 0.592691, 0.403986, 0.178096", \
                            "0.907874, 0.905674, 0.866206, 0.76076, 0.609268, 0.420574, 0.194676", \
                            "0.934582, 0.932426, 0.892903, 0.787457, 0.635965, 0.44726, 0.220639", \
                            "0.944416, 0.94226, 0.902748, 0.797302, 0.64581, 0.457105, 0.231212", \
                            "0.930941, 0.928796, 0.889262, 0.783816, 0.632324, 0.44363, 0.217733" \
                          )
                          }
                 }
        }
          cell_leakage_power : 8.8011e-05;
}
}
