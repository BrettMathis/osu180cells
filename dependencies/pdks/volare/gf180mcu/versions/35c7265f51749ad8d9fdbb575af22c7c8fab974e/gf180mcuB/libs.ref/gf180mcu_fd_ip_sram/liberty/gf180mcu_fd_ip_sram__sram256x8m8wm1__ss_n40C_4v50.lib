/*
 * Copyright 2022 GlobalFoundries PDK Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 *      Single Port SRAM cell name : gf180mcu_fd_ip_sram__sram256x8m8wm1
 *      Technology                 : GF 180nm 5V Green
 *
 *      ---------
 *      Pin name:
 *      ---------
 *      Input Pins : CLK CEN GWEN WEN[7:0] A[7:0] D[7:0]
 *      Inout Pins:  VDD VSS
 *      Output Pins: Q[7:0]
 *
 *     Revision History: 1.0 (Initial Release: June 20, 2014)
 */

library(gf180mcu_fd_ip_sram__sram256x8m8wm1__ss_n40C_4v50) {
        delay_model             : table_lookup;
        revision                : 1.0;
        date                    : "June 20, 2014";
        comment                 : "GF 180nm 5V Green";
        voltage_unit            : "1V";
        time_unit               : "1ns";
        current_unit            : "1mA";
        leakage_power_unit      : "1mW";
        nom_process             : 1;
        nom_temperature         : -40;
        nom_voltage             : 4.5;
        capacitive_load_unit    (1,pf);
        pulling_resistance_unit : "1kohm";

        /* additional header data */
        default_fanout_load            : 1;
        default_inout_pin_cap          : 0.045;
        default_input_pin_cap          : 0.045;
        default_output_pin_cap         : 0;
        default_max_transition         : 2.008;
        default_cell_leakage_power     : 0;

         /* default attributes */
         slew_derate_from_library      : 1.000;
         slew_lower_threshold_pct_fall : 10.000;
         slew_upper_threshold_pct_fall : 90.000;
         slew_lower_threshold_pct_rise : 10.000;
         slew_upper_threshold_pct_rise : 90.000;
         input_threshold_pct_fall      : 50.000;
         input_threshold_pct_rise      : 50.000;
         output_threshold_pct_fall     : 50.000;
         output_threshold_pct_rise     : 50.000;
         default_leakage_power_density : 0;

        /* k-factors */
        k_process_recovery_fall        : 1;
        k_process_recovery_rise        : 1;
        k_process_cell_fall            : 1;
        k_process_cell_leakage_power   : 0;
        k_process_cell_rise            : 1;
        k_process_fall_transition      : 1;
        k_process_hold_fall            : 1;
        k_process_hold_rise            : 1;
        k_process_internal_power       : 0;
        k_process_min_pulse_width_high : 1;
        k_process_min_pulse_width_low  : 1;
        k_process_setup_fall           : 1;
        k_process_setup_rise           : 1;
        k_process_wire_cap             : 0;
        k_process_wire_res             : 0;
        k_process_pin_cap              : 0;
        k_process_rise_transition      : 1;
        k_temp_cell_fall               : 0.000;
        k_temp_cell_rise               : 0.000;
        k_temp_hold_fall               : 0.000;
        k_temp_hold_rise               : 0.000;
        k_temp_min_pulse_width_high    : 0.000;
        k_temp_min_pulse_width_low     : 0.000;
        k_temp_min_period              : 0.000;
        k_temp_rise_propagation        : 0.000;
        k_temp_fall_propagation        : 0.000;
        k_temp_rise_transition         : 0.000;
        k_temp_fall_transition         : 0.000;
        k_temp_recovery_fall           : 0.000;
        k_temp_recovery_rise           : 0.000;
        k_temp_setup_fall              : 0.000;
        k_temp_setup_rise              : 0.000;
        k_volt_cell_fall               : 0.000;
        k_volt_cell_rise               : 0.000;
        k_volt_hold_fall               : 0.000;
        k_volt_hold_rise               : 0.000;
        k_volt_min_pulse_width_high    : 0.000;
        k_volt_min_pulse_width_low     : 0.000;
        k_volt_min_period              : 0.000;
        k_volt_recovery_fall           : 0.000;
        k_volt_recovery_rise           : 0.000;
        k_volt_setup_fall              : 0.000;
        k_volt_setup_rise              : 0.000;
        k_volt_rise_propagation        : 0.000;
        k_volt_fall_propagation        : 0.000;
        k_volt_rise_transition         : 0.000;
        k_volt_fall_transition         : 0.000;

         voltage_map (VDD, 4.5);
         voltage_map (VSS, 0.00);
         operating_conditions(ss_4p5v_m40C) {
                process       : 1;
                temperature   : -40;
                voltage       : 4.5;
                tree_type     : balanced_tree;
         }

         default_operating_conditions : ss_4p5v_m40C;
         wire_load("Estimate") {
                resistance    : 1.44e-05;
                capacitance   : 0.00018;
                area          : 1.7;
                slope         : 500;
                fanout_length (1,500);
         }
         power_lut_template(power_template) {
            variable_1 : input_transition_time;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(q_delay_template) {
            variable_1 : input_net_transition;
            variable_2 : total_output_net_capacitance;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
                 index_2 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(q_slew_template) {
            variable_1 : total_output_net_capacitance;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(constraint_template) {
            variable_1 : related_pin_transition;
            variable_2 : constrained_pin_transition;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
                 index_2 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }

         library_features(report_delay_calculation);

         type (A_BUS) {
                base_type : array;
                data_type : bit;
                bit_width : 8;
                bit_from  : 7;
                bit_to    : 0;
                downto    : true;
         }
         type (Q_BUS) {
                base_type : array;
                data_type : bit;
                bit_width : 8;
                bit_from  : 7;
                bit_to    : 0;
                downto    : true;
         }
 cell(gf180mcu_fd_ip_sram__sram256x8m8wm1) {
        area             : 147212.4368;
        dont_use         : TRUE;
        dont_touch       : TRUE;
        interface_timing : TRUE;
        memory() {
                type          : ram;
                address_width : 8;
                word_width    : 8;
        }

                 bus(Q)   {
                  bus_type             : Q_BUS;
                  direction            : output;
                  max_capacitance      : 1.253;
                  memory_read() {
                        address        : A;
                  }
                  timing() {
                          related_pin  : "CLK";
                          timing_type  : rising_edge;
                          timing_sense : non_unate;
       		  when : "((!CEN) & (GWEN))";
        	  sdf_cond : "CEN== 1'b0 && GWEN== 1'b1";
                          cell_rise(q_delay_template) {
			  index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
			  index_2 ("0.01, 0.03235, 0.1108, 0.2606, 0.4941, 0.8216, 1.253");
                          values  ( \
                            "5.59128, 5.60736, 5.68692, 5.81604, 6.00492, 6.27132, 6.62484", \
                            "5.57796, 5.61024, 5.69304, 5.81352, 6.0096, 6.27348, 6.6168", \
                            "5.59968, 5.62068, 5.69736, 5.83284, 6.02028, 6.28704, 6.63012", \
                            "5.61564, 5.63988, 5.72184, 5.85108, 6.039, 6.3066, 6.64968", \
                            "5.6382, 5.66448, 5.74644, 5.87016, 6.06684, 6.32532, 6.67704", \
                            "5.65752, 5.68392, 5.75988, 5.89152, 6.07968, 6.34416, 6.693", \
                            "5.65452, 5.66856, 5.74596, 5.87772, 6.0708, 6.33264, 6.67668" \
                          )
                          }
                          rise_transition(q_slew_template) {
                          index_1 ("0.01, 0.03235, 0.1108, 0.2606, 0.4941, 0.8216, 1.253");
                          values  ( \
  	                     "0.179748, 0.214224, 0.333888, 0.562116, 0.91974, 1.44756, 2.12832" \
                          )

                          }
                          cell_fall(q_delay_template) {
                          index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          index_2 ("0.01, 0.03235, 0.1108, 0.2606, 0.4941, 0.8216, 1.253");
                          values  ( \
                            "5.77452, 5.79396, 5.8716, 5.99472, 6.15108, 6.35424, 6.61644", \
                            "5.76636, 5.79732, 5.88312, 5.99412, 6.15492, 6.3552, 6.6084", \
                            "5.7846, 5.81064, 5.88684, 6.00912, 6.1674, 6.36864, 6.62244", \
                            "5.80236, 5.82816, 5.9136, 6.0294, 6.18552, 6.39072, 6.64428", \
                            "5.82564, 5.8506, 5.93532, 6.04932, 6.21132, 6.40428, 6.67068", \
                            "5.8434, 5.86764, 5.94732, 6.07248, 6.22488, 6.4248, 6.68952", \
                            "5.84004, 5.85516, 5.93508, 6.05916, 6.21852, 6.41316, 6.66852" \
                          )
                          }
                          fall_transition(q_slew_template) {
                          index_1 ("0.01, 0.03235, 0.1108, 0.2606, 0.4941, 0.8216, 1.253");
                          values  ( \
                            "0.17886, 0.207852, 0.303576, 0.4461, 0.669384, 0.984924, 1.39788" \
                          )
                          }
                  }
          }
          pin(CLK)   {
                  direction            : input;
                  capacitance          : 0.317588;
                  clock                : true;
                  max_transition       : 2.008;
                  min_pulse_width_high : 3.340065;
                  min_pulse_width_low  : 3.503625;
                  min_period           : 7.594575;

/* WRITE POWER */
             internal_power() {
              when : "!CEN & !GWEN & (!WEN[0] | !WEN[1] | !WEN[2] | !WEN[3] | !WEN[4] | !WEN[5] | !WEN[6] | !WEN[7])";
              rise_power(power_template) {
                index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                values  ("735.458, 735.458, 735.458, 735.458, 735.458, 735.458, 735.458");
              }
              fall_power(power_template) {
                index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                values  ("735.458, 735.458, 735.458, 735.458, 735.458, 735.458, 735.458");
              }
             }
/* DISABLED POWER */
             internal_power() {
              when : "CEN";
              rise_power(power_template) {
                index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                values  ("0.000275315, 0.000275315, 0.000275315, 0.000275315, 0.000275315, 0.000275315, 0.000275315");
              }
              fall_power(power_template) {
                index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                values  ("0.000275315, 0.000275315, 0.000275315, 0.000275315, 0.000275315, 0.000275315, 0.000275315");
              }
             }
/* READ POWER */
             internal_power() {
             when : "!CEN & GWEN";
             rise_power(power_template) {
                index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                values  ("662.67, 662.67, 662.67, 662.67, 662.67, 662.67, 662.67");
              }
              fall_power(power_template) {
                index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                values  ("662.67, 662.67, 662.67, 662.67, 662.67, 662.67, 662.67");
              }
             }
          }

          pg_pin(VDD) {
                  voltage_name     : VDD;
                  pg_type          : primary_power;
          }
          pg_pin(VSS) {
                  voltage_name     : VSS;
                  pg_type          : primary_ground;
          }
          pin(CEN)   {
                  direction            : input;
                  capacitance          : 0.0195989;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          index_2 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          values  ( \
                            "0.512413, 0.50754, 0.49907, 0.514338, 0.555852, 0.610918, 0.658779", \
                            "0.508706, 0.503602, 0.495605, 0.510818, 0.55187, 0.607695, 0.651992", \
                            "0.505043, 0.500533, 0.492173, 0.506418, 0.543653, 0.589974, 0.640387", \
                            "0.504537, 0.496749, 0.490424, 0.505186, 0.542421, 0.591932, 0.623953", \
                            "0.504031, 0.499741, 0.489874, 0.505846, 0.547448, 0.588313, 0.619102", \
                            "0.503118, 0.495616, 0.48928, 0.505175, 0.546744, 0.587587, 0.621841", \
                            "0.502722, 0.498102, 0.489093, 0.5049, 0.546425, 0.587356, 0.618145" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          index_2 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          values  ( \
                            "0.458403, 0.460317, 0.47652, 0.515691, 0.585035, 0.669075, 0.760793", \
                            "0.455334, 0.456588, 0.473209, 0.510543, 0.581559, 0.665599, 0.757328", \
                            "0.449515, 0.453728, 0.469832, 0.509014, 0.578325, 0.662134, 0.751256", \
                            "0.450714, 0.452606, 0.468391, 0.50215, 0.577148, 0.661155, 0.752917", \
                            "0.450142, 0.451055, 0.46794, 0.504427, 0.576532, 0.660572, 0.749474", \
                            "0.449669, 0.451913, 0.467489, 0.503833, 0.576213, 0.659967, 0.75163", \
                            "0.448855, 0.450813, 0.46717, 0.506264, 0.575069, 0.659659, 0.750035" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          index_2 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          values  ( \
                            "1.23281, 1.23769, 1.24616, 1.23089, 1.18937, 1.14842, 1.11762", \
                            "1.23929, 1.24441, 1.2524, 1.23719, 1.19613, 1.1531, 1.12388", \
                            "1.25637, 1.26086, 1.26918, 1.25499, 1.21775, 1.17143, 1.13625", \
                            "1.29426, 1.30207, 1.30834, 1.2936, 1.25639, 1.20686, 1.17485", \
                            "1.35927, 1.36356, 1.37346, 1.35751, 1.31582, 1.27501, 1.2442", \
                            "1.41273, 1.42021, 1.42659, 1.41064, 1.36906, 1.32825, 1.29404", \
                            "1.4421, 1.44672, 1.45574, 1.4399, 1.39843, 1.35751, 1.32671" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          index_2 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          values  ( \
                            "1.28678, 1.28491, 1.26874, 1.22955, 1.16019, 1.07615, 0.984434", \
                            "1.29272, 1.2914, 1.27479, 1.23747, 1.16644, 1.08241, 0.990671", \
                            "1.31186, 1.30768, 1.29162, 1.25239, 1.18308, 1.09927, 1.01015", \
                            "1.34805, 1.34618, 1.33045, 1.29668, 1.22166, 1.13764, 1.04589", \
                            "1.41317, 1.41229, 1.39535, 1.35883, 1.28678, 1.20273, 1.11383", \
                            "1.46619, 1.46388, 1.44837, 1.41196, 1.33958, 1.25586, 1.16419", \
                            "1.496, 1.49402, 1.47763, 1.43858, 1.36972, 1.28513, 1.1948" \
                          )
                          }
                 }
          }
          pin(GWEN)   {
                  direction            : input;
                  capacitance          : 0.0508258;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          index_2 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          values  ( \
                            "0.67529, 0.679954, 0.697884, 0.738397, 0.805464, 0.891396, 0.970442", \
                            "0.669042, 0.673728, 0.691658, 0.732138, 0.801064, 0.88506, 0.963776", \
                            "0.652366, 0.656777, 0.673695, 0.715418, 0.784003, 0.86823, 0.946847", \
                            "0.613063, 0.617848, 0.635668, 0.676335, 0.744876, 0.829147, 0.907786", \
                            "0.547085, 0.551716, 0.569679, 0.610335, 0.680042, 0.76318, 0.841786", \
                            "0.488477, 0.492459, 0.51106, 0.551562, 0.618651, 0.704583, 0.780714", \
                            "0.443597, 0.448514, 0.465982, 0.506627, 0.573551, 0.659483, 0.738375" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          index_2 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          values  ( \
                            "0.71797, 0.723415, 0.749683, 0.804936, 0.894696, 1.01336, 1.14546", \
                            "0.712503, 0.71709, 0.741851, 0.797192, 0.88858, 1.00746, 1.14074", \
                            "0.69509, 0.700007, 0.724933, 0.781759, 0.87153, 0.991441, 1.12543", \
                            "0.656271, 0.661353, 0.687302, 0.742203, 0.832975, 0.952721, 1.08548", \
                            "0.589963, 0.595111, 0.621137, 0.675444, 0.766623, 0.886435, 1.01996", \
                            "0.531894, 0.536866, 0.561275, 0.616836, 0.708213, 0.827827, 0.960894", \
                            "0.486596, 0.492052, 0.516175, 0.572924, 0.663179, 0.782738, 0.916058" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          index_2 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          values  ( \
                            "1.0062, 1.00373, 0.984709, 0.94545, 0.899745, 0.850421, 0.814286", \
                            "1.01241, 1.01056, 0.990935, 0.951665, 0.901417, 0.856614, 0.820644", \
                            "1.01743, 1.01446, 0.996908, 0.956296, 0.906895, 0.861476, 0.825594", \
                            "1.03169, 1.02918, 1.01022, 0.970728, 0.921316, 0.875908, 0.83996", \
                            "1.05168, 1.04875, 1.03017, 0.990913, 0.940467, 0.896368, 0.859936", \
                            "1.06478, 1.06143, 1.04288, 1.00362, 0.957902, 0.909051, 0.875171", \
                            "1.0699, 1.06631, 1.04776, 1.00851, 0.962786, 0.913935, 0.877316" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          index_2 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          values  ( \
                            "0.542102, 0.533863, 0.507738, 0.450956, 0.362571, 0.256502, 0.128454", \
                            "0.547998, 0.540892, 0.514591, 0.456929, 0.367752, 0.261273, 0.131921", \
                            "0.556204, 0.546964, 0.519387, 0.462, 0.373637, 0.265627, 0.135623", \
                            "0.568106, 0.559482, 0.532609, 0.475453, 0.386958, 0.28028, 0.151471", \
                            "0.586047, 0.580481, 0.553718, 0.498146, 0.406329, 0.301961, 0.169797", \
                            "0.665456, 0.660616, 0.636493, 0.579843, 0.485463, 0.373615, 0.251627", \
                            "0.73667, 0.731148, 0.707949, 0.65065, 0.557546, 0.44506, 0.323235" \
                          )
                          }
                 }
          }
          bus(WEN)   {
                  bus_type             : Q_BUS;
                  direction            : input;
                  capacitance          : 0.00819589;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          index_2 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          values  ( \
                            "0, 0, 0, 0, 0, 0, 0.019162", \
                            "0, 0, 0, 0, 0, 0, 0.013574", \
                            "0, 0, 0, 0, 0, 0, 0.007271", \
                            "0, 0, 0, 0, 0, 0, 0", \
                            "0, 0, 0, 0, 0, 0, 0", \
                            "0, 0, 0, 0, 0, 0, 0", \
                            "0, 0, 0, 0, 0, 0, 0" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          index_2 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          values  ( \
                            "0.26806, 0.275825, 0.303061, 0.358732, 0.447744, 0.553674, 0.681637", \
                            "0.262783, 0.269463, 0.297418, 0.353375, 0.443036, 0.549901, 0.679349", \
                            "0.257283, 0.262812, 0.292567, 0.347336, 0.435028, 0.542861, 0.67474", \
                            "0.240857, 0.249976, 0.277871, 0.333399, 0.422488, 0.528407, 0.659043", \
                            "0.225141, 0.229452, 0.259175, 0.31405, 0.403623, 0.508541, 0.640695", \
                            "0.208628, 0.216789, 0.245361, 0.300641, 0.386056, 0.496859, 0.624932", \
                            "0.203828, 0.210417, 0.239544, 0.294943, 0.383108, 0.490039, 0.61908" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          index_2 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          values  ( \
                            "1.00928, 1.0043, 0.986216, 0.948123, 0.899745, 0.851884, 0.814473", \
                            "1.01516, 1.01056, 0.99209, 0.953997, 0.901417, 0.857758, 0.820644", \
                            "1.02003, 1.01505, 0.996974, 0.958881, 0.906895, 0.862631, 0.825594", \
                            "1.03445, 1.02947, 1.01138, 0.973291, 0.921316, 0.877052, 0.83996", \
                            "1.05442, 1.04943, 1.03135, 0.993267, 0.940467, 0.897017, 0.859936", \
                            "1.0671, 1.06213, 1.04403, 1.00594, 0.957902, 0.9097, 0.875171", \
                            "1.07199, 1.06701, 1.04894, 1.01083, 0.962786, 0.914595, 0.877316" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          index_2 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          values  ( \
                            "0.542817, 0.533918, 0.508288, 0.450956, 0.362868, 0.256502, 0.128669", \
                            "0.547998, 0.540892, 0.514767, 0.456929, 0.367752, 0.261273, 0.131921", \
                            "0.556204, 0.546964, 0.519585, 0.462, 0.373637, 0.265797, 0.135623", \
                            "0.568117, 0.559482, 0.533027, 0.475453, 0.387156, 0.28028, 0.151471", \
                            "0.586476, 0.580481, 0.551892, 0.495484, 0.406637, 0.301961, 0.169797", \
                            "0.60038, 0.592416, 0.567358, 0.508222, 0.425029, 0.314457, 0.184743", \
                            "0.605385, 0.599588, 0.57244, 0.513975, 0.426305, 0.319517, 0.190098" \
                          )
                          }
                 }
          }
          bus(A)   {
                  bus_type             : A_BUS;
                  direction            : input;
                  capacitance          : 0.0438819;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          index_2 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          values  ( \
                            "0.611611, 0.608223, 0.601249, 0.621467, 0.675587, 0.734404, 0.791285", \
                            "0.603493, 0.597806, 0.592834, 0.614328, 0.668976, 0.726726, 0.784795", \
                            "0.596233, 0.594297, 0.589578, 0.605022, 0.662167, 0.720236, 0.773729", \
                            "0.585046, 0.579238, 0.570647, 0.592548, 0.645425, 0.70807, 0.763851", \
                            "0.565268, 0.554884, 0.550154, 0.575091, 0.629156, 0.687577, 0.743424", \
                            "0.552211, 0.546161, 0.540155, 0.556237, 0.61732, 0.674817, 0.72666", \
                            "0.545446, 0.545358, 0.532642, 0.55484, 0.609114, 0.673508, 0.724306" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          index_2 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          values  ( \
                            "0.817586, 0.824648, 0.842072, 0.881672, 0.952908, 1.04562, 1.15452", \
                            "0.816046, 0.818169, 0.835131, 0.87296, 0.948321, 1.03819, 1.15084", \
                            "0.810788, 0.814671, 0.829092, 0.869913, 0.940214, 1.03363, 1.14203", \
                            "0.790427, 0.796334, 0.814451, 0.856438, 0.927696, 1.0207, 1.12818", \
                            "0.772288, 0.779372, 0.796477, 0.831072, 0.906323, 0.998052, 1.10683", \
                            "0.763367, 0.765545, 0.783596, 0.819885, 0.895026, 0.984533, 1.09552", \
                            "0.755656, 0.761321, 0.777172, 0.813406, 0.88913, 0.981508, 1.09079" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          index_2 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          values  ( \
                            "0.634678, 0.639166, 0.643302, 0.638473, 0.634667, 0.634502, 0.632984", \
                            "0.636801, 0.643192, 0.645733, 0.641278, 0.637472, 0.638231, 0.635789", \
                            "0.657844, 0.66363, 0.666512, 0.661738, 0.656304, 0.658691, 0.656249", \
                            "0.698896, 0.704264, 0.707685, 0.703175, 0.702427, 0.69971, 0.697257", \
                            "0.759594, 0.765204, 0.768031, 0.763488, 0.759682, 0.760441, 0.757999", \
                            "0.831479, 0.837353, 0.839839, 0.832887, 0.831567, 0.832326, 0.829884", \
                            "0.892606, 0.897105, 0.901395, 0.897413, 0.896621, 0.893948, 0.891495" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          index_2 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          values  ( \
                            "0.655567, 0.651574, 0.63404, 0.606727, 0.600996, 0.610258, 0.611358", \
                            "0.658152, 0.654379, 0.638077, 0.612436, 0.60379, 0.613052, 0.614009", \
                            "0.678645, 0.674707, 0.65736, 0.629992, 0.624261, 0.633512, 0.634623", \
                            "0.719983, 0.715792, 0.69872, 0.671011, 0.66528, 0.669218, 0.675631", \
                            "0.780593, 0.776457, 0.759484, 0.734646, 0.726011, 0.735262, 0.736362", \
                            "0.852247, 0.848397, 0.830841, 0.803616, 0.798039, 0.807147, 0.808192", \
                            "0.91388, 0.909953, 0.891979, 0.86801, 0.859518, 0.867581, 0.869869" \
                          )
                          }
                 }
          }
          bus(D)   {
                  bus_type             : Q_BUS;
                  memory_write() {
                          address      : A;
                          clocked_on   : "CLK";
                  }
                  direction            : input;
                  capacitance          : 0.017554;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          index_2 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          values  ( \
                            "0.581779, 0.587598, 0.604868, 0.627539, 0.633325, 0.621808, 0.594605", \
                            "0.577896, 0.579865, 0.59785, 0.620829, 0.626384, 0.614691, 0.588038", \
                            "0.568876, 0.573848, 0.592339, 0.61468, 0.621698, 0.605594, 0.581295", \
                            "0.556985, 0.56265, 0.577555, 0.600281, 0.606342, 0.595551, 0.568953", \
                            "0.53592, 0.541156, 0.557403, 0.580745, 0.587796, 0.57398, 0.549692", \
                            "0.522852, 0.527274, 0.544555, 0.568513, 0.574706, 0.561572, 0.535315", \
                            "0.518639, 0.5236, 0.540782, 0.563695, 0.569096, 0.554213, 0.529815" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          index_2 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          values  ( \
                            "0.106823, 0.106077, 0.127118, 0.191153, 0.288068, 0.413347, 0.565235", \
                            "0.0996017, 0.0980353, 0.120608, 0.184784, 0.280841, 0.406725, 0.558613", \
                            "0.0945604, 0.0922229, 0.114761, 0.178706, 0.274803, 0.400653, 0.550671", \
                            "0.0799975, 0.078859, 0.100385, 0.165495, 0.261931, 0.386485, 0.538615", \
                            "0.05984, 0.0598411, 0.0808247, 0.145078, 0.239293, 0.366751, 0.518826", \
                            "0.046948, 0.047487, 0.0679844, 0.132057, 0.228093, 0.353837, 0.504515", \
                            "0.040832, 0.041338, 0.0631488, 0.127091, 0.223329, 0.349041, 0.500302" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          index_2 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          values  ( \
                            "0.531894, 0.526757, 0.506495, 0.484759, 0.478632, 0.489236, 0.51766", \
                            "0.530475, 0.533049, 0.514272, 0.491326, 0.485243, 0.496023, 0.526405", \
                            "0.544511, 0.538945, 0.521169, 0.498619, 0.491073, 0.502337, 0.53207", \
                            "0.555555, 0.550473, 0.535744, 0.512501, 0.505054, 0.515669, 0.54659", \
                            "0.576807, 0.571186, 0.555423, 0.530772, 0.523798, 0.535359, 0.56287", \
                            "0.588885, 0.585178, 0.567952, 0.545215, 0.537713, 0.549252, 0.578523", \
                            "0.595144, 0.588643, 0.571692, 0.548581, 0.542454, 0.555555, 0.584617" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          index_2 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          values  ( \
                            "0.762399, 0.762938, 0.741895, 0.677072, 0.581042, 0.456126, 0.307593", \
                            "0.769714, 0.770539, 0.748451, 0.683628, 0.587598, 0.462693, 0.31416", \
                            "0.774785, 0.776391, 0.754061, 0.689568, 0.593538, 0.468622, 0.321288", \
                            "0.788986, 0.790317, 0.768328, 0.70345, 0.60742, 0.482504, 0.333971", \
                            "0.808478, 0.809072, 0.787952, 0.723129, 0.627099, 0.502172, 0.353628", \
                            "0.822074, 0.821975, 0.800965, 0.736153, 0.640123, 0.515207, 0.366674", \
                            "0.826155, 0.827563, 0.805706, 0.740894, 0.644864, 0.519948, 0.371415" \
                          )
                          }
                 }
        }
          cell_leakage_power : 0.0002753145;
}
}
