/*
 * Copyright 2022 GlobalFoundries PDK Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 *      Single Port SRAM cell name : gf180mcu_fd_ip_sram__sram512x8m8wm1
 *      Technology                 : GF 180nm 5V Green
 *
 *      ---------
 *      Pin name:
 *      ---------
 *      Input Pins : CLK CEN GWEN WEN[7:0] A[8:0] D[7:0]
 *      Inout Pins:  VDD VSS
 *      Output Pins: Q[7:0]
 *
 *     Revision History: 1.0 (Initial Release: June 20, 2014)
 */

library(gf180mcu_fd_ip_sram__sram512x8m8wm1__ss_125C_1v62) {
        delay_model             : table_lookup;
        revision                : 1.0;
        date                    : "June 20, 2014";
        comment                 : "GF 180nm 5V Green";
        voltage_unit            : "1V";
        time_unit               : "1ns";
        current_unit            : "1mA";
        leakage_power_unit      : "1mW";
        nom_process             : 1;
        nom_temperature         : 125;
        nom_voltage             : 1.62;
        capacitive_load_unit    (1,pf);
        pulling_resistance_unit : "1kohm";

        /* additional header data */
        default_fanout_load            : 1;
        default_inout_pin_cap          : 0.045;
        default_input_pin_cap          : 0.045;
        default_output_pin_cap         : 0;
        default_max_transition         : 11.06;
        default_cell_leakage_power     : 0;

         /* default attributes */
         slew_derate_from_library      : 1.000;
         slew_lower_threshold_pct_fall : 10.000;
         slew_upper_threshold_pct_fall : 90.000;
         slew_lower_threshold_pct_rise : 10.000;
         slew_upper_threshold_pct_rise : 90.000;
         input_threshold_pct_fall      : 50.000;
         input_threshold_pct_rise      : 50.000;
         output_threshold_pct_fall     : 50.000;
         output_threshold_pct_rise     : 50.000;
         default_leakage_power_density : 0;

        /* k-factors */
        k_process_recovery_fall        : 1;
        k_process_recovery_rise        : 1;
        k_process_cell_fall            : 1;
        k_process_cell_leakage_power   : 0;
        k_process_cell_rise            : 1;
        k_process_fall_transition      : 1;
        k_process_hold_fall            : 1;
        k_process_hold_rise            : 1;
        k_process_internal_power       : 0;
        k_process_min_pulse_width_high : 1;
        k_process_min_pulse_width_low  : 1;
        k_process_setup_fall           : 1;
        k_process_setup_rise           : 1;
        k_process_wire_cap             : 0;
        k_process_wire_res             : 0;
        k_process_pin_cap              : 0;
        k_process_rise_transition      : 1;
        k_temp_cell_fall               : 0.000;
        k_temp_cell_rise               : 0.000;
        k_temp_hold_fall               : 0.000;
        k_temp_hold_rise               : 0.000;
        k_temp_min_pulse_width_high    : 0.000;
        k_temp_min_pulse_width_low     : 0.000;
        k_temp_min_period              : 0.000;
        k_temp_rise_propagation        : 0.000;
        k_temp_fall_propagation        : 0.000;
        k_temp_rise_transition         : 0.000;
        k_temp_fall_transition         : 0.000;
        k_temp_recovery_fall           : 0.000;
        k_temp_recovery_rise           : 0.000;
        k_temp_setup_fall              : 0.000;
        k_temp_setup_rise              : 0.000;
        k_volt_cell_fall               : 0.000;
        k_volt_cell_rise               : 0.000;
        k_volt_hold_fall               : 0.000;
        k_volt_hold_rise               : 0.000;
        k_volt_min_pulse_width_high    : 0.000;
        k_volt_min_pulse_width_low     : 0.000;
        k_volt_min_period              : 0.000;
        k_volt_recovery_fall           : 0.000;
        k_volt_recovery_rise           : 0.000;
        k_volt_setup_fall              : 0.000;
        k_volt_setup_rise              : 0.000;
        k_volt_rise_propagation        : 0.000;
        k_volt_fall_propagation        : 0.000;
        k_volt_rise_transition         : 0.000;
        k_volt_fall_transition         : 0.000;

         voltage_map (VDD, 1.62);
         voltage_map (VSS, 0.00);
         operating_conditions(ss_1p62v_125C) {
                process       : 1;
                temperature   : 125;
                voltage       : 1.62;
                tree_type     : balanced_tree;
         }

         default_operating_conditions : ss_1p62v_125C;
         wire_load("Estimate") {
                resistance    : 1.44e-05;
                capacitance   : 0.00018;
                area          : 1.7;
                slope         : 500;
                fanout_length (1,500);
         }
         power_lut_template(power_template) {
            variable_1 : input_transition_time;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(q_delay_template) {
            variable_1 : input_net_transition;
            variable_2 : total_output_net_capacitance;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
                 index_2 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(q_slew_template) {
            variable_1 : total_output_net_capacitance;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(constraint_template) {
            variable_1 : related_pin_transition;
            variable_2 : constrained_pin_transition;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
                 index_2 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }

         library_features(report_delay_calculation);

         type (A_BUS) {
                base_type : array;
                data_type : bit;
                bit_width : 9;
                bit_from  : 8;
                bit_to    : 0;
                downto    : true;
         }
         type (Q_BUS) {
                base_type : array;
                data_type : bit;
                bit_width : 8;
                bit_from  : 7;
                bit_to    : 0;
                downto    : true;
         }
 cell(gf180mcu_fd_ip_sram__sram512x8m8wm1) {
        area             : 209400.2768;
        dont_use         : TRUE;
        dont_touch       : TRUE;
        interface_timing : TRUE;
        memory() {
                type          : ram;
                address_width : 9;
                word_width    : 8;
        }

                 bus(Q)   {
                  bus_type             : Q_BUS;
                  direction            : output;
                  max_capacitance      : 1.058;
                  memory_read() {
                        address        : A;
                  }
                  timing() {
                          related_pin  : "CLK";
                          timing_type  : rising_edge;
                          timing_sense : non_unate;
       		  when : "((!CEN) & (GWEN))";
        	  sdf_cond : "CEN== 1'b0 && GWEN== 1'b1";
                          cell_rise(q_delay_template) {
			  index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
			  index_2 ("0.01, 0.02885, 0.09503, 0.2214, 0.4183, 0.6946, 1.058");
                          values  ( \
                            "40.5756, 40.632, 41.2032, 41.9892, 43.1904, 44.7768, 46.9236", \
                            "40.5888, 40.7424, 41.2488, 42.0756, 43.2768, 44.8728, 47.028", \
                            "40.8924, 40.9788, 41.4936, 42.3096, 43.4484, 45.1488, 47.1996", \
                            "41.2236, 41.3868, 41.8596, 42.6756, 43.8156, 45.5016, 47.6412", \
                            "41.694, 41.8392, 42.312, 43.0956, 44.3184, 45.9396, 48.0648", \
                            "42.3432, 42.4356, 42.912, 43.7184, 44.9004, 46.4916, 48.6804", \
                            "42.9324, 43.1064, 43.5768, 44.3832, 45.5556, 47.2068, 49.3404" \
                          )
                          }
                          rise_transition(q_slew_template) {
                          index_1 ("0.01, 0.02885, 0.09503, 0.2214, 0.4183, 0.6946, 1.058");
                          values  ( \
  	                     "1.12718, 1.33476, 2.04684, 3.38796, 5.4132, 8.44092, 12.4392" \
                          )

                          }
                          cell_fall(q_delay_template) {
                          index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          index_2 ("0.01, 0.02885, 0.09503, 0.2214, 0.4183, 0.6946, 1.058");
                          values  ( \
                            "42.84, 42.9468, 43.3776, 43.878, 44.5344, 45.294, 46.2684", \
                            "42.888, 43.014, 43.3908, 43.9464, 44.6172, 45.3924, 46.3824", \
                            "43.1688, 43.2492, 43.68, 44.2224, 44.8116, 45.6972, 46.5336", \
                            "43.5348, 43.6488, 44.0184, 44.5404, 45.1764, 45.9888, 46.9488", \
                            "43.9896, 44.106, 44.46, 44.9904, 45.6768, 46.464, 47.4108", \
                            "44.6196, 44.6856, 45.0828, 45.6156, 46.2792, 47.01, 48", \
                            "45.2568, 45.3876, 45.7512, 46.2492, 46.926, 47.6976, 48.7032" \
                          )
                          }
                          fall_transition(q_slew_template) {
                          index_1 ("0.01, 0.02885, 0.09503, 0.2214, 0.4183, 0.6946, 1.058");
                          values  ( \
                            "1.10143, 1.21128, 1.57476, 2.17716, 3.01728, 4.227, 5.6514" \
                          )
                          }
                  }
          }
          pin(CLK)   {
                  direction            : input;
                  capacitance          : 0.301146;
                  clock                : true;
                  max_transition       : 11.06;
                  min_pulse_width_high : 13.355415;
                  min_pulse_width_low  : 27.1047;
                  min_period           : 56.5713;

/* WRITE POWER */
             internal_power() {
              when : "!CEN & !GWEN & (!WEN[0] | !WEN[1] | !WEN[2] | !WEN[3] | !WEN[4] | !WEN[5] | !WEN[6] | !WEN[7])";
              rise_power(power_template) {
                index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                values  ("95.2317, 95.2317, 95.2317, 95.2317, 95.2317, 95.2317, 95.2317");
              }
              fall_power(power_template) {
                index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                values  ("95.2317, 95.2317, 95.2317, 95.2317, 95.2317, 95.2317, 95.2317");
              }
             }
/* DISABLED POWER */
             internal_power() {
              when : "CEN";
              rise_power(power_template) {
                index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                values  ("8.75011e-05, 8.75011e-05, 8.75011e-05, 8.75011e-05, 8.75011e-05, 8.75011e-05, 8.75011e-05");
              }
              fall_power(power_template) {
                index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                values  ("8.75011e-05, 8.75011e-05, 8.75011e-05, 8.75011e-05, 8.75011e-05, 8.75011e-05, 8.75011e-05");
              }
             }
/* READ POWER */
             internal_power() {
             when : "!CEN & GWEN";
             rise_power(power_template) {
                index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                values  ("87.8526, 87.8526, 87.8526, 87.8526, 87.8526, 87.8526, 87.8526");
              }
              fall_power(power_template) {
                index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                values  ("87.8526, 87.8526, 87.8526, 87.8526, 87.8526, 87.8526, 87.8526");
              }
             }
          }

          pg_pin(VDD) {
                  voltage_name     : VDD;
                  pg_type          : primary_power;
          }
          pg_pin(VSS) {
                  voltage_name     : VSS;
                  pg_type          : primary_ground;
          }
          pin(CEN)   {
                  direction            : input;
                  capacitance          : 0.0198584;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          index_2 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          values  ( \
                            "3.58424, 3.54035, 3.60118, 3.96132, 4.65685, 5.82472, 7.31896", \
                            "3.54321, 3.49415, 3.53584, 3.90544, 4.60889, 5.77995, 7.24196", \
                            "3.33872, 3.27855, 3.32607, 3.69886, 4.39241, 5.53289, 7.0664", \
                            "2.92358, 2.90202, 2.93447, 3.3264, 4.00136, 5.17286, 6.62651", \
                            "2.88629, 2.85351, 2.8919, 3.2725, 3.93536, 5.12127, 6.53059", \
                            "2.88772, 2.83932, 2.88673, 3.24654, 3.97001, 5.10532, 6.5692", \
                            "2.8908, 2.83195, 2.89003, 3.25193, 3.97144, 5.08332, 6.57921" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          index_2 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          values  ( \
                            "2.46015, 2.48611, 2.68873, 3.1229, 3.83647, 4.87509, 6.22039", \
                            "2.39228, 2.42704, 2.62988, 3.06394, 3.77553, 4.8257, 6.16132", \
                            "2.17811, 2.20968, 2.41604, 2.8479, 3.56158, 4.59998, 5.94748", \
                            "2.17162, 2.20176, 2.40229, 2.83514, 3.55322, 4.58821, 5.90271", \
                            "2.1626, 2.20066, 2.40185, 2.83327, 3.54552, 4.58425, 5.90194", \
                            "2.16755, 2.19846, 2.39646, 2.83118, 3.55124, 4.58216, 5.89974", \
                            "2.15952, 2.19945, 2.39701, 2.83206, 3.54167, 4.5859, 5.90062" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          index_2 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          values  ( \
                            "8.15914, 8.20094, 8.14011, 7.78349, 7.10083, 5.93043, 4.44576", \
                            "8.19412, 8.23559, 8.18686, 7.83915, 7.15517, 5.97069, 4.52067", \
                            "8.36704, 8.42149, 8.38497, 8.0113, 7.31291, 6.19311, 4.66433", \
                            "8.78427, 8.80473, 8.76304, 8.37342, 7.69461, 6.53873, 5.10125", \
                            "9.38278, 9.41556, 9.37717, 8.99657, 8.33371, 7.1478, 5.73848", \
                            "10.2079, 10.2563, 10.2089, 9.84907, 9.1256, 7.99029, 6.52652", \
                            "11.1578, 11.2167, 11.1586, 10.7966, 10.0772, 8.96533, 7.46944" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          index_2 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          values  ( \
                            "8.85423, 8.82299, 8.62521, 8.19049, 7.47615, 6.43929, 5.12171", \
                            "8.91715, 8.87744, 8.67955, 8.24472, 7.53247, 6.4845, 5.17616", \
                            "9.10151, 9.06455, 8.86347, 8.43095, 7.71661, 6.68008, 5.35216", \
                            "9.47529, 9.44504, 9.24462, 8.81177, 8.09358, 7.0587, 5.74409", \
                            "10.1065, 10.0684, 9.86722, 9.4358, 8.72355, 7.68482, 6.36713", \
                            "10.9281, 10.8971, 10.6991, 10.2644, 9.54437, 8.51345, 7.19587", \
                            "11.8888, 11.8492, 11.6512, 11.2166, 10.507, 9.46275, 8.14803" \
                          )
                          }
                 }
          }
          pin(GWEN)   {
                  direction            : input;
                  capacitance          : 0.0455144;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          index_2 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          values  ( \
                            "4.15349, 4.2086, 4.39494, 4.7938, 5.35656, 6.20059, 7.15726", \
                            "4.10069, 4.15481, 4.32696, 4.75376, 5.30024, 6.14438, 7.09555", \
                            "3.89862, 3.95153, 4.1349, 4.55026, 5.15471, 5.96079, 6.89645", \
                            "3.51461, 3.56598, 3.75122, 4.16064, 4.76795, 5.55687, 6.51354", \
                            "2.9007, 2.96087, 3.13896, 3.55773, 4.158, 4.95, 5.90645", \
                            "2.23564, 2.28074, 2.45674, 2.87881, 3.48535, 4.27251, 5.22423", \
                            "1.50832, 1.56684, 1.74592, 2.16403, 2.76694, 3.56598, 4.51275" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          index_2 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          values  ( \
                            "5.57975, 5.64982, 5.84881, 6.29629, 7.02603, 8.04397, 9.40775", \
                            "5.53476, 5.59229, 5.79271, 6.24338, 6.93198, 7.97676, 9.33757", \
                            "5.32818, 5.38329, 5.59119, 6.04241, 6.76896, 7.78701, 9.17939", \
                            "4.93999, 5.00599, 5.20399, 5.67611, 6.37769, 7.37935, 8.76414", \
                            "4.34104, 4.39769, 4.61923, 5.06902, 5.73738, 6.79316, 8.14297", \
                            "3.6707, 3.72174, 3.9193, 4.34973, 5.09498, 6.116, 7.48", \
                            "2.95119, 3.00355, 3.20386, 3.67466, 4.34269, 5.37823, 6.74905" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          index_2 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          values  ( \
                            "7.36835, 7.3227, 7.13031, 6.74003, 6.23557, 5.57436, 4.884", \
                            "7.01239, 6.9674, 6.78612, 6.39782, 5.88082, 5.18958, 4.59316", \
                            "6.46558, 6.42477, 6.24019, 5.85035, 5.27956, 4.63375, 4.02391", \
                            "6.06848, 6.02855, 5.81812, 5.44082, 4.87399, 4.26844, 3.586", \
                            "6.34579, 6.30058, 6.12073, 5.72297, 5.15911, 4.5232, 3.87761", \
                            "6.86488, 6.81901, 6.63608, 6.24888, 5.68403, 5.04163, 4.43619", \
                            "7.48605, 7.44227, 7.26022, 6.86917, 6.30762, 5.66533, 4.98025" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          index_2 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          values  ( \
                            "4.35633, 4.29715, 4.08727, 3.6751, 2.92259, 1.91675, 0.558921", \
                            "4.01786, 3.94097, 3.7356, 3.30649, 2.61646, 1.56563, 0.235873", \
                            "3.45642, 3.38921, 3.18593, 2.75858, 2.02015, 1.01313, 0", \
                            "3.0734, 2.99915, 2.78872, 2.34366, 1.62855, 0.615791, 0", \
                            "3.33872, 3.27404, 3.05877, 2.61976, 1.94931, 0.893574, 0", \
                            "3.8687, 3.79346, 3.58336, 3.16756, 2.42484, 1.41306, 0.055781", \
                            "4.47524, 4.41254, 4.20365, 3.75848, 3.08825, 2.0306, 0.707696" \
                          )
                          }
                 }
          }
          bus(WEN)   {
                  bus_type             : Q_BUS;
                  direction            : input;
                  capacitance          : 0.00749419;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          index_2 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          values  ( \
                            "0, 0, 0, 0, 0, 0, 0", \
                            "0, 0, 0, 0, 0, 0, 0", \
                            "0, 0, 0, 0, 0, 0, 0.144112", \
                            "0, 0, 0, 0, 0, 0, 0.574728", \
                            "0, 0, 0, 0, 0, 0, 0.277275", \
                            "0, 0, 0, 0, 0, 0, 0", \
                            "0, 0, 0, 0, 0, 0, 0" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          index_2 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          values  ( \
                            "0, 0, 0, 0.391776, 1.1426, 2.15314, 3.5145", \
                            "0.019701, 0.126987, 0.336248, 0.763202, 1.45178, 2.50547, 3.84659", \
                            "0.586861, 0.676071, 0.887447, 1.31326, 2.0515, 3.06097, 4.43047", \
                            "0.985501, 1.07062, 1.27863, 1.72645, 2.43991, 3.45543, 4.81514", \
                            "0.699908, 0.791208, 1.00462, 1.45079, 2.10771, 3.17581, 4.51165", \
                            "0.178079, 0.27951, 0.483098, 0.899514, 1.64241, 2.65859, 4.01973", \
                            "0, 0, 0, 0.310561, 0.970233, 2.04006, 3.37249" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          index_2 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          values  ( \
                            "7.39112, 7.33975, 7.13097, 6.7826, 6.23557, 5.57502, 4.92239", \
                            "7.03461, 6.97884, 6.78612, 6.42169, 5.88082, 5.23391, 4.59316", \
                            "6.48758, 6.43181, 6.24019, 5.86267, 5.2888, 4.66543, 4.02391", \
                            "6.09026, 6.0324, 5.82637, 5.46051, 4.89676, 4.26844, 3.62439", \
                            "6.36768, 6.30817, 6.12073, 5.7365, 5.17066, 4.60174, 3.88003", \
                            "6.886, 6.8266, 6.63608, 6.26142, 5.68403, 5.11027, 4.44125", \
                            "7.50662, 7.44711, 7.26022, 6.88138, 6.30762, 5.70702, 5.09938" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          index_2 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          values  ( \
                            "4.36469, 4.36337, 4.12313, 3.69853, 2.92644, 1.91675, 0.599126", \
                            "4.03205, 4.00818, 3.77014, 3.34389, 2.62405, 1.56563, 0.266989", \
                            "3.46973, 3.44861, 3.22146, 2.7962, 2.02389, 1.01313, 0", \
                            "3.08748, 3.06548, 2.82568, 2.38359, 1.63548, 0.65065, 0", \
                            "3.34983, 3.34136, 3.09496, 2.65958, 1.95701, 0.893574, 0", \
                            "3.87343, 3.86001, 3.61944, 3.20705, 2.43188, 1.41306, 0.0957", \
                            "4.48866, 4.47986, 4.23984, 3.79852, 3.09584, 2.06536, 0.738936" \
                          )
                          }
                 }
          }
          bus(A)   {
                  bus_type             : A_BUS;
                  direction            : input;
                  capacitance          : 0.0440769;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          index_2 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          values  ( \
                            "3.64661, 3.6652, 3.66663, 4.04723, 4.77356, 5.88159, 7.34558", \
                            "4.00015, 3.98794, 4.02589, 4.39527, 5.11599, 6.24657, 7.69439", \
                            "4.54212, 4.52562, 4.56401, 4.95011, 5.6441, 6.76731, 8.23515", \
                            "4.97123, 4.91821, 4.96122, 5.36591, 6.06265, 7.19191, 8.66118", \
                            "4.67247, 4.66213, 4.68886, 5.08717, 5.78611, 6.89282, 8.35241", \
                            "4.1646, 4.1426, 4.16383, 4.5694, 5.26658, 6.38341, 7.84905", \
                            "3.52473, 3.51043, 3.53551, 3.93591, 4.6904, 5.75421, 7.21435" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          index_2 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          values  ( \
                            "4.18605, 4.2317, 4.46457, 4.90644, 5.60384, 6.66886, 8.01064", \
                            "4.55114, 4.6024, 4.81833, 5.2536, 5.91987, 7.03186, 8.3886", \
                            "5.09575, 5.12248, 5.34699, 5.79557, 6.50155, 7.56217, 8.90604", \
                            "5.4923, 5.55654, 5.77181, 6.19575, 6.92747, 7.97984, 9.31348", \
                            "5.22929, 5.25008, 5.49252, 5.92658, 6.64697, 7.72167, 9.06103", \
                            "4.70019, 4.72395, 4.95726, 5.40661, 6.06507, 7.19554, 8.50564", \
                            "4.08188, 4.09849, 4.32949, 4.77752, 5.48218, 6.55479, 7.89646" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          index_2 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          values  ( \
                            "2.70248, 2.72899, 2.68961, 2.27964, 1.57839, 0.648307, 0", \
                            "2.76694, 2.79323, 2.75407, 2.3441, 1.64285, 0.712723, 0", \
                            "2.98386, 3.01048, 2.96109, 2.56102, 1.85988, 0.929775, 0", \
                            "3.35962, 3.38591, 3.34675, 2.93678, 2.23553, 1.30544, 0.283158", \
                            "3.98002, 4.00631, 3.96715, 3.55718, 2.85593, 1.96196, 0.90354", \
                            "4.78269, 4.80909, 4.76971, 4.35985, 3.6586, 2.72855, 1.70632", \
                            "5.7288, 5.7552, 5.71593, 5.30618, 4.60504, 3.67499, 2.57521" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          index_2 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          values  ( \
                            "3.26029, 3.21486, 3.00597, 2.56949, 2.02103, 1.35751, 0.604417", \
                            "3.32453, 3.27932, 3.07032, 2.6345, 2.08549, 1.42197, 0.668811", \
                            "3.54002, 3.49635, 3.28735, 2.85153, 2.30252, 1.639, 0.885896", \
                            "3.91578, 3.872, 3.663, 3.22663, 2.67817, 2.01465, 1.26152", \
                            "4.53772, 4.4924, 4.28329, 3.84758, 3.29857, 2.63494, 1.88188", \
                            "5.3405, 5.29518, 5.08618, 4.64981, 4.10135, 3.43772, 2.68466", \
                            "6.28694, 6.24173, 6.03273, 5.59691, 5.04801, 4.38438, 3.63121" \
                          )
                          }
                 }
          }
          bus(D)   {
                  bus_type             : Q_BUS;
                  memory_write() {
                          address      : A;
                          clocked_on   : "CLK";
                  }
                  direction            : input;
                  capacitance          : 0.0171833;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          index_2 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          values  ( \
                            "3.03666, 3.09947, 3.28163, 3.66597, 4.03524, 4.49086, 4.84198", \
                            "3.37315, 3.45246, 3.64034, 4.01621, 4.38207, 4.83725, 5.23864", \
                            "3.91325, 3.97342, 4.18539, 4.55103, 4.93174, 5.34028, 5.7365", \
                            "4.34038, 4.37668, 4.60801, 4.96353, 5.32752, 5.79359, 6.18838", \
                            "4.04547, 4.11796, 4.3252, 4.69491, 5.06165, 5.50473, 5.86476", \
                            "3.531, 3.59546, 3.78719, 4.16581, 4.54146, 5.00093, 5.41299", \
                            "2.88882, 2.9502, 3.15931, 3.53683, 3.9424, 4.38152, 4.73011" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          index_2 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          values  ( \
                            "0, 0, 0, 0, 0, 0.519893, 1.80246", \
                            "0, 0, 0, 0, 0, 0.872168, 2.15446", \
                            "0, 0, 0, 0, 0.432454, 1.39535, 2.67454", \
                            "0, 0, 0, 0.113532, 0.849695, 1.8205, 3.10288", \
                            "0, 0, 0, 0, 0.573617, 1.54451, 2.82612", \
                            "0, 0, 0, 0, 0.050358, 1.02075, 2.30351", \
                            "0, 0, 0, 0, 0, 0.396187, 1.67849" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          index_2 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          values  ( \
                            "3.49008, 3.43739, 3.23136, 2.86165, 2.475, 2.04842, 1.66969", \
                            "3.14424, 3.08473, 2.88453, 2.52043, 2.1252, 1.69477, 1.32649", \
                            "2.61206, 2.5542, 2.35345, 1.98825, 1.60875, 1.16417, 0.795168", \
                            "2.16909, 2.12025, 1.90982, 1.5521, 1.16235, 0.728607, 0.362296", \
                            "2.45696, 2.40537, 2.20077, 1.82468, 1.45629, 1.00802, 0.647086", \
                            "2.99299, 2.94327, 2.73977, 2.37501, 1.97978, 1.56486, 1.17979", \
                            "3.61031, 3.56224, 3.37414, 2.98144, 2.57576, 2.20506, 1.81412" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          index_2 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          values  ( \
                            "6.30894, 6.30564, 6.14339, 5.71483, 4.97662, 3.99091, 2.73317", \
                            "5.96596, 5.96189, 5.8003, 5.37174, 4.63364, 3.64782, 2.39008", \
                            "5.43334, 5.43147, 5.26966, 4.8411, 4.103, 3.11718, 1.85944", \
                            "4.99939, 4.99543, 4.83384, 4.40528, 3.66718, 2.68136, 1.42362", \
                            "5.27835, 5.27494, 5.11302, 4.68435, 3.94614, 2.96043, 1.70269", \
                            "5.81537, 5.81372, 5.65191, 5.22335, 4.48525, 3.49943, 2.2418", \
                            "6.43038, 6.42873, 6.26648, 5.83792, 5.09982, 4.11411, 2.85637" \
                          )
                          }
                 }
        }
          cell_leakage_power : 8.750106e-05;
}
}
