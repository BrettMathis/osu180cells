/*
 * Copyright 2022 GlobalFoundries PDK Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 *      Single Port SRAM cell name : gf180mcu_fd_ip_sram__sram512x8m8wm1
 *      Technology                 : GF 180nm 5V Green
 *
 *      ---------
 *      Pin name:
 *      ---------
 *      Input Pins : CLK CEN GWEN WEN[7:0] A[8:0] D[7:0]
 *      Inout Pins:  VDD VSS
 *      Output Pins: Q[7:0]
 *
 *     Revision History: 1.0 (Initial Release: June 20, 2014)
 */

library(gf180mcu_fd_ip_sram__sram512x8m8wm1__ss_n40C_1v62) {
        delay_model             : table_lookup;
        revision                : 1.0;
        date                    : "June 20, 2014";
        comment                 : "GF 180nm 5V Green";
        voltage_unit            : "1V";
        time_unit               : "1ns";
        current_unit            : "1mA";
        leakage_power_unit      : "1mW";
        nom_process             : 1;
        nom_temperature         : -40;
        nom_voltage             : 1.62;
        capacitive_load_unit    (1,pf);
        pulling_resistance_unit : "1kohm";

        /* additional header data */
        default_fanout_load            : 1;
        default_inout_pin_cap          : 0.045;
        default_input_pin_cap          : 0.045;
        default_output_pin_cap         : 0;
        default_max_transition         : 10.6;
        default_cell_leakage_power     : 0;

         /* default attributes */
         slew_derate_from_library      : 1.000;
         slew_lower_threshold_pct_fall : 10.000;
         slew_upper_threshold_pct_fall : 90.000;
         slew_lower_threshold_pct_rise : 10.000;
         slew_upper_threshold_pct_rise : 90.000;
         input_threshold_pct_fall      : 50.000;
         input_threshold_pct_rise      : 50.000;
         output_threshold_pct_fall     : 50.000;
         output_threshold_pct_rise     : 50.000;
         default_leakage_power_density : 0;

        /* k-factors */
        k_process_recovery_fall        : 1;
        k_process_recovery_rise        : 1;
        k_process_cell_fall            : 1;
        k_process_cell_leakage_power   : 0;
        k_process_cell_rise            : 1;
        k_process_fall_transition      : 1;
        k_process_hold_fall            : 1;
        k_process_hold_rise            : 1;
        k_process_internal_power       : 0;
        k_process_min_pulse_width_high : 1;
        k_process_min_pulse_width_low  : 1;
        k_process_setup_fall           : 1;
        k_process_setup_rise           : 1;
        k_process_wire_cap             : 0;
        k_process_wire_res             : 0;
        k_process_pin_cap              : 0;
        k_process_rise_transition      : 1;
        k_temp_cell_fall               : 0.000;
        k_temp_cell_rise               : 0.000;
        k_temp_hold_fall               : 0.000;
        k_temp_hold_rise               : 0.000;
        k_temp_min_pulse_width_high    : 0.000;
        k_temp_min_pulse_width_low     : 0.000;
        k_temp_min_period              : 0.000;
        k_temp_rise_propagation        : 0.000;
        k_temp_fall_propagation        : 0.000;
        k_temp_rise_transition         : 0.000;
        k_temp_fall_transition         : 0.000;
        k_temp_recovery_fall           : 0.000;
        k_temp_recovery_rise           : 0.000;
        k_temp_setup_fall              : 0.000;
        k_temp_setup_rise              : 0.000;
        k_volt_cell_fall               : 0.000;
        k_volt_cell_rise               : 0.000;
        k_volt_hold_fall               : 0.000;
        k_volt_hold_rise               : 0.000;
        k_volt_min_pulse_width_high    : 0.000;
        k_volt_min_pulse_width_low     : 0.000;
        k_volt_min_period              : 0.000;
        k_volt_recovery_fall           : 0.000;
        k_volt_recovery_rise           : 0.000;
        k_volt_setup_fall              : 0.000;
        k_volt_setup_rise              : 0.000;
        k_volt_rise_propagation        : 0.000;
        k_volt_fall_propagation        : 0.000;
        k_volt_rise_transition         : 0.000;
        k_volt_fall_transition         : 0.000;

         voltage_map (VDD, 1.62);
         voltage_map (VSS, 0.00);
         operating_conditions(ss_1p62v_m40C) {
                process       : 1;
                temperature   : -40;
                voltage       : 1.62;
                tree_type     : balanced_tree;
         }

         default_operating_conditions : ss_1p62v_m40C;
         wire_load("Estimate") {
                resistance    : 1.44e-05;
                capacitance   : 0.00018;
                area          : 1.7;
                slope         : 500;
                fanout_length (1,500);
         }
         power_lut_template(power_template) {
            variable_1 : input_transition_time;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(q_delay_template) {
            variable_1 : input_net_transition;
            variable_2 : total_output_net_capacitance;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
                 index_2 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(q_slew_template) {
            variable_1 : total_output_net_capacitance;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(constraint_template) {
            variable_1 : related_pin_transition;
            variable_2 : constrained_pin_transition;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
                 index_2 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }

         library_features(report_delay_calculation);

         type (A_BUS) {
                base_type : array;
                data_type : bit;
                bit_width : 9;
                bit_from  : 8;
                bit_to    : 0;
                downto    : true;
         }
         type (Q_BUS) {
                base_type : array;
                data_type : bit;
                bit_width : 8;
                bit_from  : 7;
                bit_to    : 0;
                downto    : true;
         }
 cell(gf180mcu_fd_ip_sram__sram512x8m8wm1) {
        area             : 209400.2768;
        dont_use         : TRUE;
        dont_touch       : TRUE;
        interface_timing : TRUE;
        memory() {
                type          : ram;
                address_width : 9;
                word_width    : 8;
        }

                 bus(Q)   {
                  bus_type             : Q_BUS;
                  direction            : output;
                  max_capacitance      : 1.03;
                  memory_read() {
                        address        : A;
                  }
                  timing() {
                          related_pin  : "CLK";
                          timing_type  : rising_edge;
                          timing_sense : non_unate;
       		  when : "((!CEN) & (GWEN))";
        	  sdf_cond : "CEN== 1'b0 && GWEN== 1'b1";
                          cell_rise(q_delay_template) {
			  index_1 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
			  index_2 ("0.01, 0.02835, 0.09278, 0.2158, 0.4075, 0.6764, 1.03");
                          values  ( \
                            "36.7512, 36.8316, 37.3704, 38.0592, 39.2304, 40.8036, 42.8844", \
                            "36.852, 37.0104, 37.4484, 38.214, 39.3816, 40.9452, 43.0536", \
                            "37.0104, 37.1328, 37.5684, 38.352, 39.462, 41.064, 43.2084", \
                            "37.4688, 37.5684, 38.0472, 38.7288, 39.924, 41.5248, 43.5768", \
                            "38.1252, 38.2752, 38.6172, 39.4128, 40.5852, 42.1392, 44.2872", \
                            "39.0036, 39.1428, 39.5868, 40.3644, 41.5176, 43.0428, 45.2112", \
                            "39.972, 40.1232, 40.5348, 41.3148, 42.4584, 44.0124, 46.0548" \
                          )
                          }
                          rise_transition(q_slew_template) {
                          index_1 ("0.01, 0.02835, 0.09278, 0.2158, 0.4075, 0.6764, 1.03");
                          values  ( \
  	                     "0.860328, 1.05275, 1.69428, 2.95416, 4.86732, 7.69104, 11.4053" \
                          )

                          }
                          cell_fall(q_delay_template) {
                          index_1 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                          index_2 ("0.01, 0.02835, 0.09278, 0.2158, 0.4075, 0.6764, 1.03");
                          values  ( \
                            "39.2964, 39.3504, 39.7344, 40.0596, 40.6464, 41.2404, 41.994", \
                            "39.3936, 39.5292, 39.8172, 40.2444, 40.7424, 41.3844, 42.1884", \
                            "39.5292, 39.6288, 39.9216, 40.3584, 40.8528, 41.5056, 42.3144", \
                            "39.972, 40.056, 40.3656, 40.7376, 41.3124, 41.952, 42.7152", \
                            "40.686, 40.7964, 40.9608, 41.4372, 41.9652, 42.57, 43.422", \
                            "41.5236, 41.6244, 41.9292, 42.3552, 42.888, 43.4868, 44.3172", \
                            "42.498, 42.6168, 42.9084, 43.3224, 43.89, 44.46, 45.216" \
                          )
                          }
                          fall_transition(q_slew_template) {
                          index_1 ("0.01, 0.02835, 0.09278, 0.2158, 0.4075, 0.6764, 1.03");
                          values  ( \
                            "0.932028, 0.969852, 1.28112, 1.74192, 2.36172, 3.3378, 4.4448" \
                          )
                          }
                  }
          }
          pin(CLK)   {
                  direction            : input;
                  capacitance          : 0.295282;
                  clock                : true;
                  max_transition       : 10.6;
                  min_pulse_width_high : 17.82075;
                  min_pulse_width_low  : 24.58215;
                  min_period           : 52.65225;

/* WRITE POWER */
             internal_power() {
              when : "!CEN & !GWEN & (!WEN[0] | !WEN[1] | !WEN[2] | !WEN[3] | !WEN[4] | !WEN[5] | !WEN[6] | !WEN[7])";
              rise_power(power_template) {
                index_1 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                values  ("91.53, 91.53, 91.53, 91.53, 91.53, 91.53, 91.53");
              }
              fall_power(power_template) {
                index_1 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                values  ("91.53, 91.53, 91.53, 91.53, 91.53, 91.53, 91.53");
              }
             }
/* DISABLED POWER */
             internal_power() {
              when : "CEN";
              rise_power(power_template) {
                index_1 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                values  ("6.47757e-05, 6.47757e-05, 6.47757e-05, 6.47757e-05, 6.47757e-05, 6.47757e-05, 6.47757e-05");
              }
              fall_power(power_template) {
                index_1 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                values  ("6.47757e-05, 6.47757e-05, 6.47757e-05, 6.47757e-05, 6.47757e-05, 6.47757e-05, 6.47757e-05");
              }
             }
/* READ POWER */
             internal_power() {
             when : "!CEN & GWEN";
             rise_power(power_template) {
                index_1 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                values  ("84.2238, 84.2238, 84.2238, 84.2238, 84.2238, 84.2238, 84.2238");
              }
              fall_power(power_template) {
                index_1 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                values  ("84.2238, 84.2238, 84.2238, 84.2238, 84.2238, 84.2238, 84.2238");
              }
             }
          }

          pg_pin(VDD) {
                  voltage_name     : VDD;
                  pg_type          : primary_power;
          }
          pg_pin(VSS) {
                  voltage_name     : VSS;
                  pg_type          : primary_ground;
          }
          pin(CEN)   {
                  direction            : input;
                  capacitance          : 0.0193317;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                          index_2 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                          values  ( \
                            "3.57676, 3.55542, 3.6509, 4.05064, 4.93262, 6.13525, 7.78525", \
                            "3.51197, 3.49184, 3.57148, 3.9919, 4.87531, 6.04384, 7.73289", \
                            "3.29868, 3.25677, 3.32772, 3.75595, 4.62781, 5.83704, 7.48187", \
                            "2.87034, 2.83778, 2.92853, 3.33278, 4.22037, 5.38901, 7.04099", \
                            "2.87474, 2.82931, 2.92534, 3.3286, 4.22158, 5.41695, 7.06178", \
                            "2.87309, 2.84702, 2.92358, 3.33003, 4.213, 5.41321, 7.04407", \
                            "2.86429, 2.84559, 2.92358, 3.32739, 4.2295, 5.38912, 7.06277" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                          index_2 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                          values  ( \
                            "2.36984, 2.41725, 2.63131, 3.07241, 3.84835, 4.9731, 6.46844", \
                            "2.299, 2.35378, 2.56795, 3.00795, 3.78741, 4.90985, 6.40409", \
                            "2.05843, 2.11805, 2.332, 2.77244, 3.55113, 4.68358, 6.16847", \
                            "2.013, 2.07031, 2.29119, 2.73592, 3.49899, 4.63331, 6.12106", \
                            "2.02213, 2.0702, 2.2913, 2.73691, 3.4991, 4.63342, 6.12238", \
                            "2.01212, 2.06888, 2.29031, 2.73504, 3.49745, 4.63111, 6.12018", \
                            "2.01014, 2.06943, 2.29031, 2.73592, 3.49822, 4.63177, 6.12128" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                          index_2 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                          values  ( \
                            "7.26638, 7.30224, 7.21589, 6.81219, 5.91767, 4.7256, 3.07879", \
                            "7.32919, 7.36626, 7.28948, 6.87621, 5.9741, 4.81514, 3.13302", \
                            "7.57339, 7.59858, 7.51256, 7.11777, 6.23623, 5.02854, 3.37986", \
                            "7.9717, 8.00426, 7.91747, 7.5141, 6.62167, 5.45303, 3.80105", \
                            "8.68714, 8.73268, 8.63654, 8.23339, 7.3403, 6.14493, 4.50021", \
                            "9.65217, 9.67835, 9.60168, 9.19534, 8.31237, 7.11205, 5.48119", \
                            "10.8206, 10.8392, 10.7613, 10.3574, 9.45538, 8.29565, 6.622" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                          index_2 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                          values  ( \
                            "8.11635, 8.06993, 7.84916, 7.40355, 6.64378, 5.50715, 4.01819", \
                            "8.19148, 8.13395, 7.91296, 7.46834, 6.70516, 5.57084, 4.08298", \
                            "8.42666, 8.36704, 8.14627, 7.70121, 6.9388, 5.80459, 4.31596", \
                            "8.82904, 8.77184, 8.55085, 8.10612, 7.34316, 6.20884, 4.72109", \
                            "9.53986, 9.49179, 9.27058, 8.82497, 8.06278, 6.92846, 5.43961", \
                            "10.5132, 10.4564, 10.2351, 9.79033, 9.02781, 7.89415, 6.40519", \
                            "11.6743, 11.6149, 11.3949, 10.949, 10.1866, 9.05311, 7.56349" \
                          )
                          }
                 }
          }
          pin(GWEN)   {
                  direction            : input;
                  capacitance          : 0.043504;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                          index_2 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                          values  ( \
                            "3.78763, 3.84648, 4.06879, 4.51341, 5.18375, 6.06595, 7.23294", \
                            "3.72504, 3.78411, 4.01665, 4.45104, 5.13106, 6.04439, 7.17035", \
                            "3.49404, 3.56466, 3.79808, 4.21355, 4.90754, 5.78358, 6.93968", \
                            "3.07769, 3.13676, 3.35973, 3.80369, 4.47469, 5.3966, 6.52311", \
                            "2.36808, 2.44112, 2.66981, 3.1031, 3.77927, 4.6552, 5.82263", \
                            "1.55584, 1.61084, 1.85746, 2.29075, 2.95977, 3.86716, 5.01039", \
                            "0.611556, 0.679921, 0.913077, 1.3464, 2.02741, 2.94448, 4.06593" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                          index_2 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                          values  ( \
                            "5.39539, 5.48185, 5.73023, 6.2293, 6.97719, 8.17366, 9.68495", \
                            "5.33148, 5.41904, 5.66764, 6.17111, 6.95299, 8.09281, 9.62225", \
                            "5.13744, 5.20003, 5.44841, 5.95221, 6.7265, 7.86236, 9.40302", \
                            "4.70734, 4.77191, 5.01567, 5.52398, 6.30619, 7.44557, 8.97512", \
                            "4.00752, 4.07143, 4.3153, 4.8191, 5.60527, 6.74509, 8.27464", \
                            "3.19451, 3.24346, 3.50768, 4.00708, 4.78577, 5.91811, 7.46251", \
                            "2.25071, 2.31473, 2.56311, 3.06229, 3.84857, 4.97728, 6.51783" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                          index_2 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                          values  ( \
                            "6.85707, 6.80658, 6.60924, 6.13668, 5.49549, 4.75585, 3.82349", \
                            "6.48692, 6.43522, 6.21104, 5.75685, 5.14173, 4.32421, 3.45037", \
                            "5.87268, 5.82208, 5.59493, 5.14283, 4.51924, 3.76816, 2.84933", \
                            "5.54906, 5.49912, 5.30024, 4.83109, 4.17978, 3.388, 2.51493", \
                            "6.00556, 5.95353, 5.72891, 5.28176, 4.65311, 3.88894, 2.96846", \
                            "6.7661, 6.71979, 6.4878, 6.04065, 5.41134, 4.63353, 3.72702", \
                            "7.69703, 7.63213, 7.41873, 6.97598, 6.32423, 5.53432, 4.65795" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                          index_2 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                          values  ( \
                            "4.13732, 4.10201, 3.8489, 3.29769, 2.58874, 1.39502, 0", \
                            "3.76519, 3.72768, 3.47622, 2.92732, 2.1901, 1.03563, 0", \
                            "3.12466, 3.11388, 2.86, 2.31066, 1.57971, 0.4213, 0", \
                            "2.82546, 2.79092, 2.51361, 1.99133, 1.2536, 0.099671, 0", \
                            "3.27855, 3.24599, 2.96395, 2.44277, 1.70753, 0.553432, 0", \
                            "4.03832, 4.00114, 3.75298, 3.19869, 2.47313, 1.31828, 0", \
                            "4.94989, 4.93471, 4.68523, 4.13281, 3.39812, 2.24521, 0.702383" \
                          )
                          }
                 }
          }
          bus(WEN)   {
                  bus_type             : Q_BUS;
                  direction            : input;
                  capacitance          : 0.00722788;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                          index_2 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                          values  ( \
                            "0, 0, 0, 0, 0, 0, 0.121568", \
                            "0, 0, 0, 0, 0, 0, 0.49467", \
                            "0, 0, 0, 0, 0, 0.169499, 1.09585", \
                            "0, 0, 0, 0, 0, 0.565268, 1.42989", \
                            "0, 0, 0, 0, 0, 0.060753, 0.972719", \
                            "0, 0, 0, 0, 0, 0, 0.217564", \
                            "0, 0, 0, 0, 0, 0, 0" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                          index_2 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                          values  ( \
                            "0, 0, 0, 0.504108, 1.22736, 2.41406, 3.94592", \
                            "0.035772, 0.077979, 0.330396, 0.857263, 1.62558, 2.75396, 4.32322", \
                            "0.673695, 0.690866, 0.942139, 1.47697, 2.23179, 3.38272, 4.93614", \
                            "0.968352, 1.01084, 1.29275, 1.80532, 2.55563, 3.68401, 5.25349", \
                            "0.524381, 0.563035, 0.837342, 1.33793, 2.10452, 3.23224, 4.79974", \
                            "0, 0, 0.045727, 0.578325, 1.3398, 2.48292, 4.04382", \
                            "0, 0, 0, 0, 0.412577, 1.55177, 3.1053" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                          index_2 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                          values  ( \
                            "6.89502, 6.85091, 6.60924, 6.17485, 5.5242, 4.75585, 3.86518", \
                            "6.52234, 6.47812, 6.23348, 5.80228, 5.15152, 4.39395, 3.4925", \
                            "5.90623, 5.86201, 5.61946, 5.18606, 4.53541, 3.76816, 2.89784", \
                            "5.58646, 5.54235, 5.30024, 4.8664, 4.21564, 3.45807, 2.55673", \
                            "6.0401, 5.99445, 5.75179, 5.31993, 4.68182, 3.89158, 3.00971", \
                            "6.79921, 6.75455, 6.51596, 6.08179, 5.45633, 4.65707, 3.76871", \
                            "7.73014, 7.68592, 7.4426, 7.01008, 6.35932, 5.60175, 4.70041" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                          index_2 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                          values  ( \
                            "4.14491, 4.11554, 3.85814, 3.31595, 2.60645, 1.40833, 0", \
                            "3.77487, 3.74088, 3.48546, 2.94536, 2.21177, 1.05236, 0", \
                            "3.15623, 3.12675, 2.86924, 2.32881, 1.59951, 0.437272, 0", \
                            "2.8402, 2.80489, 2.52439, 2.00948, 1.27503, 0.116577, 0", \
                            "3.29131, 3.25864, 2.97792, 2.46103, 1.72876, 0.570086, 0", \
                            "4.05141, 4.01863, 3.76222, 3.2175, 2.49238, 1.33683, 0", \
                            "4.9808, 4.94857, 4.69326, 4.15107, 3.41957, 2.26149, 0.714263" \
                          )
                          }
                 }
          }
          bus(A)   {
                  bus_type             : A_BUS;
                  direction            : input;
                  capacitance          : 0.0435502;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                          index_2 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                          values  ( \
                            "3.52484, 3.49844, 3.58534, 4.04195, 4.8818, 6.0951, 7.6747", \
                            "3.85099, 3.84901, 3.89543, 4.38416, 5.22016, 6.44479, 8.02714", \
                            "4.45588, 4.45577, 4.51132, 4.99125, 5.82054, 7.02834, 8.64149", \
                            "4.80887, 4.77433, 4.83098, 5.31553, 6.12656, 7.36681, 8.96423", \
                            "4.34456, 4.32399, 4.38603, 4.87069, 5.67325, 6.94573, 8.48375", \
                            "3.56345, 3.55421, 3.61174, 4.092, 4.90666, 6.14845, 7.70946", \
                            "2.6268, 2.62834, 2.69753, 3.15447, 4.00917, 5.18595, 6.79591" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                          index_2 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                          values  ( \
                            "3.7675, 3.82668, 4.02622, 4.51924, 5.29397, 6.43104, 7.94365", \
                            "4.12973, 4.18253, 4.40132, 4.88543, 5.68073, 6.80834, 8.32579", \
                            "4.74727, 4.79292, 5.01391, 5.50209, 6.28617, 7.41191, 8.93013", \
                            "5.08486, 5.12468, 5.31916, 5.82593, 6.60869, 7.74521, 9.23868", \
                            "4.59965, 4.65586, 4.87795, 5.36019, 6.16297, 7.27023, 8.81584", \
                            "3.84021, 3.87827, 4.11752, 4.58832, 5.38362, 6.5032, 8.02692", \
                            "2.93832, 2.98375, 3.20353, 3.68269, 4.46886, 5.58514, 7.1071" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                          index_2 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                          values  ( \
                            "2.48875, 2.5146, 2.42011, 1.9459, 1.11604, 0, 0", \
                            "2.55893, 2.58544, 2.49062, 2.01652, 1.17301, 0.031867, 0", \
                            "2.77948, 2.80544, 2.71084, 2.23674, 1.39315, 0.251979, 0", \
                            "3.16063, 3.1867, 3.09199, 2.61789, 1.7743, 0.633193, 0", \
                            "3.89367, 3.91842, 3.82393, 3.34972, 2.50624, 1.36499, 0", \
                            "4.83802, 4.86343, 4.76861, 4.29451, 3.45092, 2.30978, 0.888184", \
                            "5.984, 6.01018, 5.91536, 5.44126, 4.59767, 3.50724, 2.08901" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                          index_2 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                          values  ( \
                            "3.08275, 3.03325, 2.79851, 2.33167, 1.68575, 0.848947, 0", \
                            "3.15326, 3.10387, 2.86913, 2.40207, 1.75637, 0.919512, 0", \
                            "3.37326, 3.32398, 3.08924, 2.62229, 1.97626, 1.14193, 0.116848", \
                            "3.75287, 3.70524, 3.4705, 3.00344, 2.35774, 1.52317, 0.49808", \
                            "4.48635, 4.43707, 4.20222, 3.73527, 3.08935, 2.25269, 1.22991", \
                            "5.43103, 5.38186, 5.14712, 4.68006, 4.03414, 3.19748, 2.1747", \
                            "6.57778, 6.52861, 6.29387, 5.82692, 5.18111, 4.34423, 3.32156" \
                          )
                          }
                 }
          }
          bus(D)   {
                  bus_type             : Q_BUS;
                  memory_write() {
                          address      : A;
                          clocked_on   : "CLK";
                  }
                  direction            : input;
                  capacitance          : 0.0170451;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                          index_2 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                          values  ( \
                            "3.19792, 3.27052, 3.49217, 3.92007, 4.43597, 5.08673, 5.79029", \
                            "3.56763, 3.65376, 3.8786, 4.29187, 4.81415, 5.47855, 6.19069", \
                            "4.21476, 4.26107, 4.47469, 4.90226, 5.42201, 6.09158, 6.7815", \
                            "4.52012, 4.57908, 4.80975, 5.22005, 5.74134, 6.41784, 7.05661", \
                            "4.04855, 4.12665, 4.34401, 4.77642, 5.26933, 5.95089, 6.65687", \
                            "3.30033, 3.34268, 3.5772, 3.99003, 4.51044, 5.19827, 5.87059", \
                            "2.37127, 2.43232, 2.67553, 3.08462, 3.60668, 4.25073, 4.95407" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                          index_2 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                          values  ( \
                            "0, 0, 0, 0, 0, 0.858253, 2.30846", \
                            "0, 0, 0, 0, 0.059312, 1.23619, 2.68565", \
                            "0, 0, 0, 0, 0.668668, 1.84591, 3.29527", \
                            "0, 0, 0, 0.266616, 0.992816, 2.16997, 3.6201", \
                            "0, 0, 0, 0, 0.539726, 1.7171, 3.16635", \
                            "0, 0, 0, 0, 0, 0.934428, 2.39118", \
                            "0, 0, 0, 0, 0, 0.024464, 1.47389" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                          index_2 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                          values  ( \
                            "3.38679, 3.32398, 3.10585, 2.68081, 2.14918, 1.50161, 0.799667", \
                            "2.99849, 2.93557, 2.71744, 2.29636, 1.76044, 1.11172, 0.405493", \
                            "2.39415, 2.32265, 2.10298, 1.67948, 1.14836, 0.497354, 0", \
                            "2.0713, 2.00607, 1.78783, 1.37093, 0.830016, 0.183104, 0", \
                            "2.53077, 2.46554, 2.24774, 1.82424, 1.29441, 0.643478, 0", \
                            "3.28724, 3.2296, 3.0107, 2.58984, 2.05337, 1.40492, 0.709137", \
                            "4.21531, 4.15811, 3.93393, 3.51758, 2.97836, 2.34971, 1.6368" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                          index_2 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                          values  ( \
                            "6.08751, 6.06177, 5.87158, 5.35931, 4.57721, 3.43189, 1.94403", \
                            "5.69811, 5.67237, 5.48218, 4.96991, 4.18781, 3.04249, 1.55463", \
                            "5.08255, 5.05747, 4.86772, 4.35545, 3.57335, 2.42803, 0.940192", \
                            "4.76795, 4.74672, 4.55279, 4.04041, 3.25831, 2.11299, 0.624646", \
                            "5.22676, 5.20465, 5.01083, 4.49845, 3.71635, 2.57103, 1.08321", \
                            "5.98906, 5.96563, 5.77544, 5.26317, 4.48096, 3.33564, 1.84789", \
                            "6.91834, 6.89392, 6.70362, 6.19124, 5.40925, 4.26393, 2.77618" \
                          )
                          }
                 }
        }
          cell_leakage_power : 6.47757e-05;
}
}
