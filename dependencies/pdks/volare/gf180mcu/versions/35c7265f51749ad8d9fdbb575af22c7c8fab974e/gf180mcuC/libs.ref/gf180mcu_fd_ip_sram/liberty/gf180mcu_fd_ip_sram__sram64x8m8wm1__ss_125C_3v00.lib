/*
 * Copyright 2022 GlobalFoundries PDK Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 *      Single Port SRAM cell name : gf180mcu_fd_ip_sram__sram64x8m8wm1
 *      Technology                 : GF 180nm 5V Green
 *
 *      ---------
 *      Pin name:
 *      ---------
 *      Input Pins : CLK CEN GWEN WEN[7:0] A[5:0] D[7:0]
 *      Inout Pins:  VDD VSS
 *      Output Pins: Q[7:0]
 *
 *     Revision History: 1.0 (Initial Release: June 20, 2014)
 */

library(gf180mcu_fd_ip_sram__sram64x8m8wm1__ss_125C_3v00) {
        delay_model             : table_lookup;
        revision                : 1.0;
        date                    : "June 20, 2014";
        comment                 : "GF 180nm 5V Green";
        voltage_unit            : "1V";
        time_unit               : "1ns";
        current_unit            : "1mA";
        leakage_power_unit      : "1mW";
        nom_process             : 1;
        nom_temperature         : 125;
        nom_voltage             : 3.0;
        capacitive_load_unit    (1,pf);
        pulling_resistance_unit : "1kohm";

        /* additional header data */
        default_fanout_load            : 1;
        default_inout_pin_cap          : 0.045;
        default_input_pin_cap          : 0.045;
        default_output_pin_cap         : 0;
        default_max_transition         : 7.0901;
        default_cell_leakage_power     : 0;

         /* default attributes */
         slew_derate_from_library      : 1.000;
         slew_lower_threshold_pct_fall : 10.000;
         slew_upper_threshold_pct_fall : 90.000;
         slew_lower_threshold_pct_rise : 10.000;
         slew_upper_threshold_pct_rise : 90.000;
         input_threshold_pct_fall      : 50.000;
         input_threshold_pct_rise      : 50.000;
         output_threshold_pct_fall     : 50.000;
         output_threshold_pct_rise     : 50.000;
         default_leakage_power_density : 0;

        /* k-factors */
        k_process_recovery_fall        : 1;
        k_process_recovery_rise        : 1;
        k_process_cell_fall            : 1;
        k_process_cell_leakage_power   : 0;
        k_process_cell_rise            : 1;
        k_process_fall_transition      : 1;
        k_process_hold_fall            : 1;
        k_process_hold_rise            : 1;
        k_process_internal_power       : 0;
        k_process_min_pulse_width_high : 1;
        k_process_min_pulse_width_low  : 1;
        k_process_setup_fall           : 1;
        k_process_setup_rise           : 1;
        k_process_wire_cap             : 0;
        k_process_wire_res             : 0;
        k_process_pin_cap              : 0;
        k_process_rise_transition      : 1;
        k_temp_cell_fall               : 0.000;
        k_temp_cell_rise               : 0.000;
        k_temp_hold_fall               : 0.000;
        k_temp_hold_rise               : 0.000;
        k_temp_min_pulse_width_high    : 0.000;
        k_temp_min_pulse_width_low     : 0.000;
        k_temp_min_period              : 0.000;
        k_temp_rise_propagation        : 0.000;
        k_temp_fall_propagation        : 0.000;
        k_temp_rise_transition         : 0.000;
        k_temp_fall_transition         : 0.000;
        k_temp_recovery_fall           : 0.000;
        k_temp_recovery_rise           : 0.000;
        k_temp_setup_fall              : 0.000;
        k_temp_setup_rise              : 0.000;
        k_volt_cell_fall               : 0.000;
        k_volt_cell_rise               : 0.000;
        k_volt_hold_fall               : 0.000;
        k_volt_hold_rise               : 0.000;
        k_volt_min_pulse_width_high    : 0.000;
        k_volt_min_pulse_width_low     : 0.000;
        k_volt_min_period              : 0.000;
        k_volt_recovery_fall           : 0.000;
        k_volt_recovery_rise           : 0.000;
        k_volt_setup_fall              : 0.000;
        k_volt_setup_rise              : 0.000;
        k_volt_rise_propagation        : 0.000;
        k_volt_fall_propagation        : 0.000;
        k_volt_rise_transition         : 0.000;
        k_volt_fall_transition         : 0.000;

         voltage_map (VDD, 3.0);
         voltage_map (VSS, 0.00);
         operating_conditions(ss_3p0v_125C) {
                process       : 1;
                temperature   : 125;
                voltage       : 3.0;
                tree_type     : balanced_tree;
         }

         default_operating_conditions : ss_3p0v_125C;
         wire_load("Estimate") {
                resistance    : 1.44e-05;
                capacitance   : 0.00018;
                area          : 1.7;
                slope         : 500;
                fanout_length (1,500);
         }
         power_lut_template(power_template) {
            variable_1 : input_transition_time;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(q_delay_template) {
            variable_1 : input_net_transition;
            variable_2 : total_output_net_capacitance;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
                 index_2 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(q_slew_template) {
            variable_1 : total_output_net_capacitance;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(constraint_template) {
            variable_1 : related_pin_transition;
            variable_2 : constrained_pin_transition;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
                 index_2 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }

         library_features(report_delay_calculation);

         type (A_BUS) {
                base_type : array;
                data_type : bit;
                bit_width : 6;
                bit_from  : 5;
                bit_to    : 0;
                downto    : true;
         }
         type (Q_BUS) {
                base_type : array;
                data_type : bit;
                bit_width : 8;
                bit_from  : 7;
                bit_to    : 0;
                downto    : true;
         }
 cell(gf180mcu_fd_ip_sram__sram64x8m8wm1) {
        area             : 100571.5568;
        dont_use         : TRUE;
        dont_touch       : TRUE;
        interface_timing : TRUE;
        memory() {
                type          : ram;
                address_width : 6;
                word_width    : 8;
        }

                 bus(Q)   {
                  bus_type             : Q_BUS;
                  direction            : output;
                  max_capacitance      : 1.1270;
                  memory_read() {
                        address        : A;
                  }
                  timing() {
                          related_pin  : "CLK";
                          timing_type  : rising_edge;
                          timing_sense : non_unate;
       		  when : "((!CEN) & (GWEN))";
        	  sdf_cond : "CEN== 1'b0 && GWEN== 1'b1";
                          cell_rise(q_delay_template) {
			  index_1 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
			  index_2 ("0.0100, 0.0301, 0.1006, 0.2353, 0.4451, 0.7395, 1.1270");
                          values  ( \
                            "11.95416, 11.98548, 12.1704, 12.4344, 12.8328, 13.398, 14.0976", \
                            "11.96412, 12.0204, 12.2028, 12.4752, 12.8808, 13.4112, 14.1492", \
                            "12.0216, 12.0708, 12.2076, 12.5184, 12.8844, 13.4412, 14.1492", \
                            "12.0804, 12.126, 12.2952, 12.5736, 12.9732, 13.5264, 14.2428", \
                            "12.1332, 12.198, 12.3852, 12.6504, 13.0608, 13.608, 14.3232", \
                            "12.1656, 12.2244, 12.39, 12.6768, 13.0884, 13.6248, 14.3604", \
                            "12.1428, 12.2016, 12.3648, 12.648, 13.0428, 13.5972, 14.31" \
                          )
                          }
                          rise_transition(q_slew_template) {
                          index_1 ("0.0100, 0.0301, 0.1006, 0.2353, 0.4451, 0.7395, 1.1270");
                          values  ( \
  	                     "0.43668, 0.514272, 0.769308, 1.24788, 2.01612, 3.11424, 4.55112" \
                          )

                          }
                          cell_fall(q_delay_template) {
                          index_1 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                          index_2 ("0.0100, 0.0301, 0.1006, 0.2353, 0.4451, 0.7395, 1.1270");
                          values  ( \
                            "12.456, 12.4824, 12.654, 12.876, 13.1592, 13.5264, 13.9512", \
                            "12.4704, 12.5148, 12.6816, 12.9132, 13.1988, 13.542, 13.9884", \
                            "12.5268, 12.5808, 12.6888, 12.9564, 13.2096, 13.5732, 13.998", \
                            "12.588, 12.6312, 12.7812, 13.0116, 13.3008, 13.6512, 14.0928", \
                            "12.6372, 12.708, 12.8604, 13.0836, 13.3788, 13.734, 14.1684", \
                            "12.6828, 12.7272, 12.8784, 13.1088, 13.41, 13.752, 14.2152", \
                            "12.6468, 12.7032, 12.8496, 13.0848, 13.362, 13.728, 14.1624" \
                          )
                          }
                          fall_transition(q_slew_template) {
                          index_1 ("0.0100, 0.0301, 0.1006, 0.2353, 0.4451, 0.7395, 1.1270");
                          values  ( \
                            "0.428472, 0.470448, 0.65262, 0.935808, 1.32048, 1.8558, 2.54988" \
                          )
                          }
                  }
          }
          pin(CLK)   {
                  direction            : input;
                  capacitance          : 0.311928;
                  clock                : true;
                  max_transition       : 7.0901;
                  min_pulse_width_high : 4.54599;
                  min_pulse_width_low  : 7.030995;
                  min_period           : 16.3302;

/* WRITE POWER */
             internal_power() {
              when : "!CEN & !GWEN & (!WEN[0] | !WEN[1] | !WEN[2] | !WEN[3] | !WEN[4] | !WEN[5] | !WEN[6] | !WEN[7])";
              rise_power(power_template) {
                index_1 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                values  ("289.68, 289.68, 289.68, 289.68, 289.68, 289.68, 289.68");
              }
              fall_power(power_template) {
                index_1 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                values  ("289.68, 289.68, 289.68, 289.68, 289.68, 289.68, 289.68");
              }
             }
/* DISABLED POWER */
             internal_power() {
              when : "CEN";
              rise_power(power_template) {
                index_1 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                values  ("6.4251e-05, 6.4251e-05, 6.4251e-05, 6.4251e-05, 6.4251e-05, 6.4251e-05, 6.4251e-05");
              }
              fall_power(power_template) {
                index_1 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                values  ("6.4251e-05, 6.4251e-05, 6.4251e-05, 6.4251e-05, 6.4251e-05, 6.4251e-05, 6.4251e-05");
              }
             }
/* READ POWER */
             internal_power() {
             when : "!CEN & GWEN";
             rise_power(power_template) {
                index_1 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                values  ("263.76, 263.76, 263.76, 263.76, 263.76, 263.76, 263.76");
              }
              fall_power(power_template) {
                index_1 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                values  ("263.76, 263.76, 263.76, 263.76, 263.76, 263.76, 263.76");
              }
             }
          }

          pg_pin(VDD) {
                  voltage_name     : VDD;
                  pg_type          : primary_power;
          }
          pg_pin(VSS) {
                  voltage_name     : VSS;
                  pg_type          : primary_ground;
          }
          pin(CEN)   {
                  direction            : input;
                  capacitance          : 0.01933;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                          index_2 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                          values  ( \
                            "1.07802, 1.06437, 1.0744, 1.21964, 1.46586, 1.63592, 1.74185", \
                            "1.05019, 1.03797, 1.05333, 1.20624, 1.43704, 1.61491, 1.7028", \
                            "0.96756, 0.953414, 0.97262, 1.10946, 1.34497, 1.53527, 1.63075", \
                            "0.966031, 0.951709, 0.964568, 1.09735, 1.28549, 1.40734, 1.49765", \
                            "0.965426, 0.951093, 0.971355, 1.10887, 1.27642, 1.38446, 1.42395", \
                            "0.964843, 0.950312, 0.963732, 1.09614, 1.28401, 1.38259, 1.42087", \
                            "0.964007, 0.94963, 0.962412, 1.09541, 1.27695, 1.40085, 1.50645" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                          index_2 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                          values  ( \
                            "0.84964, 0.866404, 0.965701, 1.17114, 1.47818, 1.81467, 2.16304", \
                            "0.844294, 0.858935, 0.958254, 1.16372, 1.46894, 1.78915, 2.13642", \
                            "0.841698, 0.859485, 0.955999, 1.15139, 1.46806, 1.76484, 2.12443", \
                            "0.841258, 0.857956, 0.954481, 1.16005, 1.46432, 1.78596, 2.12289", \
                            "0.839575, 0.854612, 0.95392, 1.15974, 1.46465, 1.78541, 2.12234", \
                            "0.840829, 0.856768, 0.953249, 1.16502, 1.46399, 1.78475, 2.12168", \
                            "0.838046, 0.855855, 0.952413, 1.16371, 1.46311, 1.78343, 2.11475" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                          index_2 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                          values  ( \
                            "2.84878, 2.86374, 2.85065, 2.71788, 2.52967, 2.43155, 2.39954", \
                            "2.87089, 2.88629, 2.87342, 2.73042, 2.55475, 2.45465, 2.4222", \
                            "2.9458, 2.95988, 2.94085, 2.81435, 2.63461, 2.52604, 2.49227", \
                            "3.12235, 3.13665, 3.12378, 2.99101, 2.8028, 2.70457, 2.6686", \
                            "3.34598, 3.36039, 3.34004, 3.20254, 3.03501, 2.92699, 2.9007", \
                            "3.51934, 3.53386, 3.52044, 3.388, 3.20012, 3.10167, 3.06801", \
                            "3.64232, 3.65662, 3.64386, 3.51087, 3.32937, 3.22278, 3.18549" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                          index_2 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                          values  ( \
                            "2.97407, 2.95735, 2.86077, 2.65529, 2.35004, 2.02994, 1.69235", \
                            "2.9975, 2.98276, 2.88354, 2.67806, 2.37281, 2.0526, 1.71512", \
                            "3.07164, 3.05382, 2.95735, 2.76199, 2.4453, 2.14852, 1.78893", \
                            "3.24709, 3.23037, 3.1339, 2.92831, 2.62405, 2.3023, 1.96548", \
                            "3.47182, 3.45686, 3.35753, 3.15172, 2.8468, 2.52604, 2.18911", \
                            "3.64331, 3.62747, 3.53089, 3.31914, 3.02027, 2.6994, 2.36247", \
                            "3.76827, 3.75045, 3.65387, 3.44256, 3.14314, 2.82293, 2.49161" \
                          )
                          }
                 }
          }
          pin(GWEN)   {
                  direction            : input;
                  capacitance          : 0.0498398;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                          index_2 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                          values  ( \
                            "1.43077, 1.45398, 1.54231, 1.71215, 1.93985, 2.14577, 2.32012", \
                            "1.4102, 1.43374, 1.52152, 1.6885, 1.91609, 2.12487, 2.29768", \
                            "1.32759, 1.3508, 1.43484, 1.60655, 1.83535, 2.04391, 2.2055", \
                            "1.15948, 1.18273, 1.26988, 1.44067, 1.66386, 1.87264, 2.04017", \
                            "0.986744, 1.00988, 1.09387, 1.2642, 1.49369, 1.69873, 1.86791", \
                            "0.863181, 0.887469, 0.97383, 1.14415, 1.36807, 1.57894, 1.74383", \
                            "0.77429, 0.797401, 0.885511, 1.05651, 1.27955, 1.48841, 1.65814" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                          index_2 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                          values  ( \
                            "1.64769, 1.67497, 1.77826, 1.99705, 2.35169, 2.76287, 3.21464", \
                            "1.62371, 1.65462, 1.75802, 1.97615, 2.33145, 2.74263, 3.19429", \
                            "1.5422, 1.57179, 1.67508, 1.89211, 2.24884, 2.65771, 3.11146", \
                            "1.37489, 1.40371, 1.507, 1.72381, 2.08109, 2.49106, 2.94327", \
                            "1.20003, 1.22806, 1.33419, 1.55573, 1.90762, 2.31726, 2.77057", \
                            "1.07696, 1.10699, 1.21024, 1.42791, 1.78376, 2.1934, 2.6466", \
                            "0.9878, 1.01837, 1.12174, 1.34222, 1.6951, 2.10639, 2.55849" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                          index_2 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                          values  ( \
                            "2.03753, 2.01817, 1.93149, 1.78684, 1.65242, 1.57432, 1.52449", \
                            "2.01806, 2.00079, 1.91532, 1.76858, 1.64142, 1.55771, 1.50315", \
                            "2.04457, 2.02763, 1.94381, 1.79454, 1.65737, 1.58444, 1.53956", \
                            "2.09781, 2.08153, 1.99529, 1.84932, 1.71501, 1.64208, 1.59346", \
                            "2.17151, 2.15292, 2.07152, 1.9173, 1.78893, 1.70984, 1.66001", \
                            "2.19648, 2.17602, 2.09187, 1.94766, 1.81247, 1.73415, 1.6852", \
                            "2.17228, 2.15512, 2.06844, 1.92357, 1.78959, 1.71325, 1.66705" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                          index_2 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                          values  ( \
                            "0.962027, 0.935528, 0.829642, 0.611424, 0.277842, 0, 0", \
                            "0.941886, 0.918577, 0.81213, 0.596222, 0.260388, 0, 0", \
                            "0.972708, 0.945208, 0.839146, 0.622424, 0.290343, 0, 0", \
                            "1.02588, 0.998844, 0.893233, 0.669108, 0.34056, 0, 0", \
                            "1.17542, 1.14785, 1.04492, 0.816541, 0.467093, 0.0866558, 0", \
                            "1.3816, 1.35355, 1.25084, 1.0265, 0.672914, 0.292403, 0", \
                            "1.55353, 1.52581, 1.42296, 1.19616, 0.845053, 0.463386, 0.046255" \
                          )
                          }
                 }
          }
          bus(WEN)   {
                  bus_type             : Q_BUS;
                  direction            : input;
                  capacitance          : 0.00804242;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                          index_2 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                          values  ( \
                            "0, 0, 0, 0, 0, 0, 0.027412", \
                            "0, 0, 0, 0, 0, 0, 0.042658", \
                            "0, 0, 0, 0, 0, 0, 0.007139", \
                            "0, 0, 0, 0, 0, 0, 0", \
                            "0, 0, 0, 0, 0, 0, 0", \
                            "0, 0, 0, 0, 0, 0, 0", \
                            "0, 0, 0, 0, 0, 0, 0" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                          index_2 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                          values  ( \
                            "0.554697, 0.580646, 0.690558, 0.905399, 1.23661, 1.63108, 2.08296", \
                            "0.571516, 0.591712, 0.703637, 0.922372, 1.25236, 1.64274, 2.09561", \
                            "0.547591, 0.568777, 0.680394, 0.898535, 1.22525, 1.62019, 2.07416", \
                            "0.49412, 0.516736, 0.625416, 0.845493, 1.17481, 1.57102, 2.01443", \
                            "0.420398, 0.446666, 0.550737, 0.776039, 1.0993, 1.49897, 1.94612", \
                            "0.390181, 0.418319, 0.528022, 0.749529, 1.07749, 1.47543, 1.9195", \
                            "0.416097, 0.441309, 0.551881, 0.770055, 1.10025, 1.4916, 1.94051" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                          index_2 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                          values  ( \
                            "2.03753, 2.01817, 1.93149, 1.78838, 1.66848, 1.57696, 1.52658", \
                            "2.02004, 2.00079, 1.91532, 1.771, 1.64791, 1.56068, 1.5092", \
                            "2.04688, 2.02763, 1.94381, 1.79784, 1.67728, 1.58752, 1.54737", \
                            "2.10056, 2.08153, 1.99529, 1.85163, 1.73184, 1.64208, 1.60105", \
                            "2.17217, 2.15292, 2.07152, 1.92313, 1.80257, 1.71281, 1.67255", \
                            "2.19648, 2.17602, 2.09187, 1.94766, 1.82699, 1.73712, 1.69697", \
                            "2.17415, 2.15512, 2.06844, 1.92522, 1.80466, 1.71479, 1.67464" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                          index_2 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                          values  ( \
                            "0.962027, 0.936199, 0.829642, 0.611424, 0.279995, 0, 0", \
                            "0.941886, 0.919105, 0.81213, 0.596222, 0.262617, 0, 0", \
                            "0.972708, 0.945758, 0.839146, 0.622424, 0.29372, 0, 0", \
                            "1.02588, 0.999251, 0.893233, 0.670703, 0.342199, 0, 0", \
                            "1.09405, 1.06664, 0.964238, 0.743435, 0.414766, 0.015862, 0", \
                            "1.12616, 1.09543, 0.988867, 0.765809, 0.439109, 0.040304, 0", \
                            "1.09908, 1.07299, 0.966405, 0.749034, 0.416867, 0.021879, 0" \
                          )
                          }
                 }
          }
          bus(A)   {
                  bus_type             : A_BUS;
                  direction            : input;
                  capacitance          : 0.0383295;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                          index_2 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                          values  ( \
                            "1.37456, 1.36532, 1.38886, 1.52988, 1.76374, 1.94623, 2.05601", \
                            "1.38886, 1.37984, 1.40778, 1.55243, 1.7765, 1.94667, 2.08791", \
                            "1.36466, 1.36015, 1.38831, 1.5202, 1.75901, 1.94711, 2.06602", \
                            "1.30779, 1.29525, 1.32825, 1.47345, 1.69851, 1.87935, 2.00343", \
                            "1.23486, 1.22382, 1.25583, 1.40085, 1.62514, 1.81412, 1.92907", \
                            "1.2149, 1.20878, 1.23462, 1.38094, 1.60776, 1.7908, 1.89233", \
                            "1.23588, 1.22844, 1.25444, 1.4003, 1.62327, 1.81412, 1.93666" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                          index_2 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                          values  ( \
                            "1.57949, 1.59863, 1.7006, 1.91389, 2.22871, 2.56696, 2.95284", \
                            "1.59456, 1.61568, 1.7149, 1.92401, 2.24532, 2.58313, 2.96912", \
                            "1.57641, 1.59951, 1.69499, 1.90993, 2.2242, 2.55442, 2.948", \
                            "1.52438, 1.53659, 1.63427, 1.84349, 2.16469, 2.50316, 2.8897", \
                            "1.44892, 1.46597, 1.55936, 1.7721, 2.09385, 2.42638, 2.81545", \
                            "1.42582, 1.44694, 1.53703, 1.74834, 2.06811, 2.40867, 2.7951", \
                            "1.44584, 1.46971, 1.5664, 1.77914, 2.09242, 2.43001, 2.81809" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                          index_2 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                          values  ( \
                            "1.10277, 1.11713, 1.07474, 0.994158, 0.941897, 0.912439, 0.866338", \
                            "1.12666, 1.14109, 1.09875, 1.01497, 0.966867, 0.935319, 0.895455", \
                            "1.21034, 1.22514, 1.18281, 1.10218, 1.0498, 1.01916, 0.977768", \
                            "1.38127, 1.39601, 1.35377, 1.27007, 1.22147, 1.18901, 1.15115", \
                            "1.58587, 1.6005, 1.55815, 1.47279, 1.42593, 1.39315, 1.35597", \
                            "1.77716, 1.79179, 1.74933, 1.66892, 1.61667, 1.58719, 1.5411", \
                            "1.8909, 1.90498, 1.86241, 1.78178, 1.72942, 1.69961, 1.65616" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                          index_2 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                          values  ( \
                            "1.1999, 1.1803, 1.08193, 0.965668, 0.873598, 0.824054, 0.785059", \
                            "1.22208, 1.20189, 1.10594, 0.989593, 0.8976, 0.848056, 0.809061", \
                            "1.30823, 1.28592, 1.18996, 1.07362, 0.98164, 0.932085, 0.89309", \
                            "1.47686, 1.45937, 1.36092, 1.24467, 1.1526, 1.10305, 1.06405", \
                            "1.68355, 1.66133, 1.56541, 1.44903, 1.35707, 1.30746, 1.26851", \
                            "1.87275, 1.85262, 1.7567, 1.64032, 1.54836, 1.49875, 1.45981", \
                            "1.98792, 1.96537, 1.86593, 1.75329, 1.66133, 1.61172, 1.57278" \
                          )
                          }
                 }
          }
          bus(D)   {
                  bus_type             : Q_BUS;
                  memory_write() {
                          address      : A;
                          clocked_on   : "CLK";
                  }
                  direction            : input;
                  capacitance          : 0.0176866;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                          index_2 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                          values  ( \
                            "1.28724, 1.30273, 1.37863, 1.43825, 1.43594, 1.36983, 1.24628", \
                            "1.2947, 1.31681, 1.39238, 1.44441, 1.44606, 1.37599, 1.25828", \
                            "1.28324, 1.30328, 1.36763, 1.43275, 1.43726, 1.3596, 1.239", \
                            "1.2207, 1.24093, 1.32319, 1.37401, 1.3607, 1.29844, 1.1502", \
                            "1.15218, 1.17209, 1.24137, 1.31087, 1.29062, 1.24247, 1.09597", \
                            "1.12963, 1.1499, 1.21968, 1.2742, 1.27883, 1.20773, 1.09399", \
                            "1.1462, 1.16404, 1.24112, 1.29844, 1.30086, 1.21955, 1.12677" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                          index_2 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                          values  ( \
                            "0.127185, 0.131384, 0.232175, 0.46871, 0.800404, 1.21229, 1.67013", \
                            "0.141059, 0.139626, 0.246979, 0.483186, 0.823702, 1.22716, 1.68476", \
                            "0.120955, 0.118969, 0.226175, 0.462264, 0.803451, 1.20658, 1.66408", \
                            "0.06435, 0.061347, 0.168262, 0.400367, 0.745052, 1.14723, 1.59577", \
                            "0, 0, 0.0958232, 0.323114, 0.672694, 1.0762, 1.53142", \
                            "0, 0, 0.073194, 0.305228, 0.649913, 1.05336, 1.51074", \
                            "0, 0, 0.0956483, 0.327481, 0.672375, 1.07586, 1.53109" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                          index_2 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                          values  ( \
                            "0.829521, 0.817135, 0.740641, 0.679151, 0.676269, 0.739497, 0.861553", \
                            "0.826045, 0.806608, 0.724592, 0.676247, 0.66572, 0.740124, 0.858077", \
                            "0.838673, 0.822426, 0.750464, 0.684926, 0.688468, 0.757229, 0.883432", \
                            "0.89408, 0.879923, 0.799458, 0.744139, 0.755205, 0.82247, 0.945164", \
                            "0.96613, 0.947936, 0.871695, 0.800767, 0.817399, 0.878273, 1.02951", \
                            "0.986062, 0.969254, 0.898304, 0.84271, 0.838662, 0.914122, 1.00693", \
                            "0.966372, 0.95623, 0.879505, 0.818169, 0.817641, 0.889999, 0.981046" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                          index_2 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                          values  ( \
                            "1.50557, 1.50018, 1.39953, 1.16367, 0.824571, 0.422455, 0", \
                            "1.49534, 1.48962, 1.38908, 1.15312, 0.814396, 0.411917, 0", \
                            "1.51426, 1.50887, 1.40822, 1.17235, 0.833283, 0.431134, 0", \
                            "1.57278, 1.56827, 1.46806, 1.23213, 0.893409, 0.49258, 0.041349", \
                            "1.6423, 1.63691, 1.53615, 1.3002, 0.961532, 0.559053, 0.101292", \
                            "1.66551, 1.66001, 1.55936, 1.32341, 0.984731, 0.582241, 0.124479", \
                            "1.64483, 1.63933, 1.53879, 1.30284, 0.96415, 0.56166, 0.103902" \
                          )
                          }
                 }
        }
          cell_leakage_power : 6.4251e-05;
}
}
