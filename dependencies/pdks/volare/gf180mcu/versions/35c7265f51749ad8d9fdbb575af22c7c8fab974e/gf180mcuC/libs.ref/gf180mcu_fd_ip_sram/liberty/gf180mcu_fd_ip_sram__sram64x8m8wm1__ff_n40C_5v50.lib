/*
 * Copyright 2022 GlobalFoundries PDK Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 *      Single Port SRAM cell name : gf180mcu_fd_ip_sram__sram64x8m8wm1
 *      Technology                 : GF 180nm 5V Green
 *
 *      ---------
 *      Pin name:
 *      ---------
 *      Input Pins : CLK CEN GWEN WEN[7:0] A[5:0] D[7:0]
 *      Inout Pins:  VDD VSS
 *      Output Pins: Q[7:0]
 *
 *     Revision History: 1.0 (Initial Release: June 20, 2014)
 */

library(gf180mcu_fd_ip_sram__sram64x8m8wm1__ff_n40C_5v50) {
        delay_model             : table_lookup;
        revision                : 1.0;
        date                    : "June 20, 2014";
        comment                 : "GF 180nm 5V Green";
        voltage_unit            : "1V";
        time_unit               : "1ns";
        current_unit            : "1mA";
        leakage_power_unit      : "1mW";
        nom_process             : 1;
        nom_temperature         : -40;
        nom_voltage             : 5.5;
        capacitive_load_unit    (1,pf);
        pulling_resistance_unit : "1kohm";

        /* additional header data */
        default_fanout_load            : 1;
        default_inout_pin_cap          : 0.045;
        default_input_pin_cap          : 0.045;
        default_output_pin_cap         : 0;
        default_max_transition         : 1.087;
        default_cell_leakage_power     : 0;

         /* default attributes */
         slew_derate_from_library      : 1.000;
         slew_lower_threshold_pct_fall : 10.000;
         slew_upper_threshold_pct_fall : 90.000;
         slew_lower_threshold_pct_rise : 10.000;
         slew_upper_threshold_pct_rise : 90.000;
         input_threshold_pct_fall      : 50.000;
         input_threshold_pct_rise      : 50.000;
         output_threshold_pct_fall     : 50.000;
         output_threshold_pct_rise     : 50.000;
         default_leakage_power_density : 0;

        /* k-factors */
        k_process_recovery_fall        : 1;
        k_process_recovery_rise        : 1;
        k_process_cell_fall            : 1;
        k_process_cell_leakage_power   : 0;
        k_process_cell_rise            : 1;
        k_process_fall_transition      : 1;
        k_process_hold_fall            : 1;
        k_process_hold_rise            : 1;
        k_process_internal_power       : 0;
        k_process_min_pulse_width_high : 1;
        k_process_min_pulse_width_low  : 1;
        k_process_setup_fall           : 1;
        k_process_setup_rise           : 1;
        k_process_wire_cap             : 0;
        k_process_wire_res             : 0;
        k_process_pin_cap              : 0;
        k_process_rise_transition      : 1;
        k_temp_cell_fall               : 0.000;
        k_temp_cell_rise               : 0.000;
        k_temp_hold_fall               : 0.000;
        k_temp_hold_rise               : 0.000;
        k_temp_min_pulse_width_high    : 0.000;
        k_temp_min_pulse_width_low     : 0.000;
        k_temp_min_period              : 0.000;
        k_temp_rise_propagation        : 0.000;
        k_temp_fall_propagation        : 0.000;
        k_temp_rise_transition         : 0.000;
        k_temp_fall_transition         : 0.000;
        k_temp_recovery_fall           : 0.000;
        k_temp_recovery_rise           : 0.000;
        k_temp_setup_fall              : 0.000;
        k_temp_setup_rise              : 0.000;
        k_volt_cell_fall               : 0.000;
        k_volt_cell_rise               : 0.000;
        k_volt_hold_fall               : 0.000;
        k_volt_hold_rise               : 0.000;
        k_volt_min_pulse_width_high    : 0.000;
        k_volt_min_pulse_width_low     : 0.000;
        k_volt_min_period              : 0.000;
        k_volt_recovery_fall           : 0.000;
        k_volt_recovery_rise           : 0.000;
        k_volt_setup_fall              : 0.000;
        k_volt_setup_rise              : 0.000;
        k_volt_rise_propagation        : 0.000;
        k_volt_fall_propagation        : 0.000;
        k_volt_rise_transition         : 0.000;
        k_volt_fall_transition         : 0.000;

         voltage_map (VDD, 5.5);
         voltage_map (VSS, 0.00);
         operating_conditions(ff_5p5v_m40C) {
                process       : 1;
                temperature   : -40;
                voltage       : 5.5;
                tree_type     : balanced_tree;
         }

         default_operating_conditions : ff_5p5v_m40C;
         wire_load("Estimate") {
                resistance    : 1.44e-05;
                capacitance   : 0.00018;
                area          : 1.7;
                slope         : 500;
                fanout_length (1,500);
         }
         power_lut_template(power_template) {
            variable_1 : input_transition_time;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(q_delay_template) {
            variable_1 : input_net_transition;
            variable_2 : total_output_net_capacitance;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
                 index_2 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(q_slew_template) {
            variable_1 : total_output_net_capacitance;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(constraint_template) {
            variable_1 : related_pin_transition;
            variable_2 : constrained_pin_transition;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
                 index_2 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }

         library_features(report_delay_calculation);

         type (A_BUS) {
                base_type : array;
                data_type : bit;
                bit_width : 6;
                bit_from  : 5;
                bit_to    : 0;
                downto    : true;
         }
         type (Q_BUS) {
                base_type : array;
                data_type : bit;
                bit_width : 8;
                bit_from  : 7;
                bit_to    : 0;
                downto    : true;
         }
 cell(gf180mcu_fd_ip_sram__sram64x8m8wm1) {
        area             : 100571.5568;
        dont_use         : TRUE;
        dont_touch       : TRUE;
        interface_timing : TRUE;
        memory() {
                type          : ram;
                address_width : 6;
                word_width    : 8;
        }

                 bus(Q)   {
                  bus_type             : Q_BUS;
                  direction            : output;
                  max_capacitance      : 1.165;
                  memory_read() {
                        address        : A;
                  }
                  timing() {
                          related_pin  : "CLK";
                          timing_type  : rising_edge;
                          timing_sense : non_unate;
       		  when : "((!CEN) & (GWEN))";
        	  sdf_cond : "CEN== 1'b0 && GWEN== 1'b1";
                          cell_rise(q_delay_template) {
			  index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
			  index_2 ("0.01, 0.03078, 0.1037, 0.243, 0.4599, 0.7643, 1.165");
                          values  ( \
                            "2.79852, 2.8104, 2.85144, 2.92044, 3.02472, 3.17124, 3.36408", \
                            "2.79912, 2.81196, 2.85312, 2.92344, 3.02496, 3.17184, 3.36432", \
                            "2.8014, 2.81208, 2.85132, 2.91984, 3.02472, 3.17124, 3.366", \
                            "2.80104, 2.81568, 2.85564, 2.925, 3.02904, 3.17352, 3.36888", \
                            "2.80932, 2.82264, 2.86248, 2.9322, 3.03636, 3.18288, 3.37488", \
                            "2.8116, 2.82408, 2.86488, 2.93376, 3.04008, 3.18576, 3.37716", \
                            "2.80212, 2.81508, 2.85504, 2.92716, 3.03108, 3.17496, 3.36936" \
                          )
                          }
                          rise_transition(q_slew_template) {
                          index_1 ("0.01, 0.03078, 0.1037, 0.243, 0.4599, 0.7643, 1.165");
                          values  ( \
  	                     "0.110011, 0.128376, 0.192036, 0.319692, 0.520656, 0.81738, 1.20612" \
                          )

                          }
                          cell_fall(q_delay_template) {
                          index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          index_2 ("0.01, 0.03078, 0.1037, 0.243, 0.4599, 0.7643, 1.165");
                          values  ( \
                            "2.88624, 2.901, 2.94192, 3.00372, 3.08664, 3.19584, 3.33372", \
                            "2.88768, 2.90304, 2.94324, 3.006, 3.08748, 3.19572, 3.3342", \
                            "2.89056, 2.90064, 2.9418, 3.00288, 3.08856, 3.19488, 3.33564", \
                            "2.8914, 2.90436, 2.94612, 3.00804, 3.09216, 3.19752, 3.339", \
                            "2.8986, 2.9124, 2.95296, 3.01536, 3.099, 3.20688, 3.34584", \
                            "2.90064, 2.91372, 2.95368, 3.01848, 3.102, 3.2094, 3.34692", \
                            "2.88936, 2.90316, 2.94384, 3.01008, 3.09456, 3.1986, 3.33804" \
                          )
                          }
                          fall_transition(q_slew_template) {
                          index_1 ("0.01, 0.03078, 0.1037, 0.243, 0.4599, 0.7643, 1.165");
                          values  ( \
                            "0.113394, 0.128832, 0.175356, 0.254784, 0.373968, 0.546744, 0.775164" \
                          )
                          }
                  }
          }
          pin(CLK)   {
                  direction            : input;
                  capacitance          : 0.282544;
                  clock                : true;
                  max_transition       : 1.087;
                  min_pulse_width_high : 1.4138025;
                  min_pulse_width_low  : 1.35504;
                  min_period           : 3.733215;

/* WRITE POWER */
             internal_power() {
              when : "!CEN & !GWEN & (!WEN[0] | !WEN[1] | !WEN[2] | !WEN[3] | !WEN[4] | !WEN[5] | !WEN[6] | !WEN[7])";
              rise_power(power_template) {
                index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                values  ("1046.15, 1046.15, 1046.15, 1046.15, 1046.15, 1046.15, 1046.15");
              }
              fall_power(power_template) {
                index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                values  ("1046.15, 1046.15, 1046.15, 1046.15, 1046.15, 1046.15, 1046.15");
              }
             }
/* DISABLED POWER */
             internal_power() {
              when : "CEN";
              rise_power(power_template) {
                index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                values  ("0.000159494, 0.000159494, 0.000159494, 0.000159494, 0.000159494, 0.000159494, 0.000159494");
              }
              fall_power(power_template) {
                index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                values  ("0.000159494, 0.000159494, 0.000159494, 0.000159494, 0.000159494, 0.000159494, 0.000159494");
              }
             }
/* READ POWER */
             internal_power() {
             when : "!CEN & GWEN";
             rise_power(power_template) {
                index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                values  ("940.445, 940.445, 940.445, 940.445, 940.445, 940.445, 940.445");
              }
              fall_power(power_template) {
                index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                values  ("940.445, 940.445, 940.445, 940.445, 940.445, 940.445, 940.445");
              }
             }
          }

          pg_pin(VDD) {
                  voltage_name     : VDD;
                  pg_type          : primary_power;
          }
          pg_pin(VSS) {
                  voltage_name     : VSS;
                  pg_type          : primary_ground;
          }
          pin(CEN)   {
                  direction            : input;
                  capacitance          : 0.0166054;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          index_2 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          values  ( \
                            "0.338129, 0.334103, 0.329406, 0.332178, 0.34892, 0.366443, 0.389103", \
                            "0.337634, 0.33429, 0.329241, 0.332574, 0.348744, 0.364507, 0.387167", \
                            "0.337304, 0.333707, 0.32901, 0.331782, 0.348524, 0.363528, 0.37565", \
                            "0.337117, 0.333718, 0.328834, 0.333487, 0.348337, 0.363352, 0.377454", \
                            "0.337293, 0.333487, 0.32857, 0.331078, 0.34551, 0.363088, 0.37719", \
                            "0.336886, 0.333454, 0.328515, 0.332607, 0.347039, 0.362901, 0.377124", \
                            "0.337128, 0.333267, 0.328075, 0.331562, 0.34617, 0.364342, 0.38654" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          index_2 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          values  ( \
                            "0.323389, 0.324203, 0.330924, 0.344839, 0.374649, 0.41646, 0.461571", \
                            "0.323279, 0.324027, 0.330748, 0.344674, 0.376288, 0.416295, 0.461406", \
                            "0.323169, 0.323796, 0.330528, 0.344454, 0.376068, 0.416064, 0.461175", \
                            "0.32285, 0.32362, 0.330341, 0.344278, 0.375881, 0.415888, 0.460999", \
                            "0.322619, 0.323345, 0.330088, 0.344014, 0.375628, 0.415624, 0.460735", \
                            "0.322564, 0.323257, 0.330022, 0.343959, 0.375562, 0.415558, 0.460669", \
                            "0.322883, 0.3234, 0.330077, 0.344003, 0.375617, 0.415624, 0.460735" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          index_2 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          values  ( \
                            "0.764038, 0.768064, 0.772761, 0.769989, 0.753247, 0.738243, 0.724141", \
                            "0.766997, 0.770341, 0.775401, 0.772057, 0.755887, 0.740883, 0.726781", \
                            "0.772046, 0.775643, 0.780329, 0.777568, 0.760826, 0.745822, 0.736252", \
                            "0.788073, 0.791472, 0.796356, 0.791703, 0.776853, 0.761838, 0.747736", \
                            "0.812911, 0.816717, 0.821634, 0.819126, 0.804705, 0.787116, 0.773014", \
                            "0.832128, 0.83556, 0.840499, 0.836407, 0.821975, 0.806113, 0.79189", \
                            "0.835307, 0.839168, 0.84436, 0.840873, 0.826265, 0.811921, 0.798292" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          index_2 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          values  ( \
                            "0.778778, 0.777975, 0.771243, 0.757328, 0.727518, 0.685707, 0.640596", \
                            "0.781363, 0.780604, 0.773883, 0.759957, 0.728343, 0.688347, 0.643236", \
                            "0.786181, 0.785543, 0.778822, 0.764885, 0.733282, 0.693275, 0.648164", \
                            "0.80234, 0.80157, 0.794849, 0.780923, 0.749309, 0.709302, 0.664191", \
                            "0.827596, 0.82687, 0.820127, 0.806201, 0.774587, 0.73458, 0.689469", \
                            "0.84645, 0.845757, 0.838992, 0.825055, 0.793452, 0.753456, 0.708345", \
                            "0.849541, 0.849024, 0.842358, 0.828432, 0.796807, 0.756811, 0.7117" \
                          )
                          }
                 }
          }
          pin(GWEN)   {
                  direction            : input;
                  capacitance          : 0.0487349;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          index_2 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          values  ( \
                            "0.435072, 0.436898, 0.444268, 0.462506, 0.495484, 0.532356, 0.566236", \
                            "0.432454, 0.434368, 0.441947, 0.460262, 0.493075, 0.529947, 0.56683", \
                            "0.426624, 0.428725, 0.43549, 0.454278, 0.487311, 0.524106, 0.561066", \
                            "0.40843, 0.411301, 0.417714, 0.436634, 0.469304, 0.506066, 0.543059", \
                            "0.379566, 0.381898, 0.38896, 0.407198, 0.440187, 0.476245, 0.514261", \
                            "0.352539, 0.354211, 0.361669, 0.380248, 0.411136, 0.446666, 0.486398", \
                            "0.331683, 0.333531, 0.340901, 0.358919, 0.392117, 0.428989, 0.465993" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          index_2 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          values  ( \
                            "0.455114, 0.457897, 0.469612, 0.497464, 0.541101, 0.602019, 0.673266", \
                            "0.452837, 0.455653, 0.467335, 0.495198, 0.538692, 0.59961, 0.670857", \
                            "0.447183, 0.449724, 0.461439, 0.489291, 0.533214, 0.59444, 0.665093", \
                            "0.429539, 0.431893, 0.443091, 0.471295, 0.514932, 0.578545, 0.647097", \
                            "0.4004, 0.402743, 0.414161, 0.442156, 0.485793, 0.549406, 0.617958", \
                            "0.373065, 0.375617, 0.387277, 0.414898, 0.458645, 0.519552, 0.590799", \
                            "0.35178, 0.354585, 0.366388, 0.39424, 0.437745, 0.501358, 0.569954" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          index_2 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          values  ( \
                            "0.593329, 0.592284, 0.586036, 0.569712, 0.550858, 0.533665, 0.520487", \
                            "0.59389, 0.592999, 0.586806, 0.570592, 0.551551, 0.534358, 0.522225", \
                            "0.594154, 0.593241, 0.587004, 0.57068, 0.551815, 0.534633, 0.522489", \
                            "0.598378, 0.597168, 0.591305, 0.574783, 0.556039, 0.538857, 0.526713", \
                            "0.604164, 0.602877, 0.596937, 0.580613, 0.561748, 0.544555, 0.532422", \
                            "0.604945, 0.604945, 0.598015, 0.581405, 0.562496, 0.546568, 0.533412", \
                            "0.596838, 0.595925, 0.589677, 0.573364, 0.554499, 0.537306, 0.525173" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          index_2 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          values  ( \
                            "0.362923, 0.360217, 0.347633, 0.318989, 0.275726, 0.218495, 0.149365", \
                            "0.36355, 0.36091, 0.347787, 0.320694, 0.276408, 0.219189, 0.150178", \
                            "0.363539, 0.361174, 0.348436, 0.319957, 0.278234, 0.218514, 0.150442", \
                            "0.367719, 0.365475, 0.352693, 0.324192, 0.280918, 0.220536, 0.154647", \
                            "0.373087, 0.370843, 0.358292, 0.32989, 0.286616, 0.226241, 0.160372", \
                            "0.39974, 0.396979, 0.385242, 0.356895, 0.311443, 0.252577, 0.185899", \
                            "0.435006, 0.432399, 0.420662, 0.392315, 0.346874, 0.28556, 0.221373" \
                          )
                          }
                 }
          }
          bus(WEN)   {
                  bus_type             : Q_BUS;
                  direction            : input;
                  capacitance          : 0.00761544;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          index_2 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          values  ( \
                            "0, 0, 0, 0.01672, 0.036619, 0.051821, 0.0642774", \
                            "0, 0, 0, 0.015873, 0.035772, 0.050985, 0.0626571", \
                            "0, 0, 0, 0.015213, 0.035112, 0.050325, 0.0619938", \
                            "0, 0, 0, 0.012034, 0.031922, 0.047135, 0.0588049", \
                            "0, 0, 0, 0.00638, 0.026279, 0.041492, 0.053152", \
                            "0, 0, 0, 0.005302, 0.02519, 0.040403, 0.052074", \
                            "0, 0, 0, 0.01342, 0.033319, 0.048532, 0.0601964" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          index_2 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          values  ( \
                            "0.224576, 0.227174, 0.239087, 0.268156, 0.310706, 0.368445, 0.437668", \
                            "0.223495, 0.226094, 0.238868, 0.266367, 0.310486, 0.367246, 0.436964", \
                            "0.222723, 0.225618, 0.237486, 0.266528, 0.308385, 0.367807, 0.436194", \
                            "0.220084, 0.222486, 0.234616, 0.263666, 0.306251, 0.367004, 0.432784", \
                            "0.21449, 0.216824, 0.22876, 0.257721, 0.300443, 0.360844, 0.427438", \
                            "0.212392, 0.215557, 0.22846, 0.256359, 0.299662, 0.357104, 0.425832", \
                            "0.220936, 0.223568, 0.236565, 0.263911, 0.307692, 0.368214, 0.434489" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          index_2 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          values  ( \
                            "0.593329, 0.592317, 0.586036, 0.569712, 0.550858, 0.533665, 0.521279", \
                            "0.59389, 0.59301, 0.586806, 0.570592, 0.551551, 0.534358, 0.522225", \
                            "0.594154, 0.593274, 0.587004, 0.57068, 0.551815, 0.534633, 0.522489", \
                            "0.598378, 0.597509, 0.591305, 0.574783, 0.556039, 0.538857, 0.526713", \
                            "0.604164, 0.603185, 0.596937, 0.580613, 0.561748, 0.544555, 0.532422", \
                            "0.604945, 0.604945, 0.598015, 0.581405, 0.562496, 0.546568, 0.533412", \
                            "0.596838, 0.595958, 0.589677, 0.573364, 0.554499, 0.537306, 0.525173" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          index_2 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          values  ( \
                            "0.362923, 0.360217, 0.348546, 0.318989, 0.275726, 0.218495, 0.149365", \
                            "0.36355, 0.36091, 0.348634, 0.320694, 0.276408, 0.219189, 0.150178", \
                            "0.363539, 0.361174, 0.349349, 0.319957, 0.278234, 0.218514, 0.150442", \
                            "0.367719, 0.365475, 0.353617, 0.324192, 0.280918, 0.220536, 0.154647", \
                            "0.373087, 0.370843, 0.359216, 0.32989, 0.286616, 0.226241, 0.160372", \
                            "0.374715, 0.371976, 0.359766, 0.331188, 0.287529, 0.230308, 0.161339", \
                            "0.366498, 0.363858, 0.351604, 0.323642, 0.279367, 0.21899, 0.152969" \
                          )
                          }
                 }
          }
          bus(A)   {
                  bus_type             : A_BUS;
                  direction            : input;
                  capacitance          : 0.0318192;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          index_2 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          values  ( \
                            "0.3872, 0.382074, 0.379269, 0.388872, 0.404855, 0.426074, 0.45078", \
                            "0.385979, 0.383064, 0.378059, 0.388113, 0.403645, 0.424501, 0.441408", \
                            "0.385803, 0.381722, 0.376926, 0.387706, 0.403007, 0.424402, 0.442112", \
                            "0.382096, 0.379192, 0.374099, 0.384923, 0.39974, 0.421476, 0.437976", \
                            "0.376937, 0.374396, 0.368632, 0.378598, 0.394086, 0.415932, 0.435567", \
                            "0.375628, 0.372262, 0.369149, 0.377905, 0.392315, 0.413171, 0.429594", \
                            "0.383922, 0.380237, 0.375573, 0.386012, 0.401181, 0.422807, 0.441562" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          index_2 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          values  ( \
                            "0.516472, 0.517055, 0.523644, 0.537372, 0.571516, 0.618079, 0.676544", \
                            "0.515416, 0.516912, 0.523072, 0.536965, 0.571956, 0.617859, 0.67672", \
                            "0.515471, 0.516109, 0.521719, 0.53592, 0.570955, 0.620235, 0.675312", \
                            "0.511885, 0.512424, 0.518485, 0.532653, 0.567292, 0.616726, 0.672111", \
                            "0.506077, 0.507474, 0.513766, 0.526889, 0.5621, 0.611567, 0.666633", \
                            "0.504944, 0.506011, 0.512149, 0.525745, 0.560219, 0.606771, 0.665335", \
                            "0.512886, 0.51425, 0.520377, 0.53394, 0.568777, 0.616924, 0.673145" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          index_2 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          values  ( \
                            "0.400488, 0.40315, 0.405405, 0.405449, 0.407462, 0.408639, 0.409442", \
                            "0.40282, 0.40535, 0.406384, 0.407649, 0.409662, 0.41085, 0.411246", \
                            "0.408782, 0.411312, 0.413633, 0.413611, 0.415613, 0.416801, 0.417197", \
                            "0.423852, 0.426382, 0.428703, 0.428648, 0.430694, 0.431871, 0.432267", \
                            "0.451649, 0.45419, 0.456489, 0.4565, 0.458513, 0.45969, 0.460086", \
                            "0.476905, 0.479446, 0.480458, 0.481712, 0.483758, 0.484935, 0.485331", \
                            "0.497772, 0.500302, 0.502634, 0.502601, 0.504603, 0.505791, 0.506187" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          index_2 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          values  ( \
                            "0.406021, 0.40491, 0.398321, 0.395791, 0.399707, 0.406142, 0.410487", \
                            "0.408463, 0.407099, 0.400147, 0.397606, 0.401907, 0.408342, 0.411587", \
                            "0.41426, 0.41305, 0.406626, 0.403546, 0.407869, 0.414304, 0.418649", \
                            "0.429099, 0.428208, 0.421179, 0.418638, 0.422939, 0.429583, 0.433719", \
                            "0.457039, 0.455939, 0.448987, 0.446644, 0.450747, 0.457391, 0.461538", \
                            "0.482581, 0.481162, 0.474232, 0.47168, 0.475992, 0.482427, 0.486739", \
                            "0.503008, 0.50204, 0.495099, 0.492547, 0.496848, 0.503492, 0.507639" \
                          )
                          }
                 }
          }
          bus(D)   {
                  bus_type             : Q_BUS;
                  memory_write() {
                          address      : A;
                          clocked_on   : "CLK";
                  }
                  direction            : input;
                  capacitance          : 0.015637;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          index_2 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          values  ( \
                            "0.362164, 0.364606, 0.369996, 0.374341, 0.367191, 0.351483, 0.319242", \
                            "0.360591, 0.363594, 0.369842, 0.373021, 0.366047, 0.351527, 0.319396", \
                            "0.360558, 0.363044, 0.368346, 0.372405, 0.365772, 0.350504, 0.31669", \
                            "0.357247, 0.359843, 0.366619, 0.369083, 0.363176, 0.347512, 0.314512", \
                            "0.351945, 0.354057, 0.360613, 0.362791, 0.357808, 0.342023, 0.308319", \
                            "0.351274, 0.352726, 0.358501, 0.362252, 0.355377, 0.340241, 0.309815", \
                            "0.358611, 0.360503, 0.367158, 0.370733, 0.364771, 0.348909, 0.316096" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          index_2 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          values  ( \
                            "0.129562, 0.132045, 0.146287, 0.182548, 0.237774, 0.312851, 0.405812", \
                            "0.128993, 0.131304, 0.145426, 0.181544, 0.236458, 0.312026, 0.404976", \
                            "0.127951, 0.130612, 0.14472, 0.180519, 0.235899, 0.311333, 0.404327", \
                            "0.125573, 0.127251, 0.14154, 0.177817, 0.233104, 0.308121, 0.401115", \
                            "0.119369, 0.122164, 0.135348, 0.172315, 0.227608, 0.302676, 0.39567", \
                            "0.118559, 0.12048, 0.134582, 0.170711, 0.226124, 0.30118, 0.393437", \
                            "0.126172, 0.12876, 0.142904, 0.179, 0.234395, 0.309485, 0.402435" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          index_2 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          values  ( \
                            "0.360844, 0.358424, 0.351516, 0.348777, 0.354981, 0.371481, 0.402754", \
                            "0.359854, 0.358193, 0.351747, 0.348117, 0.354794, 0.371217, 0.40172", \
                            "0.36201, 0.359986, 0.353078, 0.35035, 0.356609, 0.372647, 0.404525", \
                            "0.365211, 0.363055, 0.357434, 0.353925, 0.35981, 0.375837, 0.407473", \
                            "0.37004, 0.368588, 0.361284, 0.35838, 0.364067, 0.380809, 0.411323", \
                            "0.371734, 0.37059, 0.364716, 0.360437, 0.366795, 0.383878, 0.413259", \
                            "0.363396, 0.360866, 0.353287, 0.351571, 0.357445, 0.373472, 0.404789" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          index_2 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          values  ( \
                            "0.481789, 0.479743, 0.465817, 0.429539, 0.374341, 0.299486, 0.207314", \
                            "0.481415, 0.479512, 0.465586, 0.429308, 0.37411, 0.299266, 0.207088", \
                            "0.483571, 0.481349, 0.467423, 0.431684, 0.376189, 0.301092, 0.20892", \
                            "0.486607, 0.484583, 0.470624, 0.434346, 0.379082, 0.304293, 0.212121", \
                            "0.491172, 0.489115, 0.475189, 0.438911, 0.383713, 0.308858, 0.216686", \
                            "0.493053, 0.491513, 0.477532, 0.44132, 0.386122, 0.311267, 0.219094", \
                            "0.48422, 0.482185, 0.468259, 0.431981, 0.376783, 0.301928, 0.209756" \
                          )
                          }
                 }
        }
          cell_leakage_power : 0.0001594945;
}
}
