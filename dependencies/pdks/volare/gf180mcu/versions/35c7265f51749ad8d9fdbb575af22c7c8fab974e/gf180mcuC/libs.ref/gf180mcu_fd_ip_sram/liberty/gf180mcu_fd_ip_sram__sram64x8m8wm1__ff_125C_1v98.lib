/*
 * Copyright 2022 GlobalFoundries PDK Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 *      Single Port SRAM cell name : gf180mcu_fd_ip_sram__sram64x8m8wm1
 *      Technology                 : GF 180nm 5V Green
 *
 *      ---------
 *      Pin name:
 *      ---------
 *      Input Pins : CLK CEN GWEN WEN[7:0] A[5:0] D[7:0]
 *      Inout Pins:  VDD VSS
 *      Output Pins: Q[7:0]
 *
 *     Revision History: 1.0 (Initial Release: June 20, 2014)
 */

library(gf180mcu_fd_ip_sram__sram64x8m8wm1__ff_125C_1v98) {
        delay_model             : table_lookup;
        revision                : 1.0;
        date                    : "June 20, 2014";
        comment                 : "GF 180nm 5V Green";
        voltage_unit            : "1V";
        time_unit               : "1ns";
        current_unit            : "1mA";
        leakage_power_unit      : "1mW";
        nom_process             : 1;
        nom_temperature         : 125;
        nom_voltage             : 1.98;
        capacitive_load_unit    (1,pf);
        pulling_resistance_unit : "1kohm";

        /* additional header data */
        default_fanout_load            : 1;
        default_inout_pin_cap          : 0.045;
        default_input_pin_cap          : 0.045;
        default_output_pin_cap         : 0;
        default_max_transition         : 3.235;
        default_cell_leakage_power     : 0;

         /* default attributes */
         slew_derate_from_library      : 1.000;
         slew_lower_threshold_pct_fall : 10.000;
         slew_upper_threshold_pct_fall : 90.000;
         slew_lower_threshold_pct_rise : 10.000;
         slew_upper_threshold_pct_rise : 90.000;
         input_threshold_pct_fall      : 50.000;
         input_threshold_pct_rise      : 50.000;
         output_threshold_pct_fall     : 50.000;
         output_threshold_pct_rise     : 50.000;
         default_leakage_power_density : 0;

        /* k-factors */
        k_process_recovery_fall        : 1;
        k_process_recovery_rise        : 1;
        k_process_cell_fall            : 1;
        k_process_cell_leakage_power   : 0;
        k_process_cell_rise            : 1;
        k_process_fall_transition      : 1;
        k_process_hold_fall            : 1;
        k_process_hold_rise            : 1;
        k_process_internal_power       : 0;
        k_process_min_pulse_width_high : 1;
        k_process_min_pulse_width_low  : 1;
        k_process_setup_fall           : 1;
        k_process_setup_rise           : 1;
        k_process_wire_cap             : 0;
        k_process_wire_res             : 0;
        k_process_pin_cap              : 0;
        k_process_rise_transition      : 1;
        k_temp_cell_fall               : 0.000;
        k_temp_cell_rise               : 0.000;
        k_temp_hold_fall               : 0.000;
        k_temp_hold_rise               : 0.000;
        k_temp_min_pulse_width_high    : 0.000;
        k_temp_min_pulse_width_low     : 0.000;
        k_temp_min_period              : 0.000;
        k_temp_rise_propagation        : 0.000;
        k_temp_fall_propagation        : 0.000;
        k_temp_rise_transition         : 0.000;
        k_temp_fall_transition         : 0.000;
        k_temp_recovery_fall           : 0.000;
        k_temp_recovery_rise           : 0.000;
        k_temp_setup_fall              : 0.000;
        k_temp_setup_rise              : 0.000;
        k_volt_cell_fall               : 0.000;
        k_volt_cell_rise               : 0.000;
        k_volt_hold_fall               : 0.000;
        k_volt_hold_rise               : 0.000;
        k_volt_min_pulse_width_high    : 0.000;
        k_volt_min_pulse_width_low     : 0.000;
        k_volt_min_period              : 0.000;
        k_volt_recovery_fall           : 0.000;
        k_volt_recovery_rise           : 0.000;
        k_volt_setup_fall              : 0.000;
        k_volt_setup_rise              : 0.000;
        k_volt_rise_propagation        : 0.000;
        k_volt_fall_propagation        : 0.000;
        k_volt_rise_transition         : 0.000;
        k_volt_fall_transition         : 0.000;

         voltage_map (VDD, 1.98);
         voltage_map (VSS, 0.00);
         operating_conditions(ff_1p98v_125C) {
                process       : 1;
                temperature   : 125;
                voltage       : 1.98;
                tree_type     : balanced_tree;
         }

         default_operating_conditions : ff_1p98v_125C;
         wire_load("Estimate") {
                resistance    : 1.44e-05;
                capacitance   : 0.00018;
                area          : 1.7;
                slope         : 500;
                fanout_length (1,500);
         }
         power_lut_template(power_template) {
            variable_1 : input_transition_time;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(q_delay_template) {
            variable_1 : input_net_transition;
            variable_2 : total_output_net_capacitance;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
                 index_2 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(q_slew_template) {
            variable_1 : total_output_net_capacitance;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(constraint_template) {
            variable_1 : related_pin_transition;
            variable_2 : constrained_pin_transition;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
                 index_2 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }

         library_features(report_delay_calculation);

         type (A_BUS) {
                base_type : array;
                data_type : bit;
                bit_width : 6;
                bit_from  : 5;
                bit_to    : 0;
                downto    : true;
         }
         type (Q_BUS) {
                base_type : array;
                data_type : bit;
                bit_width : 8;
                bit_from  : 7;
                bit_to    : 0;
                downto    : true;
         }
 cell(gf180mcu_fd_ip_sram__sram64x8m8wm1) {
        area             : 100571.5568;
        dont_use         : TRUE;
        dont_touch       : TRUE;
        interface_timing : TRUE;
        memory() {
                type          : ram;
                address_width : 6;
                word_width    : 8;
        }

                 bus(Q)   {
                  bus_type             : Q_BUS;
                  direction            : output;
                  max_capacitance      : 1.018;
                  memory_read() {
                        address        : A;
                  }
                  timing() {
                          related_pin  : "CLK";
                          timing_type  : rising_edge;
                          timing_sense : non_unate;
       		  when : "((!CEN) & (GWEN))";
        	  sdf_cond : "CEN== 1'b0 && GWEN== 1'b1";
                          cell_rise(q_delay_template) {
			  index_1 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
			  index_2 ("0.01, 0.02813, 0.09177, 0.2133, 0.4026, 0.6683, 1.018");
                          values  ( \
                            "10.1268, 10.16472, 10.31328, 10.55172, 10.89528, 11.38488, 11.99952", \
                            "10.11648, 10.18548, 10.32168, 10.55952, 10.91256, 11.38428, 12.006", \
                            "10.14252, 10.2078, 10.35108, 10.58424, 10.93296, 11.40348, 12.0072", \
                            "10.19316, 10.23588, 10.37448, 10.62696, 10.97112, 11.44524, 12.072", \
                            "10.24128, 10.28928, 10.43328, 10.67208, 11.01816, 11.49336, 12.1092", \
                            "10.25712, 10.32084, 10.47288, 10.70688, 11.05224, 11.52024, 12.1452", \
                            "10.2774, 10.33884, 10.4814, 10.7274, 11.064, 11.53464, 12.1536" \
                          )
                          }
                          rise_transition(q_slew_template) {
                          index_1 ("0.01, 0.02813, 0.09177, 0.2133, 0.4026, 0.6683, 1.018");
                          values  ( \
  	                     "0.404112, 0.475632, 0.695652, 1.10827, 1.77288, 2.73972, 4.0038" \
                          )

                          }
                          cell_fall(q_delay_template) {
                          index_1 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          index_2 ("0.01, 0.02813, 0.09177, 0.2133, 0.4026, 0.6683, 1.018");
                          values  ( \
                            "10.59672, 10.62936, 10.746, 10.9398, 11.17788, 11.46936, 11.80344", \
                            "10.59204, 10.64268, 10.7646, 10.95516, 11.18556, 11.46612, 11.80956", \
                            "10.6176, 10.66692, 10.79616, 10.97952, 11.21208, 11.4924, 11.81808", \
                            "10.66344, 10.70172, 10.80912, 11.00868, 11.24628, 11.53584, 11.87364", \
                            "10.72296, 10.7646, 10.88004, 11.07156, 11.30196, 11.57952, 11.91732", \
                            "10.72908, 10.77672, 10.91412, 11.09532, 11.33652, 11.61576, 11.95464", \
                            "10.75284, 10.80972, 10.93008, 11.11452, 11.3478, 11.62044, 11.96388" \
                          )
                          }
                          fall_transition(q_slew_template) {
                          index_1 ("0.01, 0.02813, 0.09177, 0.2133, 0.4026, 0.6683, 1.018");
                          values  ( \
                            "0.401748, 0.464112, 0.591828, 0.823596, 1.12597, 1.54128, 2.07384" \
                          )
                          }
                  }
          }
          pin(CLK)   {
                  direction            : input;
                  capacitance          : 0.274173;
                  clock                : true;
                  max_transition       : 3.235;
                  min_pulse_width_high : 3.916035;
                  min_pulse_width_low  : 5.90664;
                  min_period           : 13.879725;

/* WRITE POWER */
             internal_power() {
              when : "!CEN & !GWEN & (!WEN[0] | !WEN[1] | !WEN[2] | !WEN[3] | !WEN[4] | !WEN[5] | !WEN[6] | !WEN[7])";
              rise_power(power_template) {
                index_1 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                values  ("120.582, 120.582, 120.582, 120.582, 120.582, 120.582, 120.582");
              }
              fall_power(power_template) {
                index_1 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                values  ("120.582, 120.582, 120.582, 120.582, 120.582, 120.582, 120.582");
              }
             }
/* DISABLED POWER */
             internal_power() {
              when : "CEN";
              rise_power(power_template) {
                index_1 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                values  ("0.00119879, 0.00119879, 0.00119879, 0.00119879, 0.00119879, 0.00119879, 0.00119879");
              }
              fall_power(power_template) {
                index_1 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                values  ("0.00119879, 0.00119879, 0.00119879, 0.00119879, 0.00119879, 0.00119879, 0.00119879");
              }
             }
/* READ POWER */
             internal_power() {
             when : "!CEN & GWEN";
             rise_power(power_template) {
                index_1 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                values  ("108.841, 108.841, 108.841, 108.841, 108.841, 108.841, 108.841");
              }
              fall_power(power_template) {
                index_1 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                values  ("108.841, 108.841, 108.841, 108.841, 108.841, 108.841, 108.841");
              }
             }
          }

          pg_pin(VDD) {
                  voltage_name     : VDD;
                  pg_type          : primary_power;
          }
          pg_pin(VSS) {
                  voltage_name     : VSS;
                  pg_type          : primary_ground;
          }
          pin(CEN)   {
                  direction            : input;
                  capacitance          : 0.0171918;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          index_2 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          values  ( \
                            "0.972961, 0.965745, 0.962093, 1.00066, 1.11405, 1.23992, 1.33782", \
                            "0.960828, 0.953502, 0.949795, 0.989736, 1.09908, 1.22041, 1.31875", \
                            "0.91839, 0.911064, 0.907368, 0.945934, 1.05679, 1.17817, 1.27488", \
                            "0.8503, 0.841335, 0.839454, 0.87351, 0.981772, 1.10326, 1.19986", \
                            "0.850113, 0.841302, 0.839201, 0.873257, 0.972719, 1.05022, 1.13879", \
                            "0.849838, 0.840609, 0.838915, 0.872993, 0.971553, 1.05152, 1.11714", \
                            "0.84964, 0.840642, 0.838728, 0.874863, 0.968627, 1.0514, 1.12247" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          index_2 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          values  ( \
                            "0.803902, 0.807455, 0.847803, 0.944042, 1.09661, 1.3037, 1.52713", \
                            "0.789745, 0.799458, 0.839762, 0.932327, 1.08512, 1.29766, 1.51481", \
                            "0.791351, 0.799106, 0.83941, 0.931997, 1.08487, 1.29732, 1.51283", \
                            "0.789668, 0.799029, 0.839322, 0.931887, 1.08472, 1.29722, 1.51272", \
                            "0.789041, 0.798787, 0.83908, 0.931634, 1.08448, 1.29697, 1.5125", \
                            "0.788766, 0.798435, 0.838772, 0.93137, 1.0842, 1.29669, 1.51217", \
                            "0.790526, 0.798314, 0.838607, 0.931161, 1.08404, 1.2965, 1.51195" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          index_2 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          values  ( \
                            "2.7467, 2.75583, 2.75781, 2.72382, 2.62174, 2.54056, 2.49788", \
                            "2.75671, 2.76551, 2.7676, 2.73196, 2.63417, 2.55684, 2.51614", \
                            "2.79521, 2.80401, 2.8061, 2.772, 2.67256, 2.59501, 2.55629", \
                            "2.87155, 2.88046, 2.88233, 2.84834, 2.7489, 2.67124, 2.63263", \
                            "2.99233, 3.00113, 3.00322, 2.96923, 2.86979, 2.79224, 2.75352", \
                            "3.12906, 3.1383, 3.13995, 3.10585, 3.00729, 2.92732, 2.88134", \
                            "3.24885, 3.25787, 3.25974, 3.22366, 3.12983, 3.04711, 3.01092" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          index_2 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          values  ( \
                            "2.80599, 2.79829, 2.75803, 2.66541, 2.51251, 2.3001, 2.08461", \
                            "2.81776, 2.80797, 2.76771, 2.67509, 2.5223, 2.30978, 2.09429", \
                            "2.85428, 2.84658, 2.80621, 2.71359, 2.5608, 2.34828, 2.13279", \
                            "2.93216, 2.92281, 2.88244, 2.78993, 2.63714, 2.42462, 2.20902", \
                            "3.05338, 3.0437, 3.00344, 2.91082, 2.75803, 2.54551, 2.33002", \
                            "3.19011, 3.18043, 3.14006, 3.04755, 2.89465, 2.68213, 2.46664", \
                            "3.30803, 3.30022, 3.25985, 3.16734, 3.01444, 2.80203, 2.58654" \
                          )
                          }
                 }
          }
          pin(GWEN)   {
                  direction            : input;
                  capacitance          : 0.0458878;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          index_2 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          values  ( \
                            "1.29686, 1.30286, 1.3431, 1.41669, 1.52823, 1.6621, 1.78079", \
                            "1.29093, 1.29637, 1.33573, 1.40921, 1.52152, 1.65187, 1.7633", \
                            "1.25633, 1.26172, 1.30099, 1.37467, 1.48687, 1.61678, 1.73811", \
                            "1.18588, 1.19285, 1.23096, 1.30475, 1.41867, 1.55265, 1.66804", \
                            "1.07347, 1.07888, 1.11817, 1.19181, 1.30404, 1.43396, 1.55529", \
                            "1.0023, 1.00815, 1.0471, 1.12013, 1.23537, 1.36323, 1.48038", \
                            "0.943811, 0.949652, 0.988933, 1.06256, 1.17479, 1.30475, 1.42373" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          index_2 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          values  ( \
                            "1.53131, 1.53681, 1.58873, 1.67783, 1.84899, 2.07152, 2.35246", \
                            "1.52361, 1.52889, 1.5763, 1.67035, 1.83557, 2.06404, 2.34498", \
                            "1.48918, 1.496, 1.54176, 1.63647, 1.80092, 2.02939, 2.31033", \
                            "1.419, 1.42604, 1.47169, 1.57014, 1.73096, 1.96031, 2.24037", \
                            "1.30701, 1.31322, 1.35894, 1.45365, 1.6181, 1.84657, 2.12751", \
                            "1.23543, 1.24247, 1.28814, 1.38292, 1.54737, 1.77584, 2.05678", \
                            "1.17594, 1.18399, 1.22965, 1.32363, 1.48885, 1.71534, 1.99826" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          index_2 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          values  ( \
                            "1.75043, 1.73129, 1.69708, 1.62624, 1.54275, 1.47565, 1.43187", \
                            "1.7567, 1.74427, 1.70885, 1.6335, 1.54825, 1.48357, 1.45365", \
                            "1.75945, 1.74427, 1.70709, 1.63625, 1.55122, 1.48676, 1.44452", \
                            "1.79256, 1.77749, 1.74031, 1.672, 1.58444, 1.52504, 1.47763", \
                            "1.82347, 1.80829, 1.77111, 1.70027, 1.61524, 1.55078, 1.50854", \
                            "1.87176, 1.85658, 1.8194, 1.74856, 1.66232, 1.59907, 1.56497", \
                            "1.88078, 1.86571, 1.82853, 1.75769, 1.67255, 1.60809, 1.57179" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          index_2 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          values  ( \
                            "0.855481, 0.83743, 0.788865, 0.705771, 0.534831, 0.3288, 0.065857", \
                            "0.862609, 0.844778, 0.802285, 0.713086, 0.541211, 0.334345, 0.073194", \
                            "0.865337, 0.847121, 0.804914, 0.704352, 0.545391, 0.337106, 0.075933", \
                            "0.898821, 0.879901, 0.838178, 0.747219, 0.578721, 0.363979, 0.109098", \
                            "0.932591, 0.910767, 0.869066, 0.768317, 0.609422, 0.401104, 0.139963", \
                            "0.977636, 0.955735, 0.917334, 0.816673, 0.657756, 0.449372, 0.188244", \
                            "0.993564, 0.968099, 0.926288, 0.837188, 0.665434, 0.457413, 0.197305" \
                          )
                          }
                 }
          }
          bus(WEN)   {
                  bus_type             : Q_BUS;
                  direction            : input;
                  capacitance          : 0.00723483;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          index_2 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          values  ( \
                            "0, 0, 0, 0, 0, 0, 0", \
                            "0, 0, 0, 0, 0, 0, 0", \
                            "0, 0, 0, 0, 0, 0, 0", \
                            "0, 0, 0, 0, 0, 0, 0", \
                            "0, 0, 0, 0, 0, 0, 0", \
                            "0, 0, 0, 0, 0, 0, 0", \
                            "0, 0, 0, 0, 0, 0, 0" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          index_2 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          values  ( \
                            "0.565983, 0.5841, 0.634337, 0.716485, 0.890923, 1.09654, 1.36103", \
                            "0.560164, 0.579326, 0.621676, 0.710424, 0.883993, 1.08972, 1.35278", \
                            "0.552189, 0.571813, 0.613987, 0.712943, 0.876051, 1.08285, 1.34541", \
                            "0.521334, 0.541816, 0.583143, 0.673519, 0.843931, 1.05806, 1.31468", \
                            "0.48873, 0.514668, 0.556358, 0.65747, 0.81719, 1.02553, 1.28691", \
                            "0.44506, 0.465982, 0.504614, 0.602371, 0.765325, 0.968847, 1.23544", \
                            "0.426206, 0.45507, 0.496683, 0.584991, 0.75845, 0.965316, 1.22808" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          index_2 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          values  ( \
                            "1.75043, 1.73338, 1.69708, 1.62624, 1.54275, 1.47961, 1.43979", \
                            "1.7567, 1.74427, 1.70885, 1.6335, 1.54957, 1.48698, 1.45365", \
                            "1.75945, 1.74427, 1.70709, 1.63625, 1.55232, 1.48973, 1.45266", \
                            "1.79256, 1.77749, 1.74031, 1.672, 1.58554, 1.52504, 1.48588", \
                            "1.82347, 1.80829, 1.77111, 1.70027, 1.61634, 1.55375, 1.51679", \
                            "1.87176, 1.85658, 1.8194, 1.74856, 1.66463, 1.60204, 1.56497", \
                            "1.88078, 1.86571, 1.82853, 1.75769, 1.67365, 1.61106, 1.5741" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          index_2 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          values  ( \
                            "0.855481, 0.83743, 0.788865, 0.705771, 0.534831, 0.3288, 0.065857", \
                            "0.862609, 0.844778, 0.802285, 0.713086, 0.541211, 0.334345, 0.073194", \
                            "0.865337, 0.847121, 0.804914, 0.704352, 0.545391, 0.337106, 0.075933", \
                            "0.898821, 0.879901, 0.838178, 0.747219, 0.578721, 0.363979, 0.109098", \
                            "0.932591, 0.910767, 0.869066, 0.768317, 0.609422, 0.401104, 0.139963", \
                            "0.977636, 0.955735, 0.917334, 0.816673, 0.657756, 0.449372, 0.188244", \
                            "0.993564, 0.968099, 0.926288, 0.837188, 0.665434, 0.457413, 0.197305" \
                          )
                          }
                 }
          }
          bus(A)   {
                  bus_type             : A_BUS;
                  direction            : input;
                  capacitance          : 0.0324056;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          index_2 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          values  ( \
                            "1.22665, 1.23175, 1.21886, 1.26512, 1.35839, 1.4894, 1.56662", \
                            "1.22078, 1.23245, 1.21342, 1.25635, 1.35003, 1.48786, 1.5675", \
                            "1.2059, 1.21968, 1.20493, 1.24441, 1.3387, 1.46718, 1.55232", \
                            "1.18496, 1.18788, 1.17459, 1.20841, 1.30685, 1.43396, 1.53296", \
                            "1.14861, 1.15619, 1.14203, 1.18485, 1.27601, 1.40646, 1.4905", \
                            "1.10596, 1.10667, 1.09845, 1.13793, 1.22674, 1.35652, 1.45277", \
                            "1.09402, 1.10199, 1.08283, 1.12949, 1.2197, 1.34838, 1.43649" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          index_2 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          values  ( \
                            "1.36202, 1.36554, 1.40943, 1.49809, 1.65165, 1.86967, 2.09836", \
                            "1.35696, 1.35982, 1.39777, 1.48544, 1.64714, 1.86043, 2.09209", \
                            "1.34662, 1.3497, 1.39557, 1.47708, 1.63735, 1.85152, 2.08098", \
                            "1.31647, 1.31899, 1.36488, 1.45035, 1.60545, 1.83051, 2.05337", \
                            "1.28453, 1.28862, 1.32891, 1.41944, 1.57201, 1.7897, 2.01894", \
                            "1.23613, 1.24148, 1.28701, 1.37071, 1.52537, 1.74603, 1.9734", \
                            "1.22809, 1.23299, 1.27697, 1.35861, 1.51723, 1.74394, 1.96449" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          index_2 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          values  ( \
                            "0.938036, 0.942084, 0.942326, 0.878691, 0.828586, 0.787985, 0.756448", \
                            "0.94963, 0.950994, 0.951643, 0.894564, 0.840268, 0.789943, 0.749639", \
                            "0.988691, 0.990055, 0.990693, 0.933614, 0.879318, 0.829136, 0.794178", \
                            "1.06306, 1.06447, 1.06512, 1.00771, 0.953744, 0.903441, 0.868604", \
                            "1.1723, 1.17369, 1.17433, 1.11727, 1.06297, 1.01276, 0.977834", \
                            "1.29906, 1.30316, 1.30195, 1.24418, 1.18763, 1.14552, 1.10552", \
                            "1.38853, 1.38985, 1.39051, 1.33342, 1.27519, 1.23426, 1.20541" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          index_2 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          values  ( \
                            "1.02678, 1.01578, 0.974435, 0.896885, 0.823229, 0.761035, 0.712844", \
                            "1.03792, 1.02651, 0.986216, 0.90761, 0.833877, 0.771749, 0.722854", \
                            "1.07698, 1.06623, 1.02528, 0.94666, 0.873004, 0.810799, 0.76263", \
                            "1.15136, 1.14006, 1.0997, 1.02109, 0.94743, 0.875116, 0.837056", \
                            "1.26058, 1.24929, 1.20892, 1.13032, 1.05658, 0.994455, 0.946275", \
                            "1.3882, 1.37687, 1.33661, 1.25794, 1.18428, 1.12209, 1.07391", \
                            "1.47675, 1.46542, 1.42505, 1.34651, 1.2728, 1.20038, 1.16243" \
                          )
                          }
                 }
          }
          bus(D)   {
                  bus_type             : Q_BUS;
                  memory_write() {
                          address      : A;
                          clocked_on   : "CLK";
                  }
                  direction            : input;
                  capacitance          : 0.0154266;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          index_2 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          values  ( \
                            "1.06095, 1.08861, 1.10646, 1.152, 1.17709, 1.16389, 1.12543", \
                            "1.06465, 1.07372, 1.09956, 1.1404, 1.1793, 1.15732, 1.08908", \
                            "1.05181, 1.06125, 1.08908, 1.13762, 1.16724, 1.14698, 1.08891", \
                            "1.01856, 1.04278, 1.0633, 1.09718, 1.13813, 1.11444, 1.05816", \
                            "0.990495, 1.00185, 1.03118, 1.07675, 1.10536, 1.08632, 1.02178", \
                            "0.946286, 0.954514, 0.986579, 1.02451, 1.05333, 1.03694, 0.983994", \
                            "0.935209, 0.947001, 0.973225, 1.02215, 1.03738, 1.03041, 0.980837" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          index_2 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          values  ( \
                            "0.143471, 0.141327, 0.175165, 0.280106, 0.449251, 0.673519, 0.930831", \
                            "0.137915, 0.135643, 0.169632, 0.274604, 0.444125, 0.668008, 0.925331", \
                            "0.127311, 0.124995, 0.159157, 0.264001, 0.433521, 0.657404, 0.914727", \
                            "0.100837, 0.094919, 0.128986, 0.233822, 0.403458, 0.627341, 0.884664", \
                            "0.065549, 0.063162, 0.097328, 0.202083, 0.37169, 0.595573, 0.852907", \
                            "0.018271, 0.016203, 0.050105, 0.154954, 0.324476, 0.548361, 0.805684", \
                            "0.011154, 0.008822, 0.042999, 0.147842, 0.317358, 0.541244, 0.798567" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          index_2 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          values  ( \
                            "0.735482, 0.710963, 0.697114, 0.651684, 0.631345, 0.63789, 0.682341", \
                            "0.743105, 0.739794, 0.707146, 0.65956, 0.631994, 0.644303, 0.716584", \
                            "0.753632, 0.748044, 0.715297, 0.668415, 0.640662, 0.656117, 0.720753", \
                            "0.792418, 0.757196, 0.743336, 0.697631, 0.670285, 0.682737, 0.748638", \
                            "0.814737, 0.809138, 0.77638, 0.731049, 0.701745, 0.717211, 0.781836", \
                            "0.862895, 0.857318, 0.827145, 0.77902, 0.759968, 0.765347, 0.821788", \
                            "0.880847, 0.864116, 0.833756, 0.786181, 0.768735, 0.771716, 0.825968" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          index_2 ("0.02, 0.07784, 0.2809, 0.6686, 1.273, 2.12, 3.235");
                          values  ( \
                            "1.33969, 1.34222, 1.3087, 1.2074, 1.03361, 0.810568, 0.556556", \
                            "1.34739, 1.35025, 1.31648, 1.21517, 1.04138, 0.818323, 0.564322", \
                            "1.35784, 1.36059, 1.32693, 1.22555, 1.05178, 0.828729, 0.574717", \
                            "1.38611, 1.38864, 1.35498, 1.25363, 1.07984, 0.85679, 0.602778", \
                            "1.41889, 1.42164, 1.38798, 1.28665, 1.11288, 0.889823, 0.635822", \
                            "1.46696, 1.4696, 1.43616, 1.33485, 1.16102, 0.93797, 0.683958", \
                            "1.47389, 1.47675, 1.44298, 1.34167, 1.16786, 0.944812, 0.6908" \
                          )
                          }
                 }
        }
          cell_leakage_power : 0.001198791;
}
}
