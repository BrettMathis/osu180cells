/*
 * Copyright 2022 GlobalFoundries PDK Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 *      Single Port SRAM cell name : gf180mcu_fd_ip_sram__sram128x8m8wm1
 *      Technology                 : GF 180nm 5V Green
 *
 *      ---------
 *      Pin name:
 *      ---------
 *      Input Pins : CLK CEN GWEN WEN[7:0] A[6:0] D[7:0]
 *      Inout Pins:  VDD VSS
 *      Output Pins: Q[7:0]
 *
 *     Revision History: 1.0 (Initial Release: June 20, 2014)
 */

library(gf180mcu_fd_ip_sram__sram128x8m8wm1__ss_n40C_1v62) {
        delay_model             : table_lookup;
        revision                : 1.0;
        date                    : "June 20, 2014";
        comment                 : "GF 180nm 5V Green";
        voltage_unit            : "1V";
        time_unit               : "1ns";
        current_unit            : "1mA";
        leakage_power_unit      : "1mW";
        nom_process             : 1;
        nom_temperature         : -40;
        nom_voltage             : 1.62;
        capacitive_load_unit    (1,pf);
        pulling_resistance_unit : "1kohm";

        /* additional header data */
        default_fanout_load            : 1;
        default_inout_pin_cap          : 0.045;
        default_input_pin_cap          : 0.045;
        default_output_pin_cap         : 0;
        default_max_transition         : 10.6;
        default_cell_leakage_power     : 0;

         /* default attributes */
         slew_derate_from_library      : 1.000;
         slew_lower_threshold_pct_fall : 10.000;
         slew_upper_threshold_pct_fall : 90.000;
         slew_lower_threshold_pct_rise : 10.000;
         slew_upper_threshold_pct_rise : 90.000;
         input_threshold_pct_fall      : 50.000;
         input_threshold_pct_rise      : 50.000;
         output_threshold_pct_fall     : 50.000;
         output_threshold_pct_rise     : 50.000;
         default_leakage_power_density : 0;

        /* k-factors */
        k_process_recovery_fall        : 1;
        k_process_recovery_rise        : 1;
        k_process_cell_fall            : 1;
        k_process_cell_leakage_power   : 0;
        k_process_cell_rise            : 1;
        k_process_fall_transition      : 1;
        k_process_hold_fall            : 1;
        k_process_hold_rise            : 1;
        k_process_internal_power       : 0;
        k_process_min_pulse_width_high : 1;
        k_process_min_pulse_width_low  : 1;
        k_process_setup_fall           : 1;
        k_process_setup_rise           : 1;
        k_process_wire_cap             : 0;
        k_process_wire_res             : 0;
        k_process_pin_cap              : 0;
        k_process_rise_transition      : 1;
        k_temp_cell_fall               : 0.000;
        k_temp_cell_rise               : 0.000;
        k_temp_hold_fall               : 0.000;
        k_temp_hold_rise               : 0.000;
        k_temp_min_pulse_width_high    : 0.000;
        k_temp_min_pulse_width_low     : 0.000;
        k_temp_min_period              : 0.000;
        k_temp_rise_propagation        : 0.000;
        k_temp_fall_propagation        : 0.000;
        k_temp_rise_transition         : 0.000;
        k_temp_fall_transition         : 0.000;
        k_temp_recovery_fall           : 0.000;
        k_temp_recovery_rise           : 0.000;
        k_temp_setup_fall              : 0.000;
        k_temp_setup_rise              : 0.000;
        k_volt_cell_fall               : 0.000;
        k_volt_cell_rise               : 0.000;
        k_volt_hold_fall               : 0.000;
        k_volt_hold_rise               : 0.000;
        k_volt_min_pulse_width_high    : 0.000;
        k_volt_min_pulse_width_low     : 0.000;
        k_volt_min_period              : 0.000;
        k_volt_recovery_fall           : 0.000;
        k_volt_recovery_rise           : 0.000;
        k_volt_setup_fall              : 0.000;
        k_volt_setup_rise              : 0.000;
        k_volt_rise_propagation        : 0.000;
        k_volt_fall_propagation        : 0.000;
        k_volt_rise_transition         : 0.000;
        k_volt_fall_transition         : 0.000;

         voltage_map (VDD, 1.62);
         voltage_map (VSS, 0.00);
         operating_conditions(ss_1p62v_m40C) {
                process       : 1;
                temperature   : -40;
                voltage       : 1.62;
                tree_type     : balanced_tree;
         }

         default_operating_conditions : ss_1p62v_m40C;
         wire_load("Estimate") {
                resistance    : 1.44e-05;
                capacitance   : 0.00018;
                area          : 1.7;
                slope         : 500;
                fanout_length (1,500);
         }
         power_lut_template(power_template) {
            variable_1 : input_transition_time;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(q_delay_template) {
            variable_1 : input_net_transition;
            variable_2 : total_output_net_capacitance;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
                 index_2 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(q_slew_template) {
            variable_1 : total_output_net_capacitance;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(constraint_template) {
            variable_1 : related_pin_transition;
            variable_2 : constrained_pin_transition;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
                 index_2 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }

         library_features(report_delay_calculation);

         type (A_BUS) {
                base_type : array;
                data_type : bit;
                bit_width : 7;
                bit_from  : 6;
                bit_to    : 0;
                downto    : true;
         }
         type (Q_BUS) {
                base_type : array;
                data_type : bit;
                bit_width : 8;
                bit_from  : 7;
                bit_to    : 0;
                downto    : true;
         }
 cell(gf180mcu_fd_ip_sram__sram128x8m8wm1) {
        area             : 116118.5168;
        dont_use         : TRUE;
        dont_touch       : TRUE;
        interface_timing : TRUE;
        memory() {
                type          : ram;
                address_width : 7;
                word_width    : 8;
        }

                 bus(Q)   {
                  bus_type             : Q_BUS;
                  direction            : output;
                  max_capacitance      : 1.03;
                  memory_read() {
                        address        : A;
                  }
                  timing() {
                          related_pin  : "CLK";
                          timing_type  : rising_edge;
                          timing_sense : non_unate;
       		  when : "((!CEN) & (GWEN))";
        	  sdf_cond : "CEN== 1'b0 && GWEN== 1'b1";
                          cell_rise(q_delay_template) {
			  index_1 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
			  index_2 ("0.01, 0.02835, 0.09278, 0.2158, 0.4075, 0.6764, 1.03");
                          values  ( \
                            "32.9568, 33.0456, 33.498, 34.254, 35.406, 36.9768, 39.0756", \
                            "33.0588, 33.168, 33.6348, 34.3728, 35.5176, 37.0968, 39.2412", \
                            "33.2508, 33.3792, 33.7788, 34.5792, 35.7264, 37.3296, 39.4044", \
                            "33.6744, 33.7932, 34.2228, 34.9896, 36.1356, 37.7244, 39.8232", \
                            "34.2768, 34.4196, 34.8744, 35.6196, 36.7656, 38.3424, 40.4712", \
                            "35.0052, 35.2116, 35.6304, 36.4668, 37.4868, 39.0624, 41.1984", \
                            "36.1536, 36.216, 36.7056, 37.5024, 38.6136, 40.1904, 42.3264" \
                          )
                          }
                          rise_transition(q_slew_template) {
                          index_1 ("0.01, 0.02835, 0.09278, 0.2158, 0.4075, 0.6764, 1.03");
                          values  ( \
  	                     "0.857556, 1.05036, 1.69848, 2.98212, 4.8756, 7.69992, 11.3474" \
                          )

                          }
                          cell_fall(q_delay_template) {
                          index_1 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                          index_2 ("0.01, 0.02835, 0.09278, 0.2158, 0.4075, 0.6764, 1.03");
                          values  ( \
                            "35.4984, 35.568, 35.8608, 36.2544, 36.8052, 37.4172, 38.19", \
                            "35.5872, 35.7192, 36.006, 36.4332, 36.9624, 37.5624, 38.34", \
                            "35.8104, 35.922, 36.18, 36.6468, 37.158, 37.83, 38.5752", \
                            "36.252, 36.3372, 36.6468, 37.0608, 37.578, 38.2164, 38.994", \
                            "36.852, 36.9324, 37.2852, 37.668, 38.19, 38.7744, 39.5832", \
                            "37.5192, 37.7184, 37.9824, 38.4408, 38.8968, 39.4956, 40.3728", \
                            "38.6472, 38.7396, 39.0324, 39.5124, 39.984, 40.626, 41.4384" \
                          )
                          }
                          fall_transition(q_slew_template) {
                          index_1 ("0.01, 0.02835, 0.09278, 0.2158, 0.4075, 0.6764, 1.03");
                          values  ( \
                            "0.864192, 0.96318, 1.302, 1.72548, 2.3634, 3.33888, 4.45488" \
                          )
                          }
                  }
          }
          pin(CLK)   {
                  direction            : input;
                  capacitance          : 0.295825;
                  clock                : true;
                  max_transition       : 10.6;
                  min_pulse_width_high : 21.81975;
                  min_pulse_width_low  : 22.5675;
                  min_period           : 48.03045;

/* WRITE POWER */
             internal_power() {
              when : "!CEN & !GWEN & (!WEN[0] | !WEN[1] | !WEN[2] | !WEN[3] | !WEN[4] | !WEN[5] | !WEN[6] | !WEN[7])";
              rise_power(power_template) {
                index_1 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                values  ("76.3255, 76.3255, 76.3255, 76.3255, 76.3255, 76.3255, 76.3255");
              }
              fall_power(power_template) {
                index_1 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                values  ("76.3255, 76.3255, 76.3255, 76.3255, 76.3255, 76.3255, 76.3255");
              }
             }
/* DISABLED POWER */
             internal_power() {
              when : "CEN";
              rise_power(power_template) {
                index_1 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                values  ("2.08381e-05, 2.08381e-05, 2.08381e-05, 2.08381e-05, 2.08381e-05, 2.08381e-05, 2.08381e-05");
              }
              fall_power(power_template) {
                index_1 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                values  ("2.08381e-05, 2.08381e-05, 2.08381e-05, 2.08381e-05, 2.08381e-05, 2.08381e-05, 2.08381e-05");
              }
             }
/* READ POWER */
             internal_power() {
             when : "!CEN & GWEN";
             rise_power(power_template) {
                index_1 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                values  ("70.9123, 70.9123, 70.9123, 70.9123, 70.9123, 70.9123, 70.9123");
              }
              fall_power(power_template) {
                index_1 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                values  ("70.9123, 70.9123, 70.9123, 70.9123, 70.9123, 70.9123, 70.9123");
              }
             }
          }

          pg_pin(VDD) {
                  voltage_name     : VDD;
                  pg_type          : primary_power;
          }
          pg_pin(VSS) {
                  voltage_name     : VSS;
                  pg_type          : primary_ground;
          }
          pin(CEN)   {
                  direction            : input;
                  capacitance          : 0.018494;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                          index_2 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                          values  ( \
                            "3.58985, 3.55245, 3.62802, 4.05713, 4.92294, 6.11589, 7.72948", \
                            "3.52649, 3.48898, 3.57687, 3.99377, 4.85969, 6.08146, 7.66634", \
                            "3.27613, 3.25314, 3.32651, 3.75826, 4.62627, 5.79634, 7.48935", \
                            "2.87298, 2.83569, 2.92259, 3.33003, 4.23401, 5.41717, 7.04", \
                            "2.87386, 2.84042, 2.92611, 3.33256, 4.22224, 5.41882, 7.00612", \
                            "2.86506, 2.82832, 2.92721, 3.32805, 4.23027, 5.41783, 7.07113", \
                            "2.87463, 2.83745, 2.9227, 3.37799, 4.22301, 5.4032, 7.04506" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                          index_2 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                          values  ( \
                            "2.37237, 2.41923, 2.63296, 3.0734, 3.85264, 4.97387, 6.46635", \
                            "2.30923, 2.35587, 2.56971, 3.00993, 3.78785, 4.91161, 6.40574", \
                            "2.06569, 2.12036, 2.33552, 2.77442, 3.55311, 4.67489, 6.17023", \
                            "2.01388, 2.07108, 2.29218, 2.7368, 3.49767, 4.63397, 6.12304", \
                            "2.01443, 2.07174, 2.29218, 2.73779, 3.5002, 4.63353, 6.12194", \
                            "2.02521, 2.07053, 2.29251, 2.73581, 3.4991, 4.63298, 6.12128", \
                            "2.02477, 2.07053, 2.29097, 2.73592, 3.49844, 4.63309, 6.12106" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                          index_2 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                          values  ( \
                            "7.27166, 7.29993, 7.21413, 6.81032, 5.91569, 4.74375, 3.1339", \
                            "7.33271, 7.36098, 7.26814, 6.87137, 5.97674, 4.78181, 3.19484", \
                            "7.55359, 7.5878, 7.50332, 7.09797, 6.21841, 5.05362, 3.36303", \
                            "7.97214, 8.00954, 7.93001, 7.51608, 6.61386, 5.43125, 3.80842", \
                            "8.6845, 8.71794, 8.63225, 8.2258, 7.33612, 6.13954, 4.55213", \
                            "9.65624, 9.69287, 9.59409, 9.19325, 8.29103, 7.10347, 5.45006", \
                            "10.8182, 10.8553, 10.7701, 10.3148, 9.46979, 8.28949, 6.64774" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                          index_2 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                          values  ( \
                            "8.11393, 8.06795, 7.84751, 7.40267, 6.63949, 5.50627, 4.01742", \
                            "8.17476, 8.129, 7.90845, 7.46372, 6.70197, 5.56633, 4.07858", \
                            "8.41313, 8.3556, 8.13373, 7.69032, 6.9278, 5.79403, 4.30518", \
                            "8.83124, 8.77404, 8.55294, 8.10832, 7.34745, 6.21126, 4.72219", \
                            "9.54393, 9.48662, 9.26618, 8.82057, 8.05816, 6.92483, 5.43642", \
                            "10.4961, 10.4508, 10.2288, 9.78538, 9.0222, 7.88832, 6.40002", \
                            "11.6677, 11.6226, 11.4015, 10.9569, 10.1944, 9.05971, 7.57174" \
                          )
                          }
                 }
          }
          pin(GWEN)   {
                  direction            : input;
                  capacitance          : 0.0436526;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                          index_2 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                          values  ( \
                            "3.78752, 3.84703, 4.08023, 4.49614, 5.17616, 6.09048, 7.22821", \
                            "3.72504, 3.78873, 4.00642, 4.45104, 5.11357, 6.00314, 7.17134", \
                            "3.50647, 3.56939, 3.78719, 4.21432, 4.89346, 5.808, 6.95167", \
                            "3.07813, 3.12752, 3.35709, 3.80391, 4.47942, 5.3559, 6.52355", \
                            "2.37644, 2.43518, 2.66893, 3.10222, 3.7785, 4.65443, 5.82263", \
                            "1.56343, 1.62228, 1.85559, 2.28899, 2.96527, 3.84098, 5.00896", \
                            "0.620334, 0.678887, 0.912109, 1.3442, 2.0064, 2.89586, 4.06527" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                          index_2 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                          values  ( \
                            "5.42025, 5.4824, 5.72627, 6.23491, 7.01646, 8.16882, 9.61378", \
                            "5.35689, 5.41981, 5.6683, 6.1677, 6.94628, 8.09336, 9.59464", \
                            "5.13733, 5.20047, 5.44445, 5.95298, 6.72705, 7.86368, 9.37541", \
                            "4.70932, 4.75651, 4.98333, 5.52497, 6.26813, 7.44634, 8.97545", \
                            "4.00719, 4.07121, 4.31937, 4.81877, 5.60516, 6.73365, 8.26364", \
                            "3.1955, 3.25798, 3.50625, 4.01049, 4.79182, 5.93153, 7.39145", \
                            "2.25236, 2.29658, 2.55816, 3.0668, 3.84087, 4.98795, 6.51761" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                          index_2 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                          values  ( \
                            "6.52795, 6.47053, 6.24591, 5.79381, 5.15174, 4.39879, 3.47446", \
                            "6.1567, 6.09862, 5.90029, 5.42751, 4.78038, 4.04778, 3.12433", \
                            "5.5429, 5.48867, 5.28792, 4.81272, 4.19089, 3.41033, 2.50459", \
                            "5.20751, 5.13975, 4.96672, 4.48283, 3.86155, 3.10563, 2.17316", \
                            "5.68238, 5.63486, 5.40859, 4.95418, 4.33279, 3.58116, 2.65826", \
                            "6.44721, 6.40079, 6.17485, 5.7277, 5.09905, 4.34797, 3.4144", \
                            "7.36054, 7.29256, 7.08653, 6.63311, 6.00743, 5.23105, 4.31816" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                          index_2 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                          values  ( \
                            "3.79423, 3.76376, 3.48095, 2.9623, 2.22453, 1.06066, 0", \
                            "3.42331, 3.39141, 3.13786, 2.58599, 1.86142, 0.699919, 0", \
                            "2.81512, 2.78212, 2.49986, 1.9811, 1.25012, 0.095744, 0", \
                            "2.48391, 2.44486, 2.22332, 1.64824, 0.938498, 0, 0", \
                            "2.959, 2.92567, 2.67212, 2.123, 1.38732, 0.235478, 0", \
                            "3.7235, 3.69182, 3.43783, 2.89135, 2.15358, 0.999922, 0", \
                            "4.62726, 4.59679, 4.31321, 3.795, 3.06416, 1.90322, 0.358853" \
                          )
                          }
                 }
          }
          bus(WEN)   {
                  bus_type             : Q_BUS;
                  direction            : input;
                  capacitance          : 0.00722787;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                          index_2 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                          values  ( \
                            "0, 0, 0, 0, 0, 0, 0.446644", \
                            "0, 0, 0, 0, 0, 0, 0.813582", \
                            "0, 0, 0, 0, 0, 0.517055, 1.43946", \
                            "0, 0, 0, 0, 0.075427, 0.826298, 1.76968", \
                            "0, 0, 0, 0, 0, 0.355146, 1.28444", \
                            "0, 0, 0, 0, 0, 0, 0.520135", \
                            "0, 0, 0, 0, 0, 0, 0" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                          index_2 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                          values  ( \
                            "0, 0.027225, 0.313688, 0.823339, 1.58224, 2.7335, 4.22422", \
                            "0.37092, 0.404481, 0.649242, 1.20703, 1.93259, 3.09606, 4.66081", \
                            "0.985798, 1.0195, 1.29257, 1.81687, 2.55343, 3.70766, 5.27725", \
                            "1.30774, 1.35366, 1.56596, 2.14951, 2.86715, 4.04195, 5.58481", \
                            "0.836561, 0.877239, 1.12385, 1.67079, 2.41549, 3.56719, 5.10686", \
                            "0.067309, 0.1001, 0.345048, 0.896588, 1.64307, 2.794, 4.26679", \
                            "0, 0, 0, 0, 0.738595, 1.88716, 3.43849" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                          index_2 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                          values  ( \
                            "6.55743, 6.51332, 6.26989, 5.83726, 5.18661, 4.41694, 3.52759", \
                            "6.18596, 6.14174, 5.90029, 5.46579, 4.81514, 4.04778, 3.15612", \
                            "5.57612, 5.53201, 5.28902, 4.85595, 4.2053, 3.43563, 2.54628", \
                            "5.2448, 5.20069, 4.96672, 4.52463, 3.87398, 3.10563, 2.21496", \
                            "5.71989, 5.67578, 5.43235, 4.99972, 4.34907, 3.58116, 2.69005", \
                            "6.48263, 6.43852, 6.19509, 5.76246, 5.11181, 4.34797, 3.45279", \
                            "7.3898, 7.34569, 7.10094, 6.66622, 6.01909, 5.24931, 4.36007" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                          index_2 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                          values  ( \
                            "3.80622, 3.7752, 3.49569, 2.98012, 2.24609, 1.07631, 0", \
                            "3.4353, 3.40527, 3.1493, 2.60469, 1.88067, 0.716287, 0", \
                            "2.82898, 2.80181, 2.51427, 1.99881, 1.26966, 0.114561, 0", \
                            "2.49788, 2.46378, 2.22783, 1.66771, 0.957396, 0, 0", \
                            "2.97297, 2.93953, 2.68279, 2.14115, 1.40899, 0.251461, 0", \
                            "3.73164, 3.70249, 3.44597, 2.90543, 2.17162, 1.01306, 0", \
                            "4.63914, 4.60944, 4.32718, 3.81271, 3.08352, 1.92005, 0.372372" \
                          )
                          }
                 }
          }
          bus(A)   {
                  bus_type             : A_BUS;
                  direction            : input;
                  capacitance          : 0.0420759;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                          index_2 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                          values  ( \
                            "3.54035, 3.49217, 3.58193, 4.04404, 4.88983, 6.11567, 7.70979", \
                            "3.46214, 3.43123, 3.5211, 3.9831, 4.82889, 6.05473, 7.64885", \
                            "3.23389, 3.20199, 3.29285, 3.75485, 4.60064, 5.82648, 7.37517", \
                            "3.47501, 3.45631, 3.54354, 4.0018, 4.82702, 6.05077, 7.61233", \
                            "2.97473, 2.96648, 3.03721, 3.50735, 4.3307, 5.57524, 7.18674", \
                            "2.22431, 2.21199, 2.26974, 2.7478, 3.5794, 4.81217, 6.43775", \
                            "1.319, 1.31491, 1.39678, 1.8414, 2.68796, 3.905, 5.52673" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                          index_2 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                          values  ( \
                            "2.76881, 2.82161, 3.03347, 3.54574, 4.31728, 5.42696, 6.94661", \
                            "3.15051, 3.21211, 3.41781, 3.90401, 4.7047, 5.81295, 7.33095", \
                            "3.773, 3.80787, 4.02094, 4.51319, 5.28781, 6.43401, 7.93804", \
                            "4.09332, 4.14381, 4.35765, 4.84847, 5.63684, 6.74861, 8.26892", \
                            "3.62681, 3.66663, 3.87838, 4.36502, 5.16274, 6.27, 7.77854", \
                            "2.84625, 2.90213, 3.11608, 3.62285, 4.40561, 5.50946, 7.03043", \
                            "1.96779, 2.00838, 2.21265, 2.7071, 3.49415, 4.60559, 6.12458" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                          index_2 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                          values  ( \
                            "2.46972, 2.49667, 2.40207, 1.92786, 1.08472, 0, 0", \
                            "2.54485, 2.57169, 2.47709, 2.00299, 1.15977, 0.018403, 0", \
                            "2.7632, 2.79191, 2.69533, 2.22123, 1.37797, 0.236642, 0", \
                            "3.14336, 3.1702, 3.0756, 2.6015, 1.75824, 0.616913, 0", \
                            "3.8786, 3.90533, 3.81084, 3.33674, 2.49359, 1.35223, 0", \
                            "4.81954, 4.84638, 4.75178, 4.27768, 3.43442, 2.29306, 0.871002", \
                            "5.96761, 5.99445, 5.89985, 5.42575, 4.5826, 3.44124, 2.01916" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                          index_2 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                          values  ( \
                            "3.0635, 3.01576, 2.78102, 2.31407, 1.66771, 0.83314, 0", \
                            "3.13852, 3.09089, 2.85604, 2.3892, 1.74284, 0.905861, 0", \
                            "3.35687, 3.30913, 3.07428, 2.60722, 1.96108, 1.1241, 0.1012", \
                            "3.73703, 3.6894, 3.45455, 2.9876, 2.34135, 1.50667, 0.481415", \
                            "4.47238, 4.42464, 4.1899, 3.72284, 3.07681, 2.24202, 1.2167", \
                            "5.41332, 5.36558, 5.13073, 4.66367, 4.01753, 3.18054, 2.15754", \
                            "6.56139, 6.51354, 6.27891, 5.81196, 5.16582, 4.33103, 3.30583" \
                          )
                          }
                 }
          }
          bus(D)   {
                  bus_type             : Q_BUS;
                  memory_write() {
                          address      : A;
                          clocked_on   : "CLK";
                  }
                  direction            : input;
                  capacitance          : 0.0170438;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                          index_2 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                          values  ( \
                            "3.41924, 3.47226, 3.69413, 4.13193, 4.64904, 5.30893, 6.00226", \
                            "3.80545, 3.85341, 4.07902, 4.51605, 5.02997, 5.68689, 6.40981", \
                            "4.42541, 4.45709, 4.6915, 5.10378, 5.6364, 6.29167, 7.01547", \
                            "4.73869, 4.80513, 5.04592, 5.45699, 5.95958, 6.62497, 7.3524", \
                            "4.24974, 4.31959, 4.53321, 4.97057, 5.46315, 6.14515, 6.84662", \
                            "3.50031, 3.56939, 3.77916, 4.21729, 4.73352, 5.40672, 6.11226", \
                            "2.5883, 2.67014, 2.86781, 3.30418, 3.80974, 4.47436, 5.19189" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                          index_2 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                          values  ( \
                            "0, 0, 0, 0, 0, 1.07408, 2.52857", \
                            "0, 0, 0, 0, 0.330143, 1.44639, 2.90939", \
                            "0, 0, 0, 0.156386, 0.937013, 2.05348, 3.51725", \
                            "0, 0, 0, 0.491458, 1.27667, 2.38854, 3.85143", \
                            "0, 0, 0, 0.010186, 0.794244, 1.90707, 3.37018", \
                            "0, 0, 0, 0, 0.037895, 1.14978, 2.61327", \
                            "0, 0, 0, 0, 0, 0.251182, 1.70621" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                          index_2 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                          values  ( \
                            "3.07406, 3.01356, 2.78674, 2.36324, 1.82985, 1.18103, 0.474958", \
                            "2.68554, 2.62702, 2.40009, 1.97648, 1.44342, 0.794519, 0.088451", \
                            "2.06745, 2.024, 1.79586, 1.37104, 0.837584, 0.188753, 0", \
                            "1.76231, 1.70247, 1.46135, 1.04178, 0.513293, 0, 0", \
                            "2.2319, 2.16997, 1.94843, 1.52691, 0.994026, 0.344432, 0", \
                            "3.00014, 2.94184, 2.71744, 2.29405, 1.76077, 1.11214, 0.405878", \
                            "3.89466, 3.84307, 3.62175, 3.20001, 2.6653, 2.01784, 1.30699" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                          index_2 ("0.02, 0.2104, 0.8786, 2.155, 4.143, 6.932, 10.6");
                          values  ( \
                            "5.76719, 5.74541, 5.55148, 5.03921, 4.257, 3.11179, 1.62393", \
                            "5.38076, 5.35887, 5.16494, 4.65267, 3.87057, 2.72525, 1.23742", \
                            "4.77543, 4.75332, 4.55928, 4.0469, 3.2648, 2.11948, 0.631664", \
                            "4.45203, 4.43003, 4.23566, 3.72339, 2.9414, 1.79608, 0.308256", \
                            "4.92668, 4.9049, 4.71053, 4.19826, 3.41616, 2.27084, 0.782969", \
                            "5.69745, 5.67633, 5.4824, 4.97013, 4.18803, 3.04271, 1.55485", \
                            "6.59857, 6.57668, 6.38286, 5.87048, 5.08838, 3.94295, 2.45531" \
                          )
                          }
                 }
        }
          cell_leakage_power : 2.083806e-05;
}
}
