/*
 * Copyright 2022 GlobalFoundries PDK Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 *      Single Port SRAM cell name : gf180mcu_fd_ip_sram__sram128x8m8wm1
 *      Technology                 : GF 180nm 5V Green
 *
 *      ---------
 *      Pin name:
 *      ---------
 *      Input Pins : CLK CEN GWEN WEN[7:0] A[6:0] D[7:0]
 *      Inout Pins:  VDD VSS
 *      Output Pins: Q[7:0]
 *
 *     Revision History: 1.0 (Initial Release: June 20, 2014)
 */

library(gf180mcu_fd_ip_sram__sram128x8m8wm1__ff_n40C_3v60) {
        delay_model             : table_lookup;
        revision                : 1.0;
        date                    : "June 20, 2014";
        comment                 : "GF 180nm 5V Green";
        voltage_unit            : "1V";
        time_unit               : "1ns";
        current_unit            : "1mA";
        leakage_power_unit      : "1mW";
        nom_process             : 1;
        nom_temperature         : -40;
        nom_voltage             : 3.6;
        capacitive_load_unit    (1,pf);
        pulling_resistance_unit : "1kohm";

        /* additional header data */
        default_fanout_load            : 1;
        default_inout_pin_cap          : 0.045;
        default_input_pin_cap          : 0.045;
        default_output_pin_cap         : 0;
        default_max_transition         : 1.7498;
        default_cell_leakage_power     : 0;

         /* default attributes */
         slew_derate_from_library      : 1.000;
         slew_lower_threshold_pct_fall : 10.000;
         slew_upper_threshold_pct_fall : 90.000;
         slew_lower_threshold_pct_rise : 10.000;
         slew_upper_threshold_pct_rise : 90.000;
         input_threshold_pct_fall      : 50.000;
         input_threshold_pct_rise      : 50.000;
         output_threshold_pct_fall     : 50.000;
         output_threshold_pct_rise     : 50.000;
         default_leakage_power_density : 0;

        /* k-factors */
        k_process_recovery_fall        : 1;
        k_process_recovery_rise        : 1;
        k_process_cell_fall            : 1;
        k_process_cell_leakage_power   : 0;
        k_process_cell_rise            : 1;
        k_process_fall_transition      : 1;
        k_process_hold_fall            : 1;
        k_process_hold_rise            : 1;
        k_process_internal_power       : 0;
        k_process_min_pulse_width_high : 1;
        k_process_min_pulse_width_low  : 1;
        k_process_setup_fall           : 1;
        k_process_setup_rise           : 1;
        k_process_wire_cap             : 0;
        k_process_wire_res             : 0;
        k_process_pin_cap              : 0;
        k_process_rise_transition      : 1;
        k_temp_cell_fall               : 0.000;
        k_temp_cell_rise               : 0.000;
        k_temp_hold_fall               : 0.000;
        k_temp_hold_rise               : 0.000;
        k_temp_min_pulse_width_high    : 0.000;
        k_temp_min_pulse_width_low     : 0.000;
        k_temp_min_period              : 0.000;
        k_temp_rise_propagation        : 0.000;
        k_temp_fall_propagation        : 0.000;
        k_temp_rise_transition         : 0.000;
        k_temp_fall_transition         : 0.000;
        k_temp_recovery_fall           : 0.000;
        k_temp_recovery_rise           : 0.000;
        k_temp_setup_fall              : 0.000;
        k_temp_setup_rise              : 0.000;
        k_volt_cell_fall               : 0.000;
        k_volt_cell_rise               : 0.000;
        k_volt_hold_fall               : 0.000;
        k_volt_hold_rise               : 0.000;
        k_volt_min_pulse_width_high    : 0.000;
        k_volt_min_pulse_width_low     : 0.000;
        k_volt_min_period              : 0.000;
        k_volt_recovery_fall           : 0.000;
        k_volt_recovery_rise           : 0.000;
        k_volt_setup_fall              : 0.000;
        k_volt_setup_rise              : 0.000;
        k_volt_rise_propagation        : 0.000;
        k_volt_fall_propagation        : 0.000;
        k_volt_rise_transition         : 0.000;
        k_volt_fall_transition         : 0.000;

         voltage_map (VDD, 3.6);
         voltage_map (VSS, 0.00);
         operating_conditions(ff_3p6v_m40C) {
                process       : 1;
                temperature   : -40;
                voltage       : 3.6;
                tree_type     : balanced_tree;
         }

         default_operating_conditions : ff_3p6v_m40C;
         wire_load("Estimate") {
                resistance    : 1.44e-05;
                capacitance   : 0.00018;
                area          : 1.7;
                slope         : 500;
                fanout_length (1,500);
         }
         power_lut_template(power_template) {
            variable_1 : input_transition_time;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(q_delay_template) {
            variable_1 : input_net_transition;
            variable_2 : total_output_net_capacitance;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
                 index_2 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(q_slew_template) {
            variable_1 : total_output_net_capacitance;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(constraint_template) {
            variable_1 : related_pin_transition;
            variable_2 : constrained_pin_transition;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
                 index_2 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }

         library_features(report_delay_calculation);

         type (A_BUS) {
                base_type : array;
                data_type : bit;
                bit_width : 7;
                bit_from  : 6;
                bit_to    : 0;
                downto    : true;
         }
         type (Q_BUS) {
                base_type : array;
                data_type : bit;
                bit_width : 8;
                bit_from  : 7;
                bit_to    : 0;
                downto    : true;
         }
 cell(gf180mcu_fd_ip_sram__sram128x8m8wm1) {
        area             : 116118.5168;
        dont_use         : TRUE;
        dont_touch       : TRUE;
        interface_timing : TRUE;
        memory() {
                type          : ram;
                address_width : 7;
                word_width    : 8;
        }

                 bus(Q)   {
                  bus_type             : Q_BUS;
                  direction            : output;
                  max_capacitance      : 1.0614;
                  memory_read() {
                        address        : A;
                  }
                  timing() {
                          related_pin  : "CLK";
                          timing_type  : rising_edge;
                          timing_sense : non_unate;
       		  when : "((!CEN) & (GWEN))";
        	  sdf_cond : "CEN== 1'b0 && GWEN== 1'b1";
                          cell_rise(q_delay_template) {
			  index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
			  index_2 ("0.0100, 0.0289, 0.0953, 0.2221, 0.4195, 0.6967, 1.0614");
                          values  ( \
                            "3.73812, 3.7542, 3.80772, 3.89724, 4.01832, 4.20672, 4.43712", \
                            "3.73728, 3.75456, 3.7992, 3.89004, 4.02468, 4.1988, 4.4364", \
                            "3.74604, 3.75876, 3.81144, 3.9012, 4.03104, 4.21188, 4.4406", \
                            "3.75156, 3.76452, 3.82272, 3.91104, 4.03836, 4.21956, 4.45812", \
                            "3.76608, 3.78144, 3.82896, 3.91872, 4.04748, 4.22604, 4.46496", \
                            "3.76356, 3.7806, 3.83136, 3.92172, 4.0458, 4.22796, 4.46316", \
                            "3.75456, 3.76692, 3.81756, 3.90204, 4.03488, 4.20996, 4.4502" \
                          )
                          }
                          rise_transition(q_slew_template) {
                          index_1 ("0.0100, 0.0289, 0.0953, 0.2221, 0.4195, 0.6967, 1.0614");
                          values  ( \
  	                     "0.134928, 0.158604, 0.243024, 0.398412, 0.640776, 1.00032, 1.46784" \
                          )

                          }
                          cell_fall(q_delay_template) {
                          index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          index_2 ("0.0100, 0.0289, 0.0953, 0.2221, 0.4195, 0.6967, 1.0614");
                          values  ( \
                            "3.873, 3.88872, 3.9408, 4.0158, 4.10676, 4.23528, 4.38528", \
                            "3.87456, 3.89064, 3.93084, 4.0104, 4.11084, 4.23072, 4.38648", \
                            "3.88416, 3.8934, 3.94464, 4.01976, 4.11852, 4.24572, 4.39068", \
                            "3.88764, 3.9012, 3.954, 4.02912, 4.12632, 4.24836, 4.40664", \
                            "3.89952, 3.91452, 3.95856, 4.0356, 4.13472, 4.25664, 4.41516", \
                            "3.89784, 3.91656, 3.96096, 4.04196, 4.13496, 4.25976, 4.4148", \
                            "3.88608, 3.89868, 3.95052, 4.0188, 4.12356, 4.24116, 4.40028" \
                          )
                          }
                          fall_transition(q_slew_template) {
                          index_1 ("0.0100, 0.0289, 0.0953, 0.2221, 0.4195, 0.6967, 1.0614");
                          values  ( \
                            "0.140664, 0.158532, 0.211416, 0.303504, 0.438876, 0.627216, 0.877452" \
                          )
                          }
                  }
          }
          pin(CLK)   {
                  direction            : input;
                  capacitance          : 0.280214;
                  clock                : true;
                  max_transition       : 1.7498;
                  min_pulse_width_high : 2.444295;
                  min_pulse_width_low  : 1.98567;
                  min_period           : 4.89609;

/* WRITE POWER */
             internal_power() {
              when : "!CEN & !GWEN & (!WEN[0] | !WEN[1] | !WEN[2] | !WEN[3] | !WEN[4] | !WEN[5] | !WEN[6] | !WEN[7])";
              rise_power(power_template) {
                index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                values  ("427.68, 427.68, 427.68, 427.68, 427.68, 427.68, 427.68");
              }
              fall_power(power_template) {
                index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                values  ("427.68, 427.68, 427.68, 427.68, 427.68, 427.68, 427.68");
              }
             }
/* DISABLED POWER */
             internal_power() {
              when : "CEN";
              rise_power(power_template) {
                index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                values  ("0.000104476, 0.000104476, 0.000104476, 0.000104476, 0.000104476, 0.000104476, 0.000104476");
              }
              fall_power(power_template) {
                index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                values  ("0.000104476, 0.000104476, 0.000104476, 0.000104476, 0.000104476, 0.000104476, 0.000104476");
              }
             }
/* READ POWER */
             internal_power() {
             when : "!CEN & GWEN";
             rise_power(power_template) {
                index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                values  ("386.604, 386.604, 386.604, 386.604, 386.604, 386.604, 386.604");
              }
              fall_power(power_template) {
                index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                values  ("386.604, 386.604, 386.604, 386.604, 386.604, 386.604, 386.604");
              }
             }
          }

          pg_pin(VDD) {
                  voltage_name     : VDD;
                  pg_type          : primary_power;
          }
          pg_pin(VSS) {
                  voltage_name     : VSS;
                  pg_type          : primary_ground;
          }
          pin(CEN)   {
                  direction            : input;
                  capacitance          : 0.0165403;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          index_2 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          values  ( \
                            "0.425909, 0.420574, 0.418616, 0.438504, 0.474529, 0.500929, 0.520223", \
                            "0.423445, 0.418737, 0.415514, 0.433983, 0.470008, 0.496408, 0.515702", \
                            "0.422785, 0.418407, 0.414887, 0.432751, 0.456742, 0.480194, 0.499488", \
                            "0.422664, 0.418286, 0.415063, 0.432399, 0.456632, 0.468479, 0.475387", \
                            "0.422873, 0.417934, 0.414711, 0.432047, 0.45628, 0.468127, 0.474914", \
                            "0.422268, 0.416779, 0.414018, 0.430914, 0.456236, 0.467808, 0.475794", \
                            "0.422455, 0.417758, 0.4147, 0.430265, 0.465168, 0.491568, 0.508607" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          index_2 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          values  ( \
                            "0.40535, 0.40601, 0.423797, 0.460108, 0.521928, 0.592746, 0.674168", \
                            "0.405141, 0.407781, 0.423577, 0.459888, 0.521697, 0.592526, 0.673948", \
                            "0.404789, 0.40744, 0.423247, 0.459536, 0.521367, 0.592185, 0.673618", \
                            "0.404679, 0.40733, 0.423137, 0.459426, 0.521257, 0.592075, 0.673508", \
                            "0.404327, 0.404976, 0.422774, 0.459074, 0.520894, 0.591723, 0.673145", \
                            "0.404283, 0.406945, 0.42273, 0.45903, 0.52085, 0.591668, 0.673101", \
                            "0.40414, 0.406791, 0.422598, 0.458898, 0.520718, 0.591536, 0.672969" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          index_2 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          values  ( \
                            "1.01879, 1.02318, 1.0264, 1.00906, 0.98483, 0.972983, 0.966196", \
                            "1.02281, 1.02752, 1.03074, 1.01341, 0.989175, 0.977328, 0.970541", \
                            "1.03709, 1.04147, 1.04498, 1.02713, 1.00312, 0.991276, 0.984489", \
                            "1.0762, 1.08057, 1.08381, 1.06647, 1.04224, 1.03039, 1.02361", \
                            "1.11557, 1.1205, 1.12374, 1.1064, 1.08217, 1.07032, 1.06354", \
                            "1.15818, 1.16367, 1.16643, 1.14953, 1.12421, 1.11265, 1.10481", \
                            "1.17146, 1.17616, 1.17922, 1.16366, 1.13782, 1.12597, 1.12237" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          index_2 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          values  ( \
                            "1.03678, 1.03612, 1.01834, 0.982025, 0.920216, 0.849387, 0.767965", \
                            "1.04112, 1.03848, 1.02268, 0.98637, 0.92455, 0.853732, 0.77231", \
                            "1.05508, 1.05243, 1.03663, 1.00033, 0.938509, 0.86768, 0.786258", \
                            "1.09419, 1.09154, 1.07573, 1.03943, 0.977614, 0.906796, 0.825363", \
                            "1.13411, 1.13346, 1.11566, 1.07936, 1.01754, 0.946726, 0.865293", \
                            "1.17616, 1.1735, 1.15772, 1.12142, 1.0596, 0.988779, 0.907346", \
                            "1.18978, 1.18713, 1.17132, 1.13502, 1.0732, 1.00239, 0.920953" \
                          )
                          }
                 }
          }
          pin(GWEN)   {
                  direction            : input;
                  capacitance          : 0.0474456;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          index_2 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          values  ( \
                            "0.556996, 0.562353, 0.57585, 0.611523, 0.663135, 0.711128, 0.755623", \
                            "0.553905, 0.559262, 0.572594, 0.608432, 0.660055, 0.708048, 0.752532", \
                            "0.538329, 0.543686, 0.557018, 0.592856, 0.644479, 0.692472, 0.736967", \
                            "0.505351, 0.510774, 0.52404, 0.559955, 0.61149, 0.659307, 0.703978", \
                            "0.47069, 0.47608, 0.489247, 0.525195, 0.576807, 0.624811, 0.669306", \
                            "0.434214, 0.439637, 0.452782, 0.488818, 0.540353, 0.588357, 0.632852", \
                            "0.414579, 0.419947, 0.433158, 0.469194, 0.52074, 0.568733, 0.613228" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          index_2 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          values  ( \
                            "0.599896, 0.60621, 0.624393, 0.676049, 0.751366, 0.855415, 0.968352", \
                            "0.596794, 0.602932, 0.621313, 0.671418, 0.748264, 0.851895, 0.965261", \
                            "0.580338, 0.587543, 0.605726, 0.655842, 0.732699, 0.836869, 0.949685", \
                            "0.548251, 0.554565, 0.573573, 0.624415, 0.699655, 0.803286, 0.916707", \
                            "0.513568, 0.519882, 0.538065, 0.589732, 0.665038, 0.769098, 0.882024", \
                            "0.477114, 0.483428, 0.501622, 0.553278, 0.628584, 0.732644, 0.84557", \
                            "0.457512, 0.463815, 0.481998, 0.533654, 0.60896, 0.713064, 0.825946" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          index_2 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          values  ( \
                            "0.753786, 0.749958, 0.734679, 0.703967, 0.682814, 0.661287, 0.652806", \
                            "0.760221, 0.756393, 0.741125, 0.710534, 0.689249, 0.667722, 0.659241", \
                            "0.766249, 0.762421, 0.747329, 0.716419, 0.695277, 0.673739, 0.665258", \
                            "0.77088, 0.767052, 0.751773, 0.721193, 0.699908, 0.67837, 0.669889", \
                            "0.78309, 0.779262, 0.763994, 0.733282, 0.712118, 0.690591, 0.68211", \
                            "0.784234, 0.780395, 0.764797, 0.734547, 0.713262, 0.691735, 0.683254", \
                            "0.770143, 0.766304, 0.751047, 0.720456, 0.699171, 0.677644, 0.669163" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          index_2 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          values  ( \
                            "0.440704, 0.435534, 0.414832, 0.36399, 0.29004, 0.193113, 0.081147", \
                            "0.447238, 0.44198, 0.421267, 0.371866, 0.296478, 0.199426, 0.0875402", \
                            "0.453486, 0.447975, 0.427471, 0.377839, 0.302687, 0.205523, 0.093621", \
                            "0.457842, 0.452606, 0.430331, 0.381249, 0.307076, 0.210091, 0.098241", \
                            "0.470052, 0.464849, 0.444147, 0.393261, 0.319286, 0.222294, 0.110452", \
                            "0.509971, 0.505109, 0.484231, 0.433565, 0.355157, 0.258729, 0.152392", \
                            "0.551199, 0.546436, 0.52547, 0.474804, 0.396407, 0.299884, 0.193637" \
                          )
                          }
                 }
          }
          bus(WEN)   {
                  bus_type             : Q_BUS;
                  direction            : input;
                  capacitance          : 0.00743749;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          index_2 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          values  ( \
                            "0, 0, 0, 0.024915, 0.049995, 0.068596, 0.07788", \
                            "0, 0, 0, 0.018986, 0.044517, 0.063052, 0.072402", \
                            "0, 0, 0, 0.012903, 0.038687, 0.057288, 0.066572", \
                            "0, 0, 0, 0.008019, 0.033539, 0.052294, 0.061424", \
                            "0, 0, 0, 0, 0.021549, 0.040084, 0.049434", \
                            "0, 0, 0, 0, 0.021054, 0.0396, 0.048939", \
                            "0, 0, 0, 0.00781, 0.033418, 0.05203, 0.061314" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          index_2 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          values  ( \
                            "0.287045, 0.292965, 0.313412, 0.363847, 0.436997, 0.534578, 0.647449", \
                            "0.281218, 0.287475, 0.307725, 0.357038, 0.432509, 0.529617, 0.641817", \
                            "0.275048, 0.281673, 0.301896, 0.351472, 0.426833, 0.523908, 0.635547", \
                            "0.270794, 0.276339, 0.298669, 0.347556, 0.421465, 0.51887, 0.631158", \
                            "0.258925, 0.264339, 0.284781, 0.335313, 0.408221, 0.505879, 0.618904", \
                            "0.258308, 0.263138, 0.284295, 0.335137, 0.408903, 0.506286, 0.617892", \
                            "0.270369, 0.276236, 0.296631, 0.347292, 0.420123, 0.516186, 0.630839" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          index_2 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          values  ( \
                            "0.753786, 0.749958, 0.734679, 0.70411, 0.682814, 0.661287, 0.652806", \
                            "0.760221, 0.756393, 0.741125, 0.710556, 0.689249, 0.667722, 0.659241", \
                            "0.766271, 0.762421, 0.747329, 0.716771, 0.695277, 0.673739, 0.665258", \
                            "0.77088, 0.767052, 0.751773, 0.721215, 0.699908, 0.67837, 0.669889", \
                            "0.78309, 0.779262, 0.763994, 0.733425, 0.712118, 0.690591, 0.68211", \
                            "0.784234, 0.780395, 0.764797, 0.73458, 0.713262, 0.691735, 0.683254", \
                            "0.770143, 0.766304, 0.751047, 0.720478, 0.699171, 0.677644, 0.669163" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          index_2 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          values  ( \
                            "0.440704, 0.435534, 0.415008, 0.36399, 0.29004, 0.193113, 0.081147", \
                            "0.447238, 0.44198, 0.421454, 0.371866, 0.296478, 0.199426, 0.0875402", \
                            "0.453508, 0.447975, 0.42768, 0.377839, 0.302687, 0.205523, 0.093621", \
                            "0.457842, 0.452606, 0.430331, 0.381249, 0.307109, 0.210091, 0.098241", \
                            "0.470052, 0.464849, 0.444334, 0.393261, 0.319319, 0.222294, 0.110452", \
                            "0.471196, 0.466004, 0.445478, 0.394438, 0.320463, 0.2231, 0.111597", \
                            "0.457182, 0.452056, 0.431387, 0.380347, 0.306405, 0.211156, 0.0974501" \
                          )
                          }
                 }
          }
          bus(A)   {
                  bus_type             : A_BUS;
                  direction            : input;
                  capacitance          : 0.0363804;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          index_2 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          values  ( \
                            "0.505219, 0.504834, 0.509487, 0.526999, 0.564773, 0.592251, 0.613217", \
                            "0.49973, 0.499818, 0.504614, 0.524645, 0.559438, 0.583396, 0.609114", \
                            "0.495803, 0.491502, 0.498168, 0.518903, 0.555082, 0.577379, 0.602734", \
                            "0.488367, 0.487421, 0.492327, 0.513854, 0.550033, 0.572572, 0.597905", \
                            "0.477851, 0.476828, 0.481173, 0.501611, 0.537526, 0.561066, 0.585563", \
                            "0.476344, 0.474375, 0.480799, 0.500676, 0.536877, 0.560252, 0.584804", \
                            "0.488697, 0.486233, 0.49148, 0.513238, 0.548933, 0.57211, 0.597388" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          index_2 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          values  ( \
                            "0.676247, 0.682781, 0.696289, 0.732226, 0.798039, 0.879681, 0.978021", \
                            "0.671022, 0.677556, 0.691196, 0.727012, 0.794442, 0.874632, 0.97339", \
                            "0.666743, 0.670681, 0.685333, 0.722667, 0.787732, 0.868505, 0.968088", \
                            "0.659879, 0.666534, 0.679866, 0.717255, 0.782661, 0.863302, 0.964623", \
                            "0.648065, 0.654907, 0.666743, 0.706387, 0.770913, 0.852368, 0.950323", \
                            "0.647636, 0.654533, 0.667491, 0.704803, 0.769109, 0.851587, 0.949872", \
                            "0.659417, 0.66627, 0.679514, 0.715726, 0.782045, 0.864017, 0.962247" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          index_2 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          values  ( \
                            "0.495374, 0.497266, 0.490534, 0.486332, 0.486937, 0.486057, 0.485408", \
                            "0.50028, 0.502095, 0.495451, 0.490941, 0.491832, 0.490985, 0.490303", \
                            "0.515438, 0.517253, 0.510609, 0.506088, 0.50699, 0.506132, 0.505461", \
                            "0.548603, 0.550363, 0.543719, 0.539198, 0.5401, 0.539242, 0.538571", \
                            "0.590436, 0.592262, 0.585607, 0.581108, 0.581988, 0.581119, 0.58047", \
                            "0.628144, 0.629948, 0.623304, 0.618805, 0.619696, 0.618827, 0.618167", \
                            "0.654588, 0.656403, 0.649748, 0.645249, 0.64614, 0.64526, 0.644611" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          index_2 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          values  ( \
                            "0.50842, 0.504812, 0.48972, 0.474925, 0.471449, 0.475211, 0.483032", \
                            "0.513304, 0.509696, 0.494637, 0.479831, 0.476355, 0.480106, 0.487729", \
                            "0.528473, 0.524854, 0.509784, 0.494989, 0.491513, 0.495264, 0.502887", \
                            "0.561572, 0.557964, 0.542894, 0.528099, 0.524612, 0.528132, 0.533764", \
                            "0.603471, 0.599852, 0.584793, 0.569987, 0.566511, 0.570273, 0.577885", \
                            "0.641179, 0.637549, 0.622479, 0.607695, 0.604208, 0.60797, 0.615791", \
                            "0.667546, 0.664191, 0.648934, 0.634128, 0.630652, 0.634414, 0.64185" \
                          )
                          }
                 }
          }
          bus(D)   {
                  bus_type             : Q_BUS;
                  memory_write() {
                          address      : A;
                          clocked_on   : "CLK";
                  }
                  direction            : input;
                  capacitance          : 0.0157189;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          index_2 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          values  ( \
                            "0.472362, 0.480293, 0.492305, 0.496837, 0.490985, 0.468853, 0.4224", \
                            "0.467115, 0.47454, 0.48653, 0.491667, 0.486695, 0.463562, 0.41745", \
                            "0.462638, 0.468534, 0.480612, 0.485166, 0.480337, 0.45771, 0.411752", \
                            "0.455587, 0.462825, 0.474001, 0.479897, 0.475167, 0.451836, 0.407407", \
                            "0.444268, 0.451286, 0.463397, 0.470657, 0.461769, 0.441265, 0.39446", \
                            "0.445093, 0.450989, 0.462627, 0.468523, 0.462528, 0.438977, 0.395021", \
                            "0.457237, 0.461824, 0.474859, 0.479677, 0.474287, 0.4499, 0.403755" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          index_2 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          values  ( \
                            "0.161201, 0.16288, 0.186429, 0.242055, 0.326304, 0.435809, 0.569041", \
                            "0.157275, 0.157623, 0.180499, 0.23621, 0.321057, 0.430672, 0.563981", \
                            "0.148348, 0.151522, 0.174389, 0.230254, 0.314974, 0.42493, 0.5577", \
                            "0.143929, 0.146184, 0.1689, 0.22561, 0.309617, 0.419452, 0.552871", \
                            "0.132369, 0.134643, 0.15737, 0.213774, 0.298091, 0.408155, 0.540815", \
                            "0.131547, 0.13379, 0.156517, 0.212985, 0.297238, 0.407154, 0.539957", \
                            "0.144168, 0.145826, 0.168555, 0.225024, 0.309276, 0.41888, 0.552167" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          index_2 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          values  ( \
                            "0.422389, 0.418407, 0.405031, 0.397397, 0.40513, 0.428087, 0.472736", \
                            "0.428142, 0.424281, 0.412082, 0.403601, 0.410894, 0.433851, 0.478489", \
                            "0.43593, 0.43076, 0.419419, 0.410487, 0.417758, 0.440715, 0.485364", \
                            "0.440792, 0.435985, 0.423841, 0.416086, 0.422708, 0.445676, 0.490314", \
                            "0.453618, 0.447964, 0.435182, 0.427658, 0.434819, 0.457776, 0.502425", \
                            "0.451825, 0.448833, 0.437382, 0.429484, 0.435842, 0.458799, 0.503448", \
                            "0.440154, 0.436876, 0.424644, 0.416075, 0.423588, 0.448371, 0.491689" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          index_2 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          values  ( \
                            "0.59994, 0.597982, 0.575905, 0.519486, 0.434368, 0.325446, 0.193019", \
                            "0.605704, 0.603746, 0.581658, 0.52525, 0.440121, 0.331199, 0.198779", \
                            "0.613162, 0.61061, 0.588522, 0.532114, 0.446985, 0.337975, 0.205655", \
                            "0.618112, 0.61556, 0.593483, 0.537075, 0.451946, 0.343002, 0.210609", \
                            "0.63019, 0.627671, 0.605583, 0.549175, 0.464046, 0.355124, 0.222712", \
                            "0.631257, 0.628694, 0.606617, 0.550253, 0.46508, 0.356158, 0.22374", \
                            "0.618167, 0.616209, 0.594121, 0.537713, 0.452584, 0.343673, 0.211244" \
                          )
                          }
                 }
        }
          cell_leakage_power : 0.0001044756;
}
}
