/*
 * Copyright 2022 GlobalFoundries PDK Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 *      Single Port SRAM cell name : gf180mcu_fd_ip_sram__sram64x8m8wm1
 *      Technology                 : GF 180nm 5V Green
 *
 *      ---------
 *      Pin name:
 *      ---------
 *      Input Pins : CLK CEN GWEN WEN[7:0] A[5:0] D[7:0]
 *      Inout Pins:  VDD VSS
 *      Output Pins: Q[7:0]
 *
 *     Revision History: 1.0 (Initial Release: June 20, 2014)
 */

library(gf180mcu_fd_ip_sram__sram64x8m8wm1__ss_n40C_3v00) {
        delay_model             : table_lookup;
        revision                : 1.0;
        date                    : "June 20, 2014";
        comment                 : "GF 180nm 5V Green";
        voltage_unit            : "1V";
        time_unit               : "1ns";
        current_unit            : "1mA";
        leakage_power_unit      : "1mW";
        nom_process             : 1;
        nom_temperature         : -40;
        nom_voltage             : 3.0;
        capacitive_load_unit    (1,pf);
        pulling_resistance_unit : "1kohm";

        /* additional header data */
        default_fanout_load            : 1;
        default_inout_pin_cap          : 0.045;
        default_input_pin_cap          : 0.045;
        default_output_pin_cap         : 0;
        default_max_transition         : 6.4830;
        default_cell_leakage_power     : 0;

         /* default attributes */
         slew_derate_from_library      : 1.000;
         slew_lower_threshold_pct_fall : 10.000;
         slew_upper_threshold_pct_fall : 90.000;
         slew_lower_threshold_pct_rise : 10.000;
         slew_upper_threshold_pct_rise : 90.000;
         input_threshold_pct_fall      : 50.000;
         input_threshold_pct_rise      : 50.000;
         output_threshold_pct_fall     : 50.000;
         output_threshold_pct_rise     : 50.000;
         default_leakage_power_density : 0;

        /* k-factors */
        k_process_recovery_fall        : 1;
        k_process_recovery_rise        : 1;
        k_process_cell_fall            : 1;
        k_process_cell_leakage_power   : 0;
        k_process_cell_rise            : 1;
        k_process_fall_transition      : 1;
        k_process_hold_fall            : 1;
        k_process_hold_rise            : 1;
        k_process_internal_power       : 0;
        k_process_min_pulse_width_high : 1;
        k_process_min_pulse_width_low  : 1;
        k_process_setup_fall           : 1;
        k_process_setup_rise           : 1;
        k_process_wire_cap             : 0;
        k_process_wire_res             : 0;
        k_process_pin_cap              : 0;
        k_process_rise_transition      : 1;
        k_temp_cell_fall               : 0.000;
        k_temp_cell_rise               : 0.000;
        k_temp_hold_fall               : 0.000;
        k_temp_hold_rise               : 0.000;
        k_temp_min_pulse_width_high    : 0.000;
        k_temp_min_pulse_width_low     : 0.000;
        k_temp_min_period              : 0.000;
        k_temp_rise_propagation        : 0.000;
        k_temp_fall_propagation        : 0.000;
        k_temp_rise_transition         : 0.000;
        k_temp_fall_transition         : 0.000;
        k_temp_recovery_fall           : 0.000;
        k_temp_recovery_rise           : 0.000;
        k_temp_setup_fall              : 0.000;
        k_temp_setup_rise              : 0.000;
        k_volt_cell_fall               : 0.000;
        k_volt_cell_rise               : 0.000;
        k_volt_hold_fall               : 0.000;
        k_volt_hold_rise               : 0.000;
        k_volt_min_pulse_width_high    : 0.000;
        k_volt_min_pulse_width_low     : 0.000;
        k_volt_min_period              : 0.000;
        k_volt_recovery_fall           : 0.000;
        k_volt_recovery_rise           : 0.000;
        k_volt_setup_fall              : 0.000;
        k_volt_setup_rise              : 0.000;
        k_volt_rise_propagation        : 0.000;
        k_volt_fall_propagation        : 0.000;
        k_volt_rise_transition         : 0.000;
        k_volt_fall_transition         : 0.000;

         voltage_map (VDD, 3.0);
         voltage_map (VSS, 0.00);
         operating_conditions(ss_3p0v_m40C) {
                process       : 1;
                temperature   : -40;
                voltage       : 3.0;
                tree_type     : balanced_tree;
         }

         default_operating_conditions : ss_3p0v_m40C;
         wire_load("Estimate") {
                resistance    : 1.44e-05;
                capacitance   : 0.00018;
                area          : 1.7;
                slope         : 500;
                fanout_length (1,500);
         }
         power_lut_template(power_template) {
            variable_1 : input_transition_time;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(q_delay_template) {
            variable_1 : input_net_transition;
            variable_2 : total_output_net_capacitance;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
                 index_2 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(q_slew_template) {
            variable_1 : total_output_net_capacitance;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(constraint_template) {
            variable_1 : related_pin_transition;
            variable_2 : constrained_pin_transition;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
                 index_2 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }

         library_features(report_delay_calculation);

         type (A_BUS) {
                base_type : array;
                data_type : bit;
                bit_width : 6;
                bit_from  : 5;
                bit_to    : 0;
                downto    : true;
         }
         type (Q_BUS) {
                base_type : array;
                data_type : bit;
                bit_width : 8;
                bit_from  : 7;
                bit_to    : 0;
                downto    : true;
         }
 cell(gf180mcu_fd_ip_sram__sram64x8m8wm1) {
        area             : 100571.5568;
        dont_use         : TRUE;
        dont_touch       : TRUE;
        interface_timing : TRUE;
        memory() {
                type          : ram;
                address_width : 6;
                word_width    : 8;
        }

                 bus(Q)   {
                  bus_type             : Q_BUS;
                  direction            : output;
                  max_capacitance      : 1.1369;
                  memory_read() {
                        address        : A;
                  }
                  timing() {
                          related_pin  : "CLK";
                          timing_type  : rising_edge;
                          timing_sense : non_unate;
       		  when : "((!CEN) & (GWEN))";
        	  sdf_cond : "CEN== 1'b0 && GWEN== 1'b1";
                          cell_rise(q_delay_template) {
			  index_1 ("0.0200, 0.1363, 0.5445, 1.3241, 2.5384, 4.2420, 6.4830");
			  index_2 ("0.0100, 0.0303, 0.1014, 0.2373, 0.4490, 0.7460, 1.1369");
                          values  ( \
                            "8.19192, 8.24244, 8.35752, 8.54736, 8.8368, 9.21576, 9.71268", \
                            "8.214, 8.26464, 8.37732, 8.57964, 8.86392, 9.24576, 9.73608", \
                            "8.27484, 8.31252, 8.4084, 8.60772, 8.88708, 9.2772, 9.7782", \
                            "8.34828, 8.40444, 8.52636, 8.70468, 8.97588, 9.36468, 9.8682", \
                            "8.4456, 8.48616, 8.6034, 8.79456, 9.0774, 9.46308, 9.96372", \
                            "8.472, 8.51124, 8.63688, 8.82864, 9.10236, 9.50712, 10.00248", \
                            "8.47716, 8.49708, 8.6316, 8.82672, 9.11196, 9.48156, 9.99492" \
                          )
                          }
                          rise_transition(q_slew_template) {
                          index_1 ("0.0100, 0.0303, 0.1014, 0.2373, 0.4490, 0.7460, 1.1369");
                          values  ( \
  	                     "0.272244, 0.319476, 0.4878, 0.804408, 1.31472, 2.05596, 3.01488" \
                          )

                          }
                          cell_fall(q_delay_template) {
                          index_1 ("0.0200, 0.1363, 0.5445, 1.3241, 2.5384, 4.2420, 6.4830");
                          index_2 ("0.0100, 0.0303, 0.1014, 0.2373, 0.4490, 0.7460, 1.1369");
                          values  ( \
                            "8.55144, 8.5914, 8.70144, 8.86596, 9.07152, 9.32064, 9.64116", \
                            "8.56176, 8.61396, 8.71524, 8.88996, 9.105, 9.35244, 9.65508", \
                            "8.62872, 8.67624, 8.75808, 8.92332, 9.12384, 9.38448, 9.70356", \
                            "8.703, 8.75148, 8.86416, 9.01968, 9.22008, 9.47172, 9.79812", \
                            "8.79276, 8.84016, 8.93988, 9.10812, 9.31248, 9.56244, 9.8802", \
                            "8.82744, 8.85636, 8.97468, 9.14124, 9.34092, 9.6048, 9.927", \
                            "8.82912, 8.8548, 8.97984, 9.13932, 9.35172, 9.5886, 9.91488" \
                          )
                          }
                          fall_transition(q_slew_template) {
                          index_1 ("0.0100, 0.0303, 0.1014, 0.2373, 0.4490, 0.7460, 1.1369");
                          values  ( \
                            "0.258276, 0.307716, 0.416544, 0.609336, 0.881592, 1.27116, 1.76784" \
                          )
                          }
                  }
          }
          pin(CLK)   {
                  direction            : input;
                  capacitance          : 0.309097;
                  clock                : true;
                  max_transition       : 6.4830;
                  min_pulse_width_high : 5.27664;
                  min_pulse_width_low  : 4.023945;
                  min_period           : 11.08806;

/* WRITE POWER */
             internal_power() {
              when : "!CEN & !GWEN & (!WEN[0] | !WEN[1] | !WEN[2] | !WEN[3] | !WEN[4] | !WEN[5] | !WEN[6] | !WEN[7])";
              rise_power(power_template) {
                index_1 ("0.0200, 0.1363, 0.5445, 1.3241, 2.5384, 4.2420, 6.4830");
                values  ("273.045, 273.045, 273.045, 273.045, 273.045, 273.045, 273.045");
              }
              fall_power(power_template) {
                index_1 ("0.0200, 0.1363, 0.5445, 1.3241, 2.5384, 4.2420, 6.4830");
                values  ("273.045, 273.045, 273.045, 273.045, 273.045, 273.045, 273.045");
              }
             }
/* DISABLED POWER */
             internal_power() {
              when : "CEN";
              rise_power(power_template) {
                index_1 ("0.0200, 0.1363, 0.5445, 1.3241, 2.5384, 4.2420, 6.4830");
                values  ("4.6761e-05, 4.6761e-05, 4.6761e-05, 4.6761e-05, 4.6761e-05, 4.6761e-05, 4.6761e-05");
              }
              fall_power(power_template) {
                index_1 ("0.0200, 0.1363, 0.5445, 1.3241, 2.5384, 4.2420, 6.4830");
                values  ("4.6761e-05, 4.6761e-05, 4.6761e-05, 4.6761e-05, 4.6761e-05, 4.6761e-05, 4.6761e-05");
              }
             }
/* READ POWER */
             internal_power() {
             when : "!CEN & GWEN";
             rise_power(power_template) {
                index_1 ("0.0200, 0.1363, 0.5445, 1.3241, 2.5384, 4.2420, 6.4830");
                values  ("249.09, 249.09, 249.09, 249.09, 249.09, 249.09, 249.09");
              }
              fall_power(power_template) {
                index_1 ("0.0200, 0.1363, 0.5445, 1.3241, 2.5384, 4.2420, 6.4830");
                values  ("249.09, 249.09, 249.09, 249.09, 249.09, 249.09, 249.09");
              }
             }
          }

          pg_pin(VDD) {
                  voltage_name     : VDD;
                  pg_type          : primary_power;
          }
          pg_pin(VSS) {
                  voltage_name     : VSS;
                  pg_type          : primary_ground;
          }
          pin(CEN)   {
                  direction            : input;
                  capacitance          : 0.0189577;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.1363, 0.5445, 1.3241, 2.5384, 4.2420, 6.4830");
                          index_2 ("0.0200, 0.1363, 0.5445, 1.3241, 2.5384, 4.2420, 6.4830");
                          values  ( \
                            "0.807818, 0.794464, 0.830709, 1.01055, 1.24419, 1.41548, 1.54803", \
                            "0.785202, 0.770792, 0.807444, 0.987701, 1.22157, 1.40162, 1.53923", \
                            "0.754094, 0.731731, 0.774928, 0.942799, 1.1329, 1.31681, 1.4366", \
                            "0.752796, 0.73315, 0.772849, 0.941457, 1.1151, 1.23137, 1.33672", \
                            "0.753027, 0.737561, 0.77121, 0.940918, 1.11536, 1.23067, 1.2825", \
                            "0.751982, 0.736637, 0.772453, 0.933449, 1.11514, 1.22819, 1.28224", \
                            "0.745173, 0.735262, 0.771221, 0.939576, 1.11436, 1.21503, 1.29266" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.1363, 0.5445, 1.3241, 2.5384, 4.2420, 6.4830");
                          index_2 ("0.0200, 0.1363, 0.5445, 1.3241, 2.5384, 4.2420, 6.4830");
                          values  ( \
                            "0.657393, 0.672925, 0.76538, 0.960058, 1.22437, 1.51272, 1.80334", \
                            "0.653818, 0.66891, 0.761354, 0.948981, 1.22044, 1.49963, 1.79399", \
                            "0.64944, 0.664752, 0.757196, 0.950774, 1.21618, 1.49545, 1.78079", \
                            "0.647845, 0.663388, 0.755854, 0.948123, 1.21483, 1.49413, 1.7886", \
                            "0.647383, 0.666358, 0.755293, 0.947562, 1.21433, 1.49358, 1.78805", \
                            "0.6468, 0.662607, 0.75504, 0.949696, 1.21405, 1.49336, 1.78783", \
                            "0.646305, 0.661826, 0.754259, 0.941864, 1.21327, 1.49259, 1.78695" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.1363, 0.5445, 1.3241, 2.5384, 4.2420, 6.4830");
                          index_2 ("0.0200, 0.1363, 0.5445, 1.3241, 2.5384, 4.2420, 6.4830");
                          values  ( \
                            "1.89717, 1.91015, 1.87649, 1.70863, 1.53494, 1.43319, 1.36697", \
                            "1.92478, 1.93963, 1.90465, 1.73646, 1.56255, 1.44892, 1.38435", \
                            "2.02004, 2.04237, 1.99925, 1.83139, 1.65748, 1.54121, 1.48973", \
                            "2.1857, 2.20528, 2.16557, 1.99694, 1.82336, 1.70709, 1.6445", \
                            "2.37314, 2.38854, 2.35488, 2.18515, 2.0108, 1.89541, 1.8436", \
                            "2.51306, 2.52835, 2.4926, 2.33156, 2.14995, 2.03687, 1.98286", \
                            "2.6147, 2.6246, 2.58863, 2.42022, 2.24543, 2.14478, 2.07834" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.1363, 0.5445, 1.3241, 2.5384, 4.2420, 6.4830");
                          index_2 ("0.0200, 0.1363, 0.5445, 1.3241, 2.5384, 4.2420, 6.4830");
                          values  ( \
                            "2.00222, 1.9866, 1.8942, 1.6995, 1.43517, 1.15577, 0.861465", \
                            "2.02928, 2.01421, 1.92181, 1.73415, 1.46267, 1.18352, 0.889141", \
                            "2.12465, 2.10936, 2.01696, 1.82336, 1.55793, 1.27864, 0.993366", \
                            "2.29064, 2.27502, 2.18262, 1.99034, 1.72359, 1.4443, 1.14987", \
                            "2.47874, 2.45971, 2.37083, 2.17855, 1.9118, 1.63251, 1.33815", \
                            "2.61822, 2.60249, 2.50998, 2.31539, 2.05095, 1.77166, 1.47719", \
                            "2.71348, 2.69797, 2.60557, 2.41791, 2.14654, 1.86725, 1.57289" \
                          )
                          }
                 }
          }
          pin(GWEN)   {
                  direction            : input;
                  capacitance          : 0.0488608;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.1363, 0.5445, 1.3241, 2.5384, 4.2420, 6.4830");
                          index_2 ("0.0200, 0.1363, 0.5445, 1.3241, 2.5384, 4.2420, 6.4830");
                          values  ( \
                            "1.02972, 1.0492, 1.13915, 1.30394, 1.50821, 1.68608, 1.83359", \
                            "1.01017, 1.0298, 1.11966, 1.2845, 1.48874, 1.66023, 1.804", \
                            "0.923076, 0.942381, 1.03241, 1.19727, 1.40151, 1.57124, 1.72689", \
                            "0.76769, 0.787017, 0.877008, 1.04193, 1.24614, 1.41592, 1.56057", \
                            "0.63107, 0.64471, 0.741598, 0.906202, 1.11072, 1.27818, 1.43605", \
                            "0.529606, 0.549131, 0.638979, 0.804276, 1.00804, 1.18273, 1.33342", \
                            "0.460284, 0.479996, 0.5698, 0.734712, 0.938971, 1.11681, 1.26432" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.1363, 0.5445, 1.3241, 2.5384, 4.2420, 6.4830");
                          index_2 ("0.0200, 0.1363, 0.5445, 1.3241, 2.5384, 4.2420, 6.4830");
                          values  ( \
                            "1.16025, 1.18827, 1.29712, 1.51734, 1.83238, 2.19285, 2.58489", \
                            "1.141, 1.16643, 1.27892, 1.49787, 1.8139, 2.17679, 2.56531", \
                            "1.06021, 1.08246, 1.19068, 1.41097, 1.72568, 2.08626, 2.47984", \
                            "0.898227, 0.924506, 1.03397, 1.25028, 1.57036, 1.93083, 2.32276", \
                            "0.762828, 0.788975, 0.900955, 1.11609, 1.43506, 1.79883, 2.18966", \
                            "0.661023, 0.685751, 0.798292, 1.01728, 1.33221, 1.69279, 2.08505", \
                            "0.591745, 0.616429, 0.729157, 0.948079, 1.26309, 1.6236, 2.01564" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.1363, 0.5445, 1.3241, 2.5384, 4.2420, 6.4830");
                          index_2 ("0.0200, 0.1363, 0.5445, 1.3241, 2.5384, 4.2420, 6.4830");
                          values  ( \
                            "1.42604, 1.40679, 1.31758, 1.18997, 1.07824, 0.994829, 0.960102", \
                            "1.44441, 1.42527, 1.33595, 1.2083, 1.09657, 1.01936, 0.975458", \
                            "1.48984, 1.47059, 1.38138, 1.25375, 1.14201, 1.0728, 1.02474", \
                            "1.56629, 1.54704, 1.45794, 1.33023, 1.21856, 1.14931, 1.09694", \
                            "1.63999, 1.62888, 1.53164, 1.40404, 1.29336, 1.22298, 1.17855", \
                            "1.66034, 1.6412, 1.5521, 1.42439, 1.31373, 1.23686, 1.20043", \
                            "1.65594, 1.63669, 1.54759, 1.41988, 1.30812, 1.22475, 1.19084" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.1363, 0.5445, 1.3241, 2.5384, 4.2420, 6.4830");
                          index_2 ("0.0200, 0.1363, 0.5445, 1.3241, 2.5384, 4.2420, 6.4830");
                          values  ( \
                            "0.692098, 0.669658, 0.553289, 0.338228, 0.045265, 0, 0", \
                            "0.71324, 0.686653, 0.571703, 0.356653, 0.061732, 0, 0", \
                            "0.755117, 0.726825, 0.615956, 0.408023, 0.109092, 0, 0", \
                            "0.832436, 0.806278, 0.693902, 0.48686, 0.185481, 0, 0", \
                            "1.03463, 1.01066, 0.894839, 0.678469, 0.370513, 0.043263, 0", \
                            "1.2111, 1.18771, 1.07234, 0.853534, 0.547976, 0.222751, 0", \
                            "1.35157, 1.32858, 1.21283, 0.993982, 0.688479, 0.363264, 0.005918" \
                          )
                          }
                 }
          }
          bus(WEN)   {
                  bus_type             : Q_BUS;
                  direction            : input;
                  capacitance          : 0.00791289;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.1363, 0.5445, 1.3241, 2.5384, 4.2420, 6.4830");
                          index_2 ("0.0200, 0.1363, 0.5445, 1.3241, 2.5384, 4.2420, 6.4830");
                          values  ( \
                            "0, 0, 0, 0.005423, 0.116811, 0.199744, 0.240404", \
                            "0, 0, 0, 0, 0.0983653, 0.176869, 0.222171", \
                            "0, 0, 0, 0, 0.054835, 0.130984, 0.178364", \
                            "0, 0, 0, 0, 0, 0.055759, 0.103144", \
                            "0, 0, 0, 0, 0, 0, 0.027797", \
                            "0, 0, 0, 0, 0, 0, 0.010274", \
                            "0, 0, 0, 0, 0, 0, 0.012265" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.1363, 0.5445, 1.3241, 2.5384, 4.2420, 6.4830");
                          index_2 ("0.0200, 0.1363, 0.5445, 1.3241, 2.5384, 4.2420, 6.4830");
                          values  ( \
                            "0.466356, 0.486519, 0.605495, 0.817388, 1.11392, 1.45662, 1.85108", \
                            "0.445731, 0.469018, 0.587268, 0.797313, 1.09693, 1.44111, 1.83458", \
                            "0.404767, 0.430892, 0.544588, 0.751718, 1.0519, 1.39469, 1.79212", \
                            "0.328658, 0.353716, 0.467907, 0.675114, 0.976745, 1.31945, 1.71611", \
                            "0.257089, 0.277665, 0.39281, 0.60247, 0.898414, 1.24879, 1.639", \
                            "0.236526, 0.261802, 0.374528, 0.586674, 0.88396, 1.22652, 1.62338", \
                            "0.238687, 0.261748, 0.377652, 0.588555, 0.885742, 1.22856, 1.62426" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.1363, 0.5445, 1.3241, 2.5384, 4.2420, 6.4830");
                          index_2 ("0.0200, 0.1363, 0.5445, 1.3241, 2.5384, 4.2420, 6.4830");
                          values  ( \
                            "1.42692, 1.41185, 1.32121, 1.18997, 1.08087, 1.00396, 0.960102", \
                            "1.44529, 1.43022, 1.33958, 1.2083, 1.09924, 1.02233, 0.975458", \
                            "1.48984, 1.47422, 1.38358, 1.25375, 1.14322, 1.0728, 1.02474", \
                            "1.56728, 1.55221, 1.46157, 1.33023, 1.22122, 1.14931, 1.09698", \
                            "1.64109, 1.62888, 1.53538, 1.40404, 1.29492, 1.22298, 1.17855", \
                            "1.66034, 1.64516, 1.55463, 1.42439, 1.31417, 1.23729, 1.20043", \
                            "1.65693, 1.64186, 1.55122, 1.41988, 1.31087, 1.23393, 1.19084" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.1363, 0.5445, 1.3241, 2.5384, 4.2420, 6.4830");
                          index_2 ("0.0200, 0.1363, 0.5445, 1.3241, 2.5384, 4.2420, 6.4830");
                          values  ( \
                            "0.694397, 0.672628, 0.555346, 0.340923, 0.050655, 0, 0", \
                            "0.714406, 0.686653, 0.57387, 0.359777, 0.064075, 0, 0", \
                            "0.755117, 0.727551, 0.616627, 0.408958, 0.113076, 0, 0", \
                            "0.834746, 0.80498, 0.695189, 0.48686, 0.190899, 0, 0", \
                            "0.903936, 0.879681, 0.769659, 0.559086, 0.259935, 0, 0", \
                            "0.926541, 0.901505, 0.788788, 0.574255, 0.283877, 0, 0", \
                            "0.923153, 0.899778, 0.785444, 0.571032, 0.280627, 0, 0" \
                          )
                          }
                 }
          }
          bus(A)   {
                  bus_type             : A_BUS;
                  direction            : input;
                  capacitance          : 0.0379571;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.1363, 0.5445, 1.3241, 2.5384, 4.2420, 6.4830");
                          index_2 ("0.0200, 0.1363, 0.5445, 1.3241, 2.5384, 4.2420, 6.4830");
                          values  ( \
                            "1.04394, 1.03768, 1.07745, 1.25127, 1.48764, 1.68432, 1.83139", \
                            "1.03036, 1.01962, 1.06311, 1.23621, 1.47345, 1.66155, 1.8128", \
                            "0.97757, 0.975436, 1.01354, 1.19013, 1.42406, 1.62239, 1.76924", \
                            "0.90992, 0.899855, 0.938828, 1.11431, 1.35069, 1.54704, 1.69389", \
                            "0.827585, 0.821282, 0.864127, 1.03717, 1.27072, 1.47169, 1.61865", \
                            "0.813758, 0.803473, 0.845482, 1.02283, 1.2605, 1.45145, 1.59709", \
                            "0.816761, 0.811745, 0.847561, 1.02295, 1.2556, 1.45772, 1.60314" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.1363, 0.5445, 1.3241, 2.5384, 4.2420, 6.4830");
                          index_2 ("0.0200, 0.1363, 0.5445, 1.3241, 2.5384, 4.2420, 6.4830");
                          values  ( \
                            "1.25059, 1.26626, 1.35971, 1.56508, 1.84514, 2.14027, 2.46796", \
                            "1.23422, 1.2471, 1.34497, 1.54748, 1.82743, 2.12278, 2.44948", \
                            "1.19024, 1.20369, 1.29833, 1.50249, 1.7809, 2.07823, 2.40416", \
                            "1.11158, 1.1269, 1.22488, 1.42725, 1.70588, 2.00651, 2.32397", \
                            "1.03434, 1.04983, 1.14896, 1.34937, 1.63669, 1.92885, 2.25082", \
                            "1.02014, 1.03332, 1.13116, 1.33606, 1.61733, 1.91301, 2.23311", \
                            "1.01979, 1.03506, 1.13186, 1.33595, 1.61766, 1.91345, 2.23487" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.1363, 0.5445, 1.3241, 2.5384, 4.2420, 6.4830");
                          index_2 ("0.0200, 0.1363, 0.5445, 1.3241, 2.5384, 4.2420, 6.4830");
                          values  ( \
                            "0.843469, 0.855503, 0.80212, 0.715682, 0.647207, 0.563255, 0.490006", \
                            "0.870133, 0.882464, 0.82907, 0.742599, 0.674157, 0.582945, 0.517506", \
                            "0.954745, 0.966856, 0.913473, 0.827024, 0.758549, 0.674597, 0.601348", \
                            "1.11512, 1.12716, 1.07378, 0.987327, 0.918852, 0.834834, 0.762201", \
                            "1.31879, 1.33089, 1.2777, 1.19124, 1.12288, 1.03892, 0.96558", \
                            "1.48214, 1.49435, 1.441, 1.35465, 1.2862, 1.20218, 1.12893", \
                            "1.6038, 1.61579, 1.56244, 1.47598, 1.40756, 1.32352, 1.25032" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.1363, 0.5445, 1.3241, 2.5384, 4.2420, 6.4830");
                          index_2 ("0.0200, 0.1363, 0.5445, 1.3241, 2.5384, 4.2420, 6.4830");
                          values  ( \
                            "0.913341, 0.896423, 0.808841, 0.718454, 0.637186, 0.567732, 0.523127", \
                            "0.94028, 0.920854, 0.835791, 0.745371, 0.664136, 0.594682, 0.550088", \
                            "1.02468, 1.00525, 0.920194, 0.829785, 0.748539, 0.679085, 0.634469", \
                            "1.185, 1.16555, 1.0805, 0.990066, 0.908842, 0.839377, 0.794783", \
                            "1.38864, 1.3695, 1.28443, 1.194, 1.11276, 1.04331, 0.998701", \
                            "1.55232, 1.53285, 1.44782, 1.35729, 1.27612, 1.20666, 1.16206", \
                            "1.67332, 1.65418, 1.56915, 1.47873, 1.39755, 1.32803, 1.28344" \
                          )
                          }
                 }
          }
          bus(D)   {
                  bus_type             : Q_BUS;
                  memory_write() {
                          address      : A;
                          clocked_on   : "CLK";
                  }
                  direction            : input;
                  capacitance          : 0.0176212;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.1363, 0.5445, 1.3241, 2.5384, 4.2420, 6.4830");
                          index_2 ("0.0200, 0.1363, 0.5445, 1.3241, 2.5384, 4.2420, 6.4830");
                          values  ( \
                            "1.02446, 1.04343, 1.11911, 1.16524, 1.18207, 1.13642, 1.0484", \
                            "1.00375, 1.02785, 1.09194, 1.15256, 1.16117, 1.11976, 1.02588", \
                            "0.962181, 0.97691, 1.05328, 1.11201, 1.12263, 1.07181, 0.988537", \
                            "0.888481, 0.908611, 0.978164, 1.02936, 1.04273, 0.992772, 0.918698", \
                            "0.810898, 0.833129, 0.901945, 0.956197, 0.971586, 0.920788, 0.84183", \
                            "0.790339, 0.815738, 0.883168, 0.938608, 0.957495, 0.906323, 0.822404", \
                            "0.798886, 0.813439, 0.886611, 0.941446, 0.955856, 0.909843, 0.819269" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.1363, 0.5445, 1.3241, 2.5384, 4.2420, 6.4830");
                          index_2 ("0.0200, 0.1363, 0.5445, 1.3241, 2.5384, 4.2420, 6.4830");
                          values  ( \
                            "0.181959, 0.192034, 0.301043, 0.517363, 0.799216, 1.12741, 1.51217", \
                            "0.16355, 0.174132, 0.283215, 0.499521, 0.781385, 1.10958, 1.49534", \
                            "0.121794, 0.129472, 0.238575, 0.451352, 0.736736, 1.06494, 1.44969", \
                            "0.045331, 0.055044, 0.164144, 0.380457, 0.662167, 0.990517, 1.37489", \
                            "0, 0, 0.087076, 0.303384, 0.584045, 0.913451, 1.29822", \
                            "0, 0, 0.068123, 0.286699, 0.568568, 0.89661, 1.28149", \
                            "0, 0, 0.071093, 0.287409, 0.569261, 0.897457, 1.28219" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.1363, 0.5445, 1.3241, 2.5384, 4.2420, 6.4830");
                          index_2 ("0.0200, 0.1363, 0.5445, 1.3241, 2.5384, 4.2420, 6.4830");
                          values  ( \
                            "0.596409, 0.574189, 0.497992, 0.447337, 0.434049, 0.47388, 0.557194", \
                            "0.617826, 0.596332, 0.523842, 0.465586, 0.456335, 0.495308, 0.579964", \
                            "0.658691, 0.6369, 0.560802, 0.507265, 0.497541, 0.539627, 0.617001", \
                            "0.733337, 0.714736, 0.638319, 0.588401, 0.575113, 0.617606, 0.695255", \
                            "0.810458, 0.790152, 0.716045, 0.664763, 0.648648, 0.693495, 0.774235", \
                            "0.827222, 0.807961, 0.733183, 0.681791, 0.664521, 0.706497, 0.790746", \
                            "0.823625, 0.807884, 0.732039, 0.678876, 0.664521, 0.709478, 0.793254" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.1363, 0.5445, 1.3241, 2.5384, 4.2420, 6.4830");
                          index_2 ("0.0200, 0.1363, 0.5445, 1.3241, 2.5384, 4.2420, 6.4830");
                          values  ( \
                            "1.07077, 1.06319, 0.956791, 0.738122, 0.458601, 0.131718, 0", \
                            "1.09368, 1.08539, 0.978978, 0.760331, 0.480788, 0.153911, 0", \
                            "1.13435, 1.12674, 1.02033, 0.801669, 0.522137, 0.195252, 0", \
                            "1.21186, 1.20427, 1.09784, 0.879186, 0.599665, 0.272777, 0", \
                            "1.28791, 1.28025, 1.17383, 0.955152, 0.675818, 0.348755, 0", \
                            "1.3057, 1.29734, 1.19096, 0.972279, 0.692769, 0.365882, 0", \
                            "1.30482, 1.29624, 1.18982, 0.971168, 0.691636, 0.364749, 0" \
                          )
                          }
                 }
        }
          cell_leakage_power : 4.6761e-05;
}
}
