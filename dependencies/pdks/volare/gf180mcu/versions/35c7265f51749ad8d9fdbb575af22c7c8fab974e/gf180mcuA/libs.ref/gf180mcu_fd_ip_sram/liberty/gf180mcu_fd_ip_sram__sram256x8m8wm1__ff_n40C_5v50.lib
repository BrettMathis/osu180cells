/*
 * Copyright 2022 GlobalFoundries PDK Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 *      Single Port SRAM cell name : gf180mcu_fd_ip_sram__sram256x8m8wm1
 *      Technology                 : GF 180nm 5V Green
 *
 *      ---------
 *      Pin name:
 *      ---------
 *      Input Pins : CLK CEN GWEN WEN[7:0] A[7:0] D[7:0]
 *      Inout Pins:  VDD VSS
 *      Output Pins: Q[7:0]
 *
 *     Revision History: 1.0 (Initial Release: June 20, 2014)
 */

library(gf180mcu_fd_ip_sram__sram256x8m8wm1__ff_n40C_5v50) {
        delay_model             : table_lookup;
        revision                : 1.0;
        date                    : "June 20, 2014";
        comment                 : "GF 180nm 5V Green";
        voltage_unit            : "1V";
        time_unit               : "1ns";
        current_unit            : "1mA";
        leakage_power_unit      : "1mW";
        nom_process             : 1;
        nom_temperature         : -40;
        nom_voltage             : 5.5;
        capacitive_load_unit    (1,pf);
        pulling_resistance_unit : "1kohm";

        /* additional header data */
        default_fanout_load            : 1;
        default_inout_pin_cap          : 0.045;
        default_input_pin_cap          : 0.045;
        default_output_pin_cap         : 0;
        default_max_transition         : 1.087;
        default_cell_leakage_power     : 0;

         /* default attributes */
         slew_derate_from_library      : 1.000;
         slew_lower_threshold_pct_fall : 10.000;
         slew_upper_threshold_pct_fall : 90.000;
         slew_lower_threshold_pct_rise : 10.000;
         slew_upper_threshold_pct_rise : 90.000;
         input_threshold_pct_fall      : 50.000;
         input_threshold_pct_rise      : 50.000;
         output_threshold_pct_fall     : 50.000;
         output_threshold_pct_rise     : 50.000;
         default_leakage_power_density : 0;

        /* k-factors */
        k_process_recovery_fall        : 1;
        k_process_recovery_rise        : 1;
        k_process_cell_fall            : 1;
        k_process_cell_leakage_power   : 0;
        k_process_cell_rise            : 1;
        k_process_fall_transition      : 1;
        k_process_hold_fall            : 1;
        k_process_hold_rise            : 1;
        k_process_internal_power       : 0;
        k_process_min_pulse_width_high : 1;
        k_process_min_pulse_width_low  : 1;
        k_process_setup_fall           : 1;
        k_process_setup_rise           : 1;
        k_process_wire_cap             : 0;
        k_process_wire_res             : 0;
        k_process_pin_cap              : 0;
        k_process_rise_transition      : 1;
        k_temp_cell_fall               : 0.000;
        k_temp_cell_rise               : 0.000;
        k_temp_hold_fall               : 0.000;
        k_temp_hold_rise               : 0.000;
        k_temp_min_pulse_width_high    : 0.000;
        k_temp_min_pulse_width_low     : 0.000;
        k_temp_min_period              : 0.000;
        k_temp_rise_propagation        : 0.000;
        k_temp_fall_propagation        : 0.000;
        k_temp_rise_transition         : 0.000;
        k_temp_fall_transition         : 0.000;
        k_temp_recovery_fall           : 0.000;
        k_temp_recovery_rise           : 0.000;
        k_temp_setup_fall              : 0.000;
        k_temp_setup_rise              : 0.000;
        k_volt_cell_fall               : 0.000;
        k_volt_cell_rise               : 0.000;
        k_volt_hold_fall               : 0.000;
        k_volt_hold_rise               : 0.000;
        k_volt_min_pulse_width_high    : 0.000;
        k_volt_min_pulse_width_low     : 0.000;
        k_volt_min_period              : 0.000;
        k_volt_recovery_fall           : 0.000;
        k_volt_recovery_rise           : 0.000;
        k_volt_setup_fall              : 0.000;
        k_volt_setup_rise              : 0.000;
        k_volt_rise_propagation        : 0.000;
        k_volt_fall_propagation        : 0.000;
        k_volt_rise_transition         : 0.000;
        k_volt_fall_transition         : 0.000;

         voltage_map (VDD, 5.5);
         voltage_map (VSS, 0.00);
         operating_conditions(ff_5p5v_m40C) {
                process       : 1;
                temperature   : -40;
                voltage       : 5.5;
                tree_type     : balanced_tree;
         }

         default_operating_conditions : ff_5p5v_m40C;
         wire_load("Estimate") {
                resistance    : 1.44e-05;
                capacitance   : 0.00018;
                area          : 1.7;
                slope         : 500;
                fanout_length (1,500);
         }
         power_lut_template(power_template) {
            variable_1 : input_transition_time;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(q_delay_template) {
            variable_1 : input_net_transition;
            variable_2 : total_output_net_capacitance;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
                 index_2 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(q_slew_template) {
            variable_1 : total_output_net_capacitance;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(constraint_template) {
            variable_1 : related_pin_transition;
            variable_2 : constrained_pin_transition;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
                 index_2 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }

         library_features(report_delay_calculation);

         type (A_BUS) {
                base_type : array;
                data_type : bit;
                bit_width : 8;
                bit_from  : 7;
                bit_to    : 0;
                downto    : true;
         }
         type (Q_BUS) {
                base_type : array;
                data_type : bit;
                bit_width : 8;
                bit_from  : 7;
                bit_to    : 0;
                downto    : true;
         }
 cell(gf180mcu_fd_ip_sram__sram256x8m8wm1) {
        area             : 147212.4368;
        dont_use         : TRUE;
        dont_touch       : TRUE;
        interface_timing : TRUE;
        memory() {
                type          : ram;
                address_width : 8;
                word_width    : 8;
        }

                 bus(Q)   {
                  bus_type             : Q_BUS;
                  direction            : output;
                  max_capacitance      : 1.165;
                  memory_read() {
                        address        : A;
                  }
                  timing() {
                          related_pin  : "CLK";
                          timing_type  : rising_edge;
                          timing_sense : non_unate;
       		  when : "((!CEN) & (GWEN))";
        	  sdf_cond : "CEN== 1'b0 && GWEN== 1'b1";
                          cell_rise(q_delay_template) {
			  index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
			  index_2 ("0.01, 0.03078, 0.1037, 0.243, 0.4599, 0.7643, 1.165");
                          values  ( \
                            "2.93436, 2.94828, 2.98932, 3.05736, 3.16188, 3.30732, 3.50076", \
                            "2.93544, 2.9472, 2.9862, 3.05604, 3.16032, 3.30648, 3.50076", \
                            "2.93628, 2.9496, 2.98968, 3.06048, 3.16308, 3.3066, 3.50256", \
                            "2.93712, 2.94888, 2.98944, 3.05988, 3.16392, 3.30912, 3.5028", \
                            "2.94216, 2.95764, 2.99448, 3.0678, 3.17052, 3.31416, 3.51012", \
                            "2.946, 2.95704, 2.997, 3.06816, 3.17292, 3.31824, 3.51168", \
                            "2.93928, 2.95164, 2.9952, 3.06084, 3.16512, 3.312, 3.50436" \
                          )
                          }
                          rise_transition(q_slew_template) {
                          index_1 ("0.01, 0.03078, 0.1037, 0.243, 0.4599, 0.7643, 1.165");
                          values  ( \
  	                     "0.111416, 0.126984, 0.193128, 0.317796, 0.521292, 0.817896, 1.20924" \
                          )

                          }
                          cell_fall(q_delay_template) {
                          index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          index_2 ("0.01, 0.03078, 0.1037, 0.243, 0.4599, 0.7643, 1.165");
                          values  ( \
                            "3.02496, 3.03684, 3.07956, 3.14184, 3.22452, 3.33192, 3.47196", \
                            "3.02412, 3.03696, 3.07848, 3.14088, 3.22452, 3.33264, 3.47124", \
                            "3.0258, 3.03924, 3.08088, 3.14508, 3.22512, 3.3306, 3.47232", \
                            "3.02652, 3.03948, 3.08208, 3.14436, 3.228, 3.33516, 3.47424", \
                            "3.03072, 3.04752, 3.0852, 3.15168, 3.23376, 3.33948, 3.48108", \
                            "3.0372, 3.04692, 3.08952, 3.15204, 3.23604, 3.3432, 3.48384", \
                            "3.02904, 3.04224, 3.08616, 3.14592, 3.22836, 3.33684, 3.47544" \
                          )
                          }
                          fall_transition(q_slew_template) {
                          index_1 ("0.01, 0.03078, 0.1037, 0.243, 0.4599, 0.7643, 1.165");
                          values  ( \
                            "0.113677, 0.128556, 0.175332, 0.254064, 0.374208, 0.547656, 0.776376" \
                          )
                          }
                  }
          }
          pin(CLK)   {
                  direction            : input;
                  capacitance          : 0.283835;
                  clock                : true;
                  max_transition       : 1.087;
                  min_pulse_width_high : 1.4546445;
                  min_pulse_width_low  : 1.58625;
                  min_period           : 3.95697;

/* WRITE POWER */
             internal_power() {
              when : "!CEN & !GWEN & (!WEN[0] | !WEN[1] | !WEN[2] | !WEN[3] | !WEN[4] | !WEN[5] | !WEN[6] | !WEN[7])";
              rise_power(power_template) {
                index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                values  ("1140.56, 1140.56, 1140.56, 1140.56, 1140.56, 1140.56, 1140.56");
              }
              fall_power(power_template) {
                index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                values  ("1140.56, 1140.56, 1140.56, 1140.56, 1140.56, 1140.56, 1140.56");
              }
             }
/* DISABLED POWER */
             internal_power() {
              when : "CEN";
              rise_power(power_template) {
                index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                values  ("0.000414013, 0.000414013, 0.000414013, 0.000414013, 0.000414013, 0.000414013, 0.000414013");
              }
              fall_power(power_template) {
                index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                values  ("0.000414013, 0.000414013, 0.000414013, 0.000414013, 0.000414013, 0.000414013, 0.000414013");
              }
             }
/* READ POWER */
             internal_power() {
             when : "!CEN & GWEN";
             rise_power(power_template) {
                index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                values  ("1025.26, 1025.26, 1025.26, 1025.26, 1025.26, 1025.26, 1025.26");
              }
              fall_power(power_template) {
                index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                values  ("1025.26, 1025.26, 1025.26, 1025.26, 1025.26, 1025.26, 1025.26");
              }
             }
          }

          pg_pin(VDD) {
                  voltage_name     : VDD;
                  pg_type          : primary_power;
          }
          pg_pin(VSS) {
                  voltage_name     : VSS;
                  pg_type          : primary_ground;
          }
          pin(CEN)   {
                  direction            : input;
                  capacitance          : 0.0171345;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          index_2 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          values  ( \
                            "0.336941, 0.333674, 0.328526, 0.333597, 0.34595, 0.363429, 0.388212", \
                            "0.336754, 0.333355, 0.328097, 0.333014, 0.345763, 0.362934, 0.386639", \
                            "0.336545, 0.333168, 0.327998, 0.331474, 0.34551, 0.361878, 0.378818", \
                            "0.336292, 0.333014, 0.327833, 0.332541, 0.34529, 0.361669, 0.376904", \
                            "0.336424, 0.33231, 0.327569, 0.332706, 0.345059, 0.362241, 0.37873", \
                            "0.335984, 0.332717, 0.327492, 0.332244, 0.344993, 0.362164, 0.378653", \
                            "0.336281, 0.332783, 0.327371, 0.332321, 0.34705, 0.371283, 0.395725" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          index_2 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          values  ( \
                            "0.322751, 0.323026, 0.329692, 0.344223, 0.375364, 0.4158, 0.461175", \
                            "0.322498, 0.322839, 0.329505, 0.344036, 0.374869, 0.415778, 0.460988", \
                            "0.322311, 0.322608, 0.329274, 0.343794, 0.375397, 0.414513, 0.460735", \
                            "0.321948, 0.322278, 0.329032, 0.343563, 0.373197, 0.414293, 0.460515", \
                            "0.321838, 0.322234, 0.328042, 0.343343, 0.373967, 0.414887, 0.460284", \
                            "0.321728, 0.322025, 0.328746, 0.343365, 0.373747, 0.413996, 0.460218", \
                            "0.321717, 0.322036, 0.328823, 0.343332, 0.373846, 0.414062, 0.460328" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          index_2 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          values  ( \
                            "0.765523, 0.76879, 0.773938, 0.768867, 0.756514, 0.739332, 0.725252", \
                            "0.767899, 0.771309, 0.776556, 0.77165, 0.758901, 0.741719, 0.727287", \
                            "0.774191, 0.777568, 0.782738, 0.779262, 0.765226, 0.748858, 0.733964", \
                            "0.790515, 0.793782, 0.798963, 0.794255, 0.781506, 0.765138, 0.749903", \
                            "0.814275, 0.818378, 0.823119, 0.817982, 0.805629, 0.788447, 0.771958", \
                            "0.834603, 0.83787, 0.843095, 0.838343, 0.825594, 0.808423, 0.791934", \
                            "0.838827, 0.842325, 0.847737, 0.842798, 0.830049, 0.812867, 0.798545" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          index_2 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          values  ( \
                            "0.779713, 0.779438, 0.772761, 0.75823, 0.727089, 0.686664, 0.641289", \
                            "0.782155, 0.781814, 0.775148, 0.760617, 0.729795, 0.688875, 0.643676", \
                            "0.788425, 0.788117, 0.781462, 0.766942, 0.735339, 0.696223, 0.650001", \
                            "0.804848, 0.804518, 0.797764, 0.783233, 0.753599, 0.712503, 0.666281", \
                            "0.82885, 0.828454, 0.822646, 0.807345, 0.776721, 0.735801, 0.690404", \
                            "0.848848, 0.848562, 0.841841, 0.827222, 0.796829, 0.756591, 0.710369", \
                            "0.853391, 0.853072, 0.846296, 0.831776, 0.801262, 0.761046, 0.71478" \
                          )
                          }
                 }
          }
          pin(GWEN)   {
                  direction            : input;
                  capacitance          : 0.0485806;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          index_2 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          values  ( \
                            "0.432872, 0.435875, 0.443443, 0.461296, 0.493779, 0.530849, 0.567666", \
                            "0.432091, 0.435028, 0.442607, 0.460427, 0.49291, 0.530079, 0.567413", \
                            "0.423929, 0.426602, 0.434181, 0.452485, 0.484528, 0.521213, 0.558415", \
                            "0.406637, 0.409618, 0.417197, 0.434995, 0.467456, 0.504625, 0.542278", \
                            "0.378983, 0.38192, 0.38962, 0.407407, 0.439791, 0.47696, 0.514184", \
                            "0.35002, 0.353023, 0.360569, 0.378389, 0.410487, 0.447997, 0.485221", \
                            "0.328383, 0.330528, 0.338063, 0.355861, 0.387992, 0.425073, 0.462781" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          index_2 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          values  ( \
                            "0.454135, 0.456401, 0.468391, 0.496166, 0.541816, 0.601953, 0.676478", \
                            "0.452826, 0.455565, 0.46761, 0.495374, 0.540771, 0.60181, 0.675708", \
                            "0.444884, 0.447282, 0.45914, 0.486904, 0.533368, 0.592251, 0.667216", \
                            "0.428065, 0.430254, 0.442156, 0.469942, 0.513898, 0.576609, 0.650243", \
                            "0.400257, 0.402534, 0.414183, 0.442288, 0.488301, 0.548438, 0.622589", \
                            "0.371294, 0.373417, 0.385539, 0.413303, 0.457897, 0.518661, 0.593637", \
                            "0.348249, 0.351087, 0.363033, 0.390797, 0.435369, 0.496155, 0.570064" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          index_2 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          values  ( \
                            "0.605055, 0.603394, 0.59752, 0.580734, 0.561187, 0.545545, 0.53251", \
                            "0.605088, 0.604373, 0.597608, 0.580998, 0.561451, 0.54582, 0.533082", \
                            "0.605803, 0.604373, 0.598477, 0.581328, 0.562144, 0.546502, 0.533456", \
                            "0.60863, 0.6072, 0.601326, 0.58454, 0.564982, 0.549362, 0.536624", \
                            "0.611512, 0.610786, 0.604197, 0.587411, 0.567864, 0.552233, 0.539627", \
                            "0.613019, 0.611578, 0.60588, 0.588918, 0.569448, 0.55374, 0.541134", \
                            "0.606463, 0.605154, 0.599236, 0.582494, 0.562936, 0.547316, 0.53471" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          index_2 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          values  ( \
                            "0.374418, 0.371943, 0.358215, 0.331111, 0.286055, 0.229888, 0.157688", \
                            "0.374, 0.372174, 0.35849, 0.331441, 0.286671, 0.228324, 0.157926", \
                            "0.375364, 0.372592, 0.359194, 0.331859, 0.287386, 0.230921, 0.158591", \
                            "0.378114, 0.375375, 0.362021, 0.334895, 0.292457, 0.23149, 0.161481", \
                            "0.381084, 0.377949, 0.365464, 0.337777, 0.292699, 0.235948, 0.164372", \
                            "0.401588, 0.398992, 0.387332, 0.359271, 0.312939, 0.254044, 0.184288", \
                            "0.438284, 0.435787, 0.424028, 0.395945, 0.349701, 0.290741, 0.221794" \
                          )
                          }
                 }
          }
          bus(WEN)   {
                  bus_type             : Q_BUS;
                  direction            : input;
                  capacitance          : 0.00761544;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          index_2 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          values  ( \
                            "0, 0, 0, 0.006776, 0.026675, 0.041888, 0.05445", \
                            "0, 0, 0, 0.006314, 0.026213, 0.041426, 0.053229", \
                            "0, 0, 0, 0.005335, 0.025234, 0.040447, 0.05302", \
                            "0, 0, 0, 0.002992, 0.022891, 0.038104, 0.049907", \
                            "0, 0, 0, 0, 0.019426, 0.034639, 0.046343", \
                            "0, 0, 0, 0, 0.017732, 0.032945, 0.044605", \
                            "0, 0, 0, 0.00451, 0.024398, 0.039611, 0.051326" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          index_2 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          values  ( \
                            "0.213179, 0.215747, 0.229844, 0.257432, 0.301609, 0.358226, 0.431409", \
                            "0.213459, 0.215045, 0.229262, 0.256645, 0.300718, 0.359458, 0.430628", \
                            "0.21208, 0.214957, 0.228248, 0.255802, 0.300025, 0.35651, 0.430199", \
                            "0.209894, 0.213047, 0.225685, 0.252633, 0.295966, 0.356301, 0.427625", \
                            "0.205941, 0.209398, 0.222075, 0.249796, 0.294569, 0.351505, 0.424248", \
                            "0.204566, 0.207634, 0.221036, 0.247775, 0.291852, 0.349041, 0.42262", \
                            "0.21175, 0.214454, 0.227214, 0.254666, 0.298496, 0.355542, 0.426888" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          index_2 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          values  ( \
                            "0.605055, 0.603394, 0.59752, 0.580734, 0.561187, 0.545545, 0.53251", \
                            "0.605088, 0.604373, 0.597608, 0.580998, 0.561451, 0.54582, 0.533082", \
                            "0.605803, 0.604373, 0.598477, 0.581328, 0.562144, 0.546502, 0.533456", \
                            "0.60863, 0.6072, 0.601326, 0.58454, 0.564982, 0.549362, 0.536624", \
                            "0.611512, 0.610786, 0.604197, 0.587411, 0.567864, 0.552233, 0.539627", \
                            "0.613019, 0.611578, 0.60588, 0.588918, 0.569448, 0.55374, 0.541134", \
                            "0.606463, 0.605154, 0.599236, 0.582494, 0.562936, 0.547316, 0.53471" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          index_2 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          values  ( \
                            "0.374418, 0.371943, 0.35926, 0.331111, 0.286121, 0.22989, 0.157688", \
                            "0.374, 0.372174, 0.359524, 0.331441, 0.286671, 0.228324, 0.157926", \
                            "0.375364, 0.372592, 0.360239, 0.331859, 0.287386, 0.230921, 0.158591", \
                            "0.378114, 0.375375, 0.363055, 0.334895, 0.292589, 0.23149, 0.161481", \
                            "0.381084, 0.377949, 0.366377, 0.337777, 0.292699, 0.235948, 0.164372", \
                            "0.38258, 0.379522, 0.367466, 0.339295, 0.295262, 0.23815, 0.165774", \
                            "0.375496, 0.373032, 0.361075, 0.332706, 0.289014, 0.231723, 0.161406" \
                          )
                          }
                 }
          }
          bus(A)   {
                  bus_type             : A_BUS;
                  direction            : input;
                  capacitance          : 0.0373455;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          index_2 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          values  ( \
                            "0.373802, 0.371888, 0.36652, 0.373362, 0.393756, 0.410828, 0.441496", \
                            "0.372757, 0.370073, 0.366839, 0.37301, 0.393261, 0.408925, 0.442189", \
                            "0.372273, 0.369985, 0.365915, 0.371437, 0.392986, 0.409057, 0.442398", \
                            "0.370007, 0.367719, 0.362164, 0.369556, 0.389697, 0.406791, 0.43934", \
                            "0.366025, 0.363946, 0.359722, 0.366366, 0.386045, 0.402072, 0.435578", \
                            "0.363748, 0.36256, 0.357456, 0.364639, 0.382954, 0.401104, 0.434027", \
                            "0.3696, 0.368654, 0.363682, 0.371085, 0.390225, 0.407781, 0.440451" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          index_2 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          values  ( \
                            "0.499862, 0.500335, 0.506638, 0.522324, 0.557315, 0.604648, 0.664873", \
                            "0.498201, 0.499598, 0.505791, 0.522731, 0.557007, 0.603933, 0.665203", \
                            "0.497211, 0.498476, 0.505274, 0.521631, 0.556149, 0.603031, 0.663344", \
                            "0.495308, 0.496122, 0.50292, 0.518683, 0.55396, 0.60093, 0.66132", \
                            "0.492173, 0.492426, 0.500126, 0.515581, 0.549978, 0.595815, 0.657008", \
                            "0.489313, 0.491271, 0.497101, 0.514096, 0.54857, 0.595243, 0.656216", \
                            "0.497233, 0.497596, 0.503756, 0.519981, 0.554202, 0.602184, 0.662706" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          index_2 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          values  ( \
                            "0.402644, 0.40557, 0.408012, 0.410256, 0.411774, 0.412027, 0.411609", \
                            "0.40491, 0.407869, 0.410278, 0.412533, 0.414051, 0.414293, 0.413886", \
                            "0.411411, 0.414326, 0.416768, 0.419012, 0.42053, 0.420783, 0.420365", \
                            "0.428164, 0.431101, 0.433532, 0.435776, 0.437294, 0.437547, 0.43714", \
                            "0.444906, 0.447865, 0.450274, 0.452529, 0.454047, 0.454289, 0.453882", \
                            "0.4785, 0.481338, 0.483758, 0.486002, 0.48752, 0.487773, 0.487355", \
                            "0.5038, 0.506484, 0.508915, 0.511148, 0.512666, 0.512919, 0.512501" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          index_2 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          values  ( \
                            "0.407264, 0.406208, 0.399135, 0.394669, 0.398354, 0.405174, 0.410311", \
                            "0.409563, 0.408463, 0.401401, 0.396946, 0.400631, 0.407451, 0.412577", \
                            "0.416196, 0.414964, 0.407891, 0.403425, 0.407121, 0.41393, 0.419067", \
                            "0.43296, 0.431728, 0.424655, 0.420189, 0.423885, 0.430694, 0.435831", \
                            "0.44957, 0.448481, 0.441408, 0.436942, 0.440627, 0.447447, 0.452573", \
                            "0.483043, 0.481965, 0.474881, 0.470415, 0.474111, 0.48092, 0.486057", \
                            "0.508178, 0.507089, 0.500027, 0.495561, 0.499246, 0.506066, 0.511203" \
                          )
                          }
                 }
          }
          bus(D)   {
                  bus_type             : Q_BUS;
                  memory_write() {
                          address      : A;
                          clocked_on   : "CLK";
                  }
                  direction            : input;
                  capacitance          : 0.0156967;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          index_2 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          values  ( \
                            "0.354398, 0.354574, 0.361119, 0.365937, 0.359095, 0.341913, 0.311531", \
                            "0.35376, 0.354827, 0.361647, 0.364683, 0.358336, 0.342188, 0.311179", \
                            "0.352451, 0.353793, 0.360261, 0.363869, 0.357819, 0.341121, 0.309815", \
                            "0.348656, 0.351604, 0.358369, 0.36102, 0.355179, 0.338844, 0.305844", \
                            "0.34595, 0.34837, 0.354046, 0.358006, 0.351571, 0.335566, 0.302676", \
                            "0.344707, 0.346456, 0.352539, 0.356059, 0.34925, 0.332882, 0.301543", \
                            "0.351395, 0.350955, 0.35893, 0.362153, 0.356125, 0.339196, 0.30844" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          index_2 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          values  ( \
                            "0.121519, 0.123469, 0.136683, 0.173654, 0.228647, 0.303193, 0.396869", \
                            "0.121179, 0.123001, 0.136305, 0.1731, 0.22807, 0.3036, 0.396506", \
                            "0.119933, 0.122115, 0.135411, 0.172203, 0.227487, 0.302445, 0.39545", \
                            "0.117634, 0.119758, 0.133066, 0.16984, 0.225408, 0.30008, 0.393283", \
                            "0.11415, 0.116025, 0.129945, 0.166177, 0.221559, 0.296681, 0.389631", \
                            "0.112446, 0.114404, 0.127611, 0.164565, 0.219909, 0.294734, 0.386243", \
                            "0.118419, 0.120798, 0.133992, 0.17135, 0.225762, 0.301103, 0.394339" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          index_2 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          values  ( \
                            "0.369831, 0.368038, 0.36179, 0.357698, 0.363726, 0.381337, 0.411719", \
                            "0.370029, 0.368852, 0.36256, 0.357522, 0.364617, 0.382239, 0.412599", \
                            "0.369875, 0.370095, 0.363451, 0.35959, 0.365453, 0.382932, 0.413633", \
                            "0.373593, 0.371855, 0.365486, 0.362109, 0.367444, 0.384538, 0.415943", \
                            "0.37697, 0.376068, 0.368566, 0.365662, 0.371657, 0.389389, 0.419749", \
                            "0.378334, 0.377564, 0.371305, 0.367158, 0.373494, 0.390522, 0.42053", \
                            "0.373021, 0.370359, 0.363869, 0.35948, 0.365662, 0.383394, 0.414249" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          index_2 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          values  ( \
                            "0.490985, 0.489104, 0.475167, 0.438878, 0.38368, 0.309683, 0.216647", \
                            "0.491612, 0.489742, 0.475827, 0.439527, 0.384263, 0.30976, 0.21747", \
                            "0.492855, 0.490765, 0.476828, 0.440539, 0.385385, 0.310761, 0.218479", \
                            "0.495011, 0.492965, 0.479039, 0.44275, 0.387552, 0.312983, 0.220525", \
                            "0.498784, 0.496936, 0.482966, 0.446677, 0.391523, 0.317482, 0.224618", \
                            "0.500192, 0.498289, 0.484374, 0.448074, 0.392876, 0.318307, 0.226324", \
                            "0.493592, 0.491436, 0.477609, 0.441309, 0.386298, 0.311542, 0.219083" \
                          )
                          }
                 }
        }
          cell_leakage_power : 0.0004140125;
}
}
