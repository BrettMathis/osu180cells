/*
 * Copyright 2022 GlobalFoundries PDK Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 *      Single Port SRAM cell name : gf180mcu_fd_ip_sram__sram64x8m8wm1
 *      Technology                 : GF 180nm 5V Green
 *
 *      ---------
 *      Pin name:
 *      ---------
 *      Input Pins : CLK CEN GWEN WEN[7:0] A[5:0] D[7:0]
 *      Inout Pins:  VDD VSS
 *      Output Pins: Q[7:0]
 *
 *     Revision History: 1.0 (Initial Release: June 20, 2014)
 */

library(gf180mcu_fd_ip_sram__sram64x8m8wm1__ss_125C_1v62) {
        delay_model             : table_lookup;
        revision                : 1.0;
        date                    : "June 20, 2014";
        comment                 : "GF 180nm 5V Green";
        voltage_unit            : "1V";
        time_unit               : "1ns";
        current_unit            : "1mA";
        leakage_power_unit      : "1mW";
        nom_process             : 1;
        nom_temperature         : 125;
        nom_voltage             : 1.62;
        capacitive_load_unit    (1,pf);
        pulling_resistance_unit : "1kohm";

        /* additional header data */
        default_fanout_load            : 1;
        default_inout_pin_cap          : 0.045;
        default_input_pin_cap          : 0.045;
        default_output_pin_cap         : 0;
        default_max_transition         : 11.06;
        default_cell_leakage_power     : 0;

         /* default attributes */
         slew_derate_from_library      : 1.000;
         slew_lower_threshold_pct_fall : 10.000;
         slew_upper_threshold_pct_fall : 90.000;
         slew_lower_threshold_pct_rise : 10.000;
         slew_upper_threshold_pct_rise : 90.000;
         input_threshold_pct_fall      : 50.000;
         input_threshold_pct_rise      : 50.000;
         output_threshold_pct_fall     : 50.000;
         output_threshold_pct_rise     : 50.000;
         default_leakage_power_density : 0;

        /* k-factors */
        k_process_recovery_fall        : 1;
        k_process_recovery_rise        : 1;
        k_process_cell_fall            : 1;
        k_process_cell_leakage_power   : 0;
        k_process_cell_rise            : 1;
        k_process_fall_transition      : 1;
        k_process_hold_fall            : 1;
        k_process_hold_rise            : 1;
        k_process_internal_power       : 0;
        k_process_min_pulse_width_high : 1;
        k_process_min_pulse_width_low  : 1;
        k_process_setup_fall           : 1;
        k_process_setup_rise           : 1;
        k_process_wire_cap             : 0;
        k_process_wire_res             : 0;
        k_process_pin_cap              : 0;
        k_process_rise_transition      : 1;
        k_temp_cell_fall               : 0.000;
        k_temp_cell_rise               : 0.000;
        k_temp_hold_fall               : 0.000;
        k_temp_hold_rise               : 0.000;
        k_temp_min_pulse_width_high    : 0.000;
        k_temp_min_pulse_width_low     : 0.000;
        k_temp_min_period              : 0.000;
        k_temp_rise_propagation        : 0.000;
        k_temp_fall_propagation        : 0.000;
        k_temp_rise_transition         : 0.000;
        k_temp_fall_transition         : 0.000;
        k_temp_recovery_fall           : 0.000;
        k_temp_recovery_rise           : 0.000;
        k_temp_setup_fall              : 0.000;
        k_temp_setup_rise              : 0.000;
        k_volt_cell_fall               : 0.000;
        k_volt_cell_rise               : 0.000;
        k_volt_hold_fall               : 0.000;
        k_volt_hold_rise               : 0.000;
        k_volt_min_pulse_width_high    : 0.000;
        k_volt_min_pulse_width_low     : 0.000;
        k_volt_min_period              : 0.000;
        k_volt_recovery_fall           : 0.000;
        k_volt_recovery_rise           : 0.000;
        k_volt_setup_fall              : 0.000;
        k_volt_setup_rise              : 0.000;
        k_volt_rise_propagation        : 0.000;
        k_volt_fall_propagation        : 0.000;
        k_volt_rise_transition         : 0.000;
        k_volt_fall_transition         : 0.000;

         voltage_map (VDD, 1.62);
         voltage_map (VSS, 0.00);
         operating_conditions(ss_1p62v_125C) {
                process       : 1;
                temperature   : 125;
                voltage       : 1.62;
                tree_type     : balanced_tree;
         }

         default_operating_conditions : ss_1p62v_125C;
         wire_load("Estimate") {
                resistance    : 1.44e-05;
                capacitance   : 0.00018;
                area          : 1.7;
                slope         : 500;
                fanout_length (1,500);
         }
         power_lut_template(power_template) {
            variable_1 : input_transition_time;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(q_delay_template) {
            variable_1 : input_net_transition;
            variable_2 : total_output_net_capacitance;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
                 index_2 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(q_slew_template) {
            variable_1 : total_output_net_capacitance;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(constraint_template) {
            variable_1 : related_pin_transition;
            variable_2 : constrained_pin_transition;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
                 index_2 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }

         library_features(report_delay_calculation);

         type (A_BUS) {
                base_type : array;
                data_type : bit;
                bit_width : 6;
                bit_from  : 5;
                bit_to    : 0;
                downto    : true;
         }
         type (Q_BUS) {
                base_type : array;
                data_type : bit;
                bit_width : 8;
                bit_from  : 7;
                bit_to    : 0;
                downto    : true;
         }
 cell(gf180mcu_fd_ip_sram__sram64x8m8wm1) {
        area             : 100571.5568;
        dont_use         : TRUE;
        dont_touch       : TRUE;
        interface_timing : TRUE;
        memory() {
                type          : ram;
                address_width : 6;
                word_width    : 8;
        }

                 bus(Q)   {
                  bus_type             : Q_BUS;
                  direction            : output;
                  max_capacitance      : 1.058;
                  memory_read() {
                        address        : A;
                  }
                  timing() {
                          related_pin  : "CLK";
                          timing_type  : rising_edge;
                          timing_sense : non_unate;
       		  when : "((!CEN) & (GWEN))";
        	  sdf_cond : "CEN== 1'b0 && GWEN== 1'b1";
                          cell_rise(q_delay_template) {
			  index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
			  index_2 ("0.01, 0.02885, 0.09503, 0.2214, 0.4183, 0.6946, 1.058");
                          values  ( \
                            "35.5512, 35.7012, 36.1872, 36.9828, 38.136, 39.8064, 41.9472", \
                            "35.5632, 35.7168, 36.2508, 36.9948, 38.2116, 39.8052, 41.9628", \
                            "35.7312, 35.892, 36.3624, 37.182, 38.3556, 40.0728, 42.1224", \
                            "36.0792, 36.2268, 36.72, 37.5, 38.712, 40.3296, 42.4932", \
                            "36.5568, 36.6156, 37.0908, 37.908, 39.1824, 40.806, 42.9348", \
                            "37.1976, 37.326, 37.8468, 38.6892, 39.8652, 41.508, 43.632", \
                            "37.9452, 38.0892, 38.5788, 39.3984, 40.5732, 42.1884, 44.3352" \
                          )
                          }
                          rise_transition(q_slew_template) {
                          index_1 ("0.01, 0.02885, 0.09503, 0.2214, 0.4183, 0.6946, 1.058");
                          values  ( \
  	                     "1.11418, 1.33752, 2.0382, 3.30924, 5.42028, 8.42292, 12.4488" \
                          )

                          }
                          cell_fall(q_delay_template) {
                          index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          index_2 ("0.01, 0.02885, 0.09503, 0.2214, 0.4183, 0.6946, 1.058");
                          values  ( \
                            "37.83, 37.944, 38.2908, 38.826, 39.4308, 40.2552, 41.2476", \
                            "37.8312, 37.9752, 38.4144, 38.8668, 39.5568, 40.3176, 41.334", \
                            "38.0088, 38.1612, 38.496, 39.0708, 39.6468, 40.494, 41.4384", \
                            "38.34, 38.4684, 38.874, 39.3924, 40.0536, 40.7844, 41.772", \
                            "38.8068, 38.8428, 39.216, 39.756, 40.4664, 41.2704, 42.2256", \
                            "39.462, 39.5676, 39.942, 40.548, 41.2284, 41.982, 42.9684", \
                            "40.1964, 40.3356, 40.6956, 41.2668, 41.8884, 42.6816, 43.662" \
                          )
                          }
                          fall_transition(q_slew_template) {
                          index_1 ("0.01, 0.02885, 0.09503, 0.2214, 0.4183, 0.6946, 1.058");
                          values  ( \
                            "1.10924, 1.21476, 1.60716, 2.1948, 3.06204, 4.22472, 5.65344" \
                          )
                          }
                  }
          }
          pin(CLK)   {
                  direction            : input;
                  capacitance          : 0.299551;
                  clock                : true;
                  max_transition       : 11.06;
                  min_pulse_width_high : 12.414765;
                  min_pulse_width_low  : 23.49015;
                  min_period           : 50.97375;

/* WRITE POWER */
             internal_power() {
              when : "!CEN & !GWEN & (!WEN[0] | !WEN[1] | !WEN[2] | !WEN[3] | !WEN[4] | !WEN[5] | !WEN[6] | !WEN[7])";
              rise_power(power_template) {
                index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                values  ("77.4279, 77.4279, 77.4279, 77.4279, 77.4279, 77.4279, 77.4279");
              }
              fall_power(power_template) {
                index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                values  ("77.4279, 77.4279, 77.4279, 77.4279, 77.4279, 77.4279, 77.4279");
              }
             }
/* DISABLED POWER */
             internal_power() {
              when : "CEN";
              rise_power(power_template) {
                index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                values  ("2.03488e-05, 2.03488e-05, 2.03488e-05, 2.03488e-05, 2.03488e-05, 2.03488e-05, 2.03488e-05");
              }
              fall_power(power_template) {
                index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                values  ("2.03488e-05, 2.03488e-05, 2.03488e-05, 2.03488e-05, 2.03488e-05, 2.03488e-05, 2.03488e-05");
              }
             }
/* READ POWER */
             internal_power() {
             when : "!CEN & GWEN";
             rise_power(power_template) {
                index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                values  ("71.1626, 71.1626, 71.1626, 71.1626, 71.1626, 71.1626, 71.1626");
              }
              fall_power(power_template) {
                index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                values  ("71.1626, 71.1626, 71.1626, 71.1626, 71.1626, 71.1626, 71.1626");
              }
             }
          }

          pg_pin(VDD) {
                  voltage_name     : VDD;
                  pg_type          : primary_power;
          }
          pg_pin(VSS) {
                  voltage_name     : VSS;
                  pg_type          : primary_ground;
          }
          pin(CEN)   {
                  direction            : input;
                  capacitance          : 0.0193095;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          index_2 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          values  ( \
                            "3.60932, 3.53661, 3.60591, 3.97848, 4.66301, 5.84144, 7.29608", \
                            "3.56279, 3.50592, 3.55201, 3.90819, 4.61021, 5.78259, 7.26473", \
                            "3.32684, 3.27778, 3.32904, 3.70238, 4.4022, 5.56644, 7.05892", \
                            "2.97055, 2.89861, 2.96208, 3.31716, 4.0227, 5.19552, 6.64708", \
                            "2.88255, 2.84284, 2.88376, 3.24247, 3.93393, 5.09619, 6.54577", \
                            "2.8963, 2.84944, 2.88882, 3.25204, 3.94691, 5.10785, 6.54819", \
                            "2.89399, 2.82293, 2.88805, 3.24522, 3.94284, 5.10708, 6.55589" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          index_2 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          values  ( \
                            "2.46268, 2.48743, 2.69379, 3.12521, 3.81876, 4.8807, 6.22281", \
                            "2.40526, 2.42847, 2.63241, 3.06625, 3.78004, 4.8279, 6.16396", \
                            "2.17657, 2.21254, 2.4189, 2.8512, 3.51461, 4.61175, 5.92988", \
                            "2.17305, 2.20198, 2.40262, 2.83514, 3.55135, 4.59514, 5.90403", \
                            "2.16172, 2.20088, 2.40229, 2.83426, 3.5486, 4.59426, 5.90326", \
                            "2.16997, 2.1989, 2.39745, 2.83206, 3.54442, 4.58623, 5.90106", \
                            "2.17085, 2.19967, 2.39833, 2.83382, 3.54816, 4.59294, 5.89776" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          index_2 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          values  ( \
                            "8.13714, 8.17707, 8.1367, 7.76556, 7.06244, 5.9114, 4.46952", \
                            "8.17212, 8.23053, 8.184, 7.83167, 7.1445, 5.96585, 4.4935", \
                            "8.38772, 8.41588, 8.3589, 8.00448, 7.31192, 6.14999, 4.66565", \
                            "8.75061, 8.79758, 8.76403, 8.40884, 7.70044, 6.54071, 5.10389", \
                            "9.39279, 9.4325, 9.39169, 9.03287, 8.34141, 7.17915, 5.72957", \
                            "10.2106, 10.2575, 10.218, 9.8549, 9.16003, 7.99909, 6.55875", \
                            "11.1496, 11.2211, 11.1555, 10.7984, 10.1008, 8.93662, 7.48781" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          index_2 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          values  ( \
                            "8.84928, 8.81881, 8.61762, 8.18554, 7.49133, 6.43148, 5.11665", \
                            "8.90219, 8.87348, 8.67471, 8.24021, 7.52565, 6.4801, 5.17121", \
                            "9.09854, 9.05729, 8.8561, 8.42314, 7.74466, 6.66402, 5.37251", \
                            "9.47705, 9.44812, 9.24748, 8.81496, 8.09864, 7.05485, 5.74596", \
                            "10.1136, 10.0745, 9.87305, 9.44108, 8.72674, 7.68108, 6.37219", \
                            "10.937, 10.908, 10.7095, 10.2749, 9.56252, 8.52071, 7.20577", \
                            "11.8723, 11.8437, 11.6457, 11.2098, 10.4955, 9.45076, 8.14594" \
                          )
                          }
                 }
          }
          pin(GWEN)   {
                  direction            : input;
                  capacitance          : 0.0456898;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          index_2 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          values  ( \
                            "4.16075, 4.21619, 4.39615, 4.81239, 5.36228, 6.20554, 7.16342", \
                            "4.10641, 4.158, 4.33708, 4.75596, 5.31509, 6.14977, 7.10754", \
                            "3.9039, 3.95791, 4.13523, 4.55598, 5.14932, 5.94902, 6.9069", \
                            "3.53716, 3.58985, 3.76904, 4.18836, 4.79215, 5.58162, 6.53939", \
                            "2.91016, 2.96527, 3.14512, 3.56246, 4.11136, 4.95462, 5.9125", \
                            "2.23168, 2.28459, 2.46378, 2.88321, 3.48326, 4.27625, 5.23402", \
                            "1.51316, 1.56816, 1.74471, 2.16469, 2.76672, 3.55619, 4.51682" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          index_2 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          values  ( \
                            "5.60912, 5.65576, 5.86278, 6.3338, 7.02889, 8.04925, 9.40654", \
                            "5.55137, 5.59999, 5.80745, 6.27792, 6.98346, 8.00789, 9.37189", \
                            "5.35634, 5.39924, 5.60692, 6.04175, 6.7793, 7.80703, 9.18654", \
                            "4.98377, 5.03195, 5.23875, 5.70581, 6.44325, 7.43974, 8.78273", \
                            "4.36238, 4.40484, 4.61164, 5.05802, 5.78842, 6.81274, 8.15573", \
                            "3.67708, 3.72647, 3.93404, 4.37976, 5.07496, 6.12007, 7.47725", \
                            "2.95845, 3.00685, 3.23884, 3.68082, 4.41012, 5.40199, 6.79437" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          index_2 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          values  ( \
                            "6.92351, 6.87786, 6.69823, 6.30795, 5.74948, 5.10048, 4.44378", \
                            "6.58823, 6.54115, 6.35349, 5.93978, 5.39539, 4.76498, 4.10795", \
                            "6.05902, 6.00809, 5.8267, 5.4406, 4.91722, 4.23643, 3.56708", \
                            "5.63068, 5.58195, 5.3988, 5.01589, 4.44532, 3.80853, 3.14743", \
                            "5.907, 5.85761, 5.66929, 5.291, 4.75211, 4.08419, 3.42298", \
                            "6.42928, 6.38891, 6.1974, 5.81438, 5.24381, 4.62418, 3.94592", \
                            "7.04979, 7.0026, 6.81637, 6.43346, 5.863, 5.22632, 4.54872" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          index_2 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          values  ( \
                            "3.92579, 3.84131, 3.63913, 3.21013, 2.49403, 1.46663, 0.139795", \
                            "3.60558, 3.50702, 3.30275, 2.87342, 2.13763, 1.13303, 0", \
                            "3.06053, 2.97847, 2.77596, 2.3595, 1.61414, 0.604043, 0", \
                            "2.6477, 2.55079, 2.34795, 1.90872, 1.13452, 0.176509, 0", \
                            "2.90697, 2.82634, 2.62273, 2.21144, 1.45596, 0.451902, 0", \
                            "3.42001, 3.34906, 3.14897, 2.73383, 2.02807, 0.973126, 0", \
                            "4.06692, 3.96836, 3.75837, 3.32695, 2.54837, 1.60028, 0.229399" \
                          )
                          }
                 }
          }
          bus(WEN)   {
                  bus_type             : Q_BUS;
                  direction            : input;
                  capacitance          : 0.00749419;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          index_2 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          values  ( \
                            "0, 0, 0, 0, 0, 0, 0", \
                            "0, 0, 0, 0, 0, 0, 0.036883", \
                            "0, 0, 0, 0, 0, 0, 0.56892", \
                            "0, 0, 0, 0, 0, 0.343409, 0.994136", \
                            "0, 0, 0, 0, 0, 0.066231, 0.728068", \
                            "0, 0, 0, 0, 0, 0, 0.193383", \
                            "0, 0, 0, 0, 0, 0, 0" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          index_2 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          values  ( \
                            "0.124225, 0.196895, 0.40678, 0.830115, 1.54682, 2.58522, 3.90148", \
                            "0.463265, 0.545391, 0.753764, 1.17764, 1.91158, 2.91786, 4.27141", \
                            "0.993454, 1.06374, 1.28123, 1.69433, 2.43518, 3.45554, 4.8059", \
                            "1.42384, 1.50425, 1.70764, 2.13158, 2.92061, 3.88113, 5.19607", \
                            "1.14472, 1.22712, 1.43, 1.83953, 2.59314, 3.60008, 4.91909", \
                            "0.633237, 0.703615, 0.900339, 1.31836, 2.02213, 3.08363, 4.40737", \
                            "0, 0.082907, 0.292722, 0.724911, 1.50392, 2.45256, 3.82371" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          index_2 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          values  ( \
                            "6.94485, 6.88545, 6.69823, 6.32038, 5.74948, 5.1436, 4.47634", \
                            "6.60957, 6.55017, 6.36251, 5.9851, 5.40738, 4.80832, 4.14106", \
                            "6.08069, 6.02118, 5.83341, 5.45611, 4.91722, 4.27933, 3.61339", \
                            "5.65301, 5.59361, 5.40584, 5.02843, 4.45071, 3.85176, 3.18582", \
                            "5.92856, 5.86916, 5.67864, 5.3042, 4.75211, 4.12731, 3.46137", \
                            "6.45139, 6.39188, 6.20411, 5.8267, 5.25657, 4.6497, 3.9842", \
                            "7.073, 7.00854, 6.81637, 6.44611, 5.87103, 5.23875, 4.60537" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          index_2 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          values  ( \
                            "3.93855, 3.90159, 3.67499, 3.24291, 2.49403, 1.48819, 0.171888", \
                            "3.60558, 3.56653, 3.33916, 2.90664, 2.14148, 1.13303, 0", \
                            "3.07285, 3.03754, 2.81193, 2.39327, 1.61843, 0.604043, 0", \
                            "2.6477, 2.60997, 2.38326, 1.94194, 1.14347, 0.176509, 0", \
                            "2.91918, 2.88552, 2.65881, 2.23399, 1.45948, 0.451902, 0", \
                            "3.43189, 3.40813, 3.18472, 2.75638, 2.03566, 0.99473, 0", \
                            "4.06692, 4.02743, 3.79412, 3.35874, 2.5971, 1.60028, 0.245801" \
                          )
                          }
                 }
          }
          bus(A)   {
                  bus_type             : A_BUS;
                  direction            : input;
                  capacitance          : 0.038309;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          index_2 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          values  ( \
                            "3.54013, 3.51274, 3.5343, 3.92315, 4.65509, 5.76631, 7.20808", \
                            "3.4793, 3.44146, 3.47336, 3.86232, 4.59459, 5.70548, 7.13086", \
                            "3.65937, 3.63154, 3.67147, 4.05075, 4.774, 5.89721, 7.32204", \
                            "4.09805, 4.0579, 4.10135, 4.49097, 5.21741, 6.32621, 7.79449", \
                            "3.80292, 3.77784, 3.81722, 4.213, 4.91821, 6.07618, 7.51784", \
                            "3.28933, 3.26348, 3.29307, 3.68082, 4.40924, 5.52728, 7.0103", \
                            "2.67421, 2.63604, 2.68048, 3.06416, 3.79555, 4.91051, 6.33941" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          index_2 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          values  ( \
                            "2.79719, 2.85318, 3.08517, 3.50911, 4.21124, 5.29133, 6.65049", \
                            "3.14116, 3.17966, 3.42353, 3.83955, 4.55092, 5.63101, 6.98654", \
                            "3.63748, 3.71987, 3.94317, 4.37371, 5.07826, 6.16462, 7.52719", \
                            "4.09035, 4.14513, 4.38603, 4.7883, 5.50066, 6.58889, 7.94761", \
                            "3.78653, 3.86276, 4.09926, 4.52199, 5.22654, 6.31367, 7.66931", \
                            "3.278, 3.35324, 3.58633, 3.98717, 4.70668, 5.79029, 7.13581", \
                            "2.67663, 2.7324, 2.94327, 3.37964, 4.07803, 5.16813, 6.52883" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          index_2 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          values  ( \
                            "2.56597, 2.59358, 2.55541, 2.14797, 1.44881, 0.516769, 0", \
                            "2.63274, 2.66024, 2.62218, 2.21474, 1.51547, 0.583462, 0", \
                            "2.83239, 2.85989, 2.82172, 2.41428, 1.71512, 0.783101, 0", \
                            "3.20452, 3.23202, 3.19385, 2.78641, 2.08725, 1.15522, 0.134344", \
                            "3.82866, 3.85605, 3.8181, 3.41066, 2.71139, 1.74757, 0.758472", \
                            "4.67929, 4.7069, 4.66873, 4.2614, 3.56213, 2.63021, 1.6093", \
                            "5.58008, 5.60736, 5.56952, 5.16241, 4.46325, 3.53133, 2.51042" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          index_2 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          values  ( \
                            "3.15326, 3.10596, 2.89278, 2.46114, 1.91532, 1.25345, 0.502766", \
                            "3.21992, 3.17273, 2.95955, 2.5278, 1.98198, 1.32011, 0.56947", \
                            "3.41946, 3.37238, 3.1592, 2.72745, 2.18174, 1.51976, 0.769131", \
                            "3.7917, 3.74451, 3.53133, 3.09958, 2.55387, 1.89189, 1.14125", \
                            "4.41584, 4.36865, 4.15547, 3.72383, 3.17801, 2.51603, 1.76539", \
                            "5.26669, 5.21939, 5.00621, 4.57457, 4.02875, 3.36688, 2.61624", \
                            "6.16792, 6.12062, 5.90744, 5.4758, 4.92998, 4.26811, 3.51747" \
                          )
                          }
                 }
          }
          bus(D)   {
                  bus_type             : Q_BUS;
                  memory_write() {
                          address      : A;
                          clocked_on   : "CLK";
                  }
                  direction            : input;
                  capacitance          : 0.0173971;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          index_2 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          values  ( \
                            "3.31716, 3.39845, 3.6003, 3.95109, 4.35105, 4.7696, 5.11643", \
                            "3.68137, 3.71173, 3.91721, 4.2944, 4.7124, 5.11148, 5.48812", \
                            "4.18792, 4.24556, 4.44521, 4.84484, 5.23039, 5.64256, 6.02536", \
                            "4.63562, 4.6717, 4.90314, 5.27197, 5.65928, 6.08421, 6.45931", \
                            "4.34808, 4.39582, 4.62484, 4.97618, 5.38142, 5.78908, 6.20719", \
                            "3.84098, 3.87607, 4.07924, 4.45456, 4.83659, 5.27736, 5.63739", \
                            "3.20694, 3.26436, 3.44289, 3.82932, 4.23555, 4.65454, 5.01974" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          index_2 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          values  ( \
                            "0, 0, 0, 0, 0, 0.820622, 2.07878", \
                            "0, 0, 0, 0, 0.186599, 1.15613, 2.41428", \
                            "0, 0, 0, 0, 0.720005, 1.68927, 2.94866", \
                            "0, 0, 0, 0.405702, 1.13379, 2.11409, 3.37227", \
                            "0, 0, 0, 0.13076, 0.869616, 1.83777, 3.09727", \
                            "0, 0, 0, 0, 0.346588, 1.31615, 2.57433", \
                            "0, 0, 0, 0, 0, 0.693924, 1.94249" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          index_2 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          values  ( \
                            "3.0888, 3.02786, 2.8314, 2.45608, 2.07669, 1.64307, 1.27456", \
                            "2.73801, 2.69148, 2.49689, 2.12454, 1.7281, 1.29148, 0.922647", \
                            "2.20979, 2.15644, 1.94678, 1.56761, 1.17942, 0.754281, 0.359403", \
                            "1.77749, 1.73481, 1.52592, 1.15597, 0.769329, 0.332134, 0", \
                            "2.04743, 2.01135, 1.81214, 1.43935, 1.04449, 0.610555, 0.244411", \
                            "2.56883, 2.53528, 2.32584, 1.95382, 1.57971, 1.1399, 0.762817", \
                            "3.21123, 3.1471, 2.96384, 2.58995, 2.20088, 1.76594, 1.39392" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          index_2 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          values  ( \
                            "5.90634, 5.90414, 5.74255, 5.31399, 4.57578, 3.59007, 2.33233", \
                            "5.56171, 5.55775, 5.39627, 4.9676, 4.2295, 3.24379, 1.98605", \
                            "5.02601, 5.02458, 4.86255, 4.43399, 3.69589, 2.71007, 1.45233", \
                            "4.60119, 4.59954, 4.43707, 4.00884, 3.27063, 2.28492, 1.02715", \
                            "4.8818, 4.87729, 4.7157, 4.28714, 3.54893, 2.56322, 1.30546", \
                            "5.4065, 5.40298, 5.24095, 4.81239, 4.07429, 3.08847, 1.83073", \
                            "6.03317, 6.0291, 5.86751, 5.43906, 4.70085, 3.71514, 2.4574" \
                          )
                          }
                 }
        }
          cell_leakage_power : 2.034882e-05;
}
}
