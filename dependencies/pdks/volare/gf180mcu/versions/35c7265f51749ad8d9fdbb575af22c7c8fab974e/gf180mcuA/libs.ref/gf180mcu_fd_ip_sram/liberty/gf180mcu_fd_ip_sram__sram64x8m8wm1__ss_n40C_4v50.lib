/*
 * Copyright 2022 GlobalFoundries PDK Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 *      Single Port SRAM cell name : gf180mcu_fd_ip_sram__sram64x8m8wm1
 *      Technology                 : GF 180nm 5V Green
 *
 *      ---------
 *      Pin name:
 *      ---------
 *      Input Pins : CLK CEN GWEN WEN[7:0] A[5:0] D[7:0]
 *      Inout Pins:  VDD VSS
 *      Output Pins: Q[7:0]
 *
 *     Revision History: 1.0 (Initial Release: June 20, 2014)
 */

library(gf180mcu_fd_ip_sram__sram64x8m8wm1__ss_n40C_4v50) {
        delay_model             : table_lookup;
        revision                : 1.0;
        date                    : "June 20, 2014";
        comment                 : "GF 180nm 5V Green";
        voltage_unit            : "1V";
        time_unit               : "1ns";
        current_unit            : "1mA";
        leakage_power_unit      : "1mW";
        nom_process             : 1;
        nom_temperature         : -40;
        nom_voltage             : 4.5;
        capacitive_load_unit    (1,pf);
        pulling_resistance_unit : "1kohm";

        /* additional header data */
        default_fanout_load            : 1;
        default_inout_pin_cap          : 0.045;
        default_input_pin_cap          : 0.045;
        default_output_pin_cap         : 0;
        default_max_transition         : 2.008;
        default_cell_leakage_power     : 0;

         /* default attributes */
         slew_derate_from_library      : 1.000;
         slew_lower_threshold_pct_fall : 10.000;
         slew_upper_threshold_pct_fall : 90.000;
         slew_lower_threshold_pct_rise : 10.000;
         slew_upper_threshold_pct_rise : 90.000;
         input_threshold_pct_fall      : 50.000;
         input_threshold_pct_rise      : 50.000;
         output_threshold_pct_fall     : 50.000;
         output_threshold_pct_rise     : 50.000;
         default_leakage_power_density : 0;

        /* k-factors */
        k_process_recovery_fall        : 1;
        k_process_recovery_rise        : 1;
        k_process_cell_fall            : 1;
        k_process_cell_leakage_power   : 0;
        k_process_cell_rise            : 1;
        k_process_fall_transition      : 1;
        k_process_hold_fall            : 1;
        k_process_hold_rise            : 1;
        k_process_internal_power       : 0;
        k_process_min_pulse_width_high : 1;
        k_process_min_pulse_width_low  : 1;
        k_process_setup_fall           : 1;
        k_process_setup_rise           : 1;
        k_process_wire_cap             : 0;
        k_process_wire_res             : 0;
        k_process_pin_cap              : 0;
        k_process_rise_transition      : 1;
        k_temp_cell_fall               : 0.000;
        k_temp_cell_rise               : 0.000;
        k_temp_hold_fall               : 0.000;
        k_temp_hold_rise               : 0.000;
        k_temp_min_pulse_width_high    : 0.000;
        k_temp_min_pulse_width_low     : 0.000;
        k_temp_min_period              : 0.000;
        k_temp_rise_propagation        : 0.000;
        k_temp_fall_propagation        : 0.000;
        k_temp_rise_transition         : 0.000;
        k_temp_fall_transition         : 0.000;
        k_temp_recovery_fall           : 0.000;
        k_temp_recovery_rise           : 0.000;
        k_temp_setup_fall              : 0.000;
        k_temp_setup_rise              : 0.000;
        k_volt_cell_fall               : 0.000;
        k_volt_cell_rise               : 0.000;
        k_volt_hold_fall               : 0.000;
        k_volt_hold_rise               : 0.000;
        k_volt_min_pulse_width_high    : 0.000;
        k_volt_min_pulse_width_low     : 0.000;
        k_volt_min_period              : 0.000;
        k_volt_recovery_fall           : 0.000;
        k_volt_recovery_rise           : 0.000;
        k_volt_setup_fall              : 0.000;
        k_volt_setup_rise              : 0.000;
        k_volt_rise_propagation        : 0.000;
        k_volt_fall_propagation        : 0.000;
        k_volt_rise_transition         : 0.000;
        k_volt_fall_transition         : 0.000;

         voltage_map (VDD, 4.5);
         voltage_map (VSS, 0.00);
         operating_conditions(ss_4p5v_m40C) {
                process       : 1;
                temperature   : -40;
                voltage       : 4.5;
                tree_type     : balanced_tree;
         }

         default_operating_conditions : ss_4p5v_m40C;
         wire_load("Estimate") {
                resistance    : 1.44e-05;
                capacitance   : 0.00018;
                area          : 1.7;
                slope         : 500;
                fanout_length (1,500);
         }
         power_lut_template(power_template) {
            variable_1 : input_transition_time;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(q_delay_template) {
            variable_1 : input_net_transition;
            variable_2 : total_output_net_capacitance;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
                 index_2 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(q_slew_template) {
            variable_1 : total_output_net_capacitance;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(constraint_template) {
            variable_1 : related_pin_transition;
            variable_2 : constrained_pin_transition;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
                 index_2 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }

         library_features(report_delay_calculation);

         type (A_BUS) {
                base_type : array;
                data_type : bit;
                bit_width : 6;
                bit_from  : 5;
                bit_to    : 0;
                downto    : true;
         }
         type (Q_BUS) {
                base_type : array;
                data_type : bit;
                bit_width : 8;
                bit_from  : 7;
                bit_to    : 0;
                downto    : true;
         }
 cell(gf180mcu_fd_ip_sram__sram64x8m8wm1) {
        area             : 100571.5568;
        dont_use         : TRUE;
        dont_touch       : TRUE;
        interface_timing : TRUE;
        memory() {
                type          : ram;
                address_width : 6;
                word_width    : 8;
        }

                 bus(Q)   {
                  bus_type             : Q_BUS;
                  direction            : output;
                  max_capacitance      : 1.253;
                  memory_read() {
                        address        : A;
                  }
                  timing() {
                          related_pin  : "CLK";
                          timing_type  : rising_edge;
                          timing_sense : non_unate;
       		  when : "((!CEN) & (GWEN))";
        	  sdf_cond : "CEN== 1'b0 && GWEN== 1'b1";
                          cell_rise(q_delay_template) {
			  index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
			  index_2 ("0.01, 0.03235, 0.1108, 0.2606, 0.4941, 0.8216, 1.253");
                          values  ( \
                            "5.29632, 5.31924, 5.39748, 5.52564, 5.71416, 5.97972, 6.33048", \
                            "5.29392, 5.32356, 5.4024, 5.53404, 5.72028, 5.98008, 6.33792", \
                            "5.31048, 5.33844, 5.41056, 5.544, 5.7324, 5.99112, 6.34572", \
                            "5.32128, 5.3454, 5.42436, 5.55072, 5.74188, 6.00984, 6.35892", \
                            "5.33688, 5.36616, 5.44476, 5.57388, 5.7678, 6.02952, 6.37728", \
                            "5.3598, 5.38812, 5.46372, 5.59152, 5.7858, 6.0468, 6.39516", \
                            "5.36124, 5.38248, 5.46348, 5.5908, 5.78076, 6.04464, 6.39612" \
                          )
                          }
                          rise_transition(q_slew_template) {
                          index_1 ("0.01, 0.03235, 0.1108, 0.2606, 0.4941, 0.8216, 1.253");
                          values  ( \
  	                     "0.175704, 0.214728, 0.335064, 0.562584, 0.922164, 1.44444, 2.1276" \
                          )

                          }
                          cell_fall(q_delay_template) {
                          index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          index_2 ("0.01, 0.03235, 0.1108, 0.2606, 0.4941, 0.8216, 1.253");
                          values  ( \
                            "5.48088, 5.50368, 5.5848, 5.70144, 5.8566, 6.05592, 6.31728", \
                            "5.4774, 5.5032, 5.58552, 5.70708, 5.85912, 6.06036, 6.32616", \
                            "5.4894, 5.52084, 5.59428, 5.71572, 5.87376, 6.06948, 6.33468", \
                            "5.50068, 5.53188, 5.60748, 5.72592, 5.88912, 6.09156, 6.3486", \
                            "5.52288, 5.55276, 5.63244, 5.74956, 5.9118, 6.10872, 6.36504", \
                            "5.54268, 5.57196, 5.64816, 5.76924, 5.92848, 6.12432, 6.38436", \
                            "5.544, 5.56308, 5.64732, 5.76072, 5.919, 6.11964, 6.38376" \
                          )
                          }
                          fall_transition(q_slew_template) {
                          index_1 ("0.01, 0.03235, 0.1108, 0.2606, 0.4941, 0.8216, 1.253");
                          values  ( \
                            "0.179784, 0.209136, 0.294384, 0.44736, 0.670092, 0.982056, 1.39416" \
                          )
                          }
                  }
          }
          pin(CLK)   {
                  direction            : input;
                  capacitance          : 0.31542;
                  clock                : true;
                  max_transition       : 2.008;
                  min_pulse_width_high : 3.269625;
                  min_pulse_width_low  : 2.723025;
                  min_period           : 7.109355;

/* WRITE POWER */
             internal_power() {
              when : "!CEN & !GWEN & (!WEN[0] | !WEN[1] | !WEN[2] | !WEN[3] | !WEN[4] | !WEN[5] | !WEN[6] | !WEN[7])";
              rise_power(power_template) {
                index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                values  ("670.77, 670.77, 670.77, 670.77, 670.77, 670.77, 670.77");
              }
              fall_power(power_template) {
                index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                values  ("670.77, 670.77, 670.77, 670.77, 670.77, 670.77, 670.77");
              }
             }
/* DISABLED POWER */
             internal_power() {
              when : "CEN";
              rise_power(power_template) {
                index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                values  ("0.000105602, 0.000105602, 0.000105602, 0.000105602, 0.000105602, 0.000105602, 0.000105602");
              }
              fall_power(power_template) {
                index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                values  ("0.000105602, 0.000105602, 0.000105602, 0.000105602, 0.000105602, 0.000105602, 0.000105602");
              }
             }
/* READ POWER */
             internal_power() {
             when : "!CEN & GWEN";
             rise_power(power_template) {
                index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                values  ("603.675, 603.675, 603.675, 603.675, 603.675, 603.675, 603.675");
              }
              fall_power(power_template) {
                index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                values  ("603.675, 603.675, 603.675, 603.675, 603.675, 603.675, 603.675");
              }
             }
          }

          pg_pin(VDD) {
                  voltage_name     : VDD;
                  pg_type          : primary_power;
          }
          pg_pin(VSS) {
                  voltage_name     : VSS;
                  pg_type          : primary_ground;
          }
          pin(CEN)   {
                  direction            : input;
                  capacitance          : 0.0189435;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          index_2 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          values  ( \
                            "0.513986, 0.504658, 0.49819, 0.515042, 0.558349, 0.610951, 0.660099", \
                            "0.510818, 0.503019, 0.495198, 0.511577, 0.554884, 0.606991, 0.656931", \
                            "0.507111, 0.498652, 0.491667, 0.507529, 0.552101, 0.587532, 0.638561", \
                            "0.506363, 0.497475, 0.490248, 0.505208, 0.5511, 0.588841, 0.623986", \
                            "0.504977, 0.498949, 0.490182, 0.505989, 0.549879, 0.587675, 0.623436", \
                            "0.504845, 0.496375, 0.489181, 0.504053, 0.549824, 0.587587, 0.622776", \
                            "0.504592, 0.497739, 0.488752, 0.504702, 0.548658, 0.58476, 0.622237" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          index_2 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          values  ( \
                            "0.457259, 0.460724, 0.47674, 0.515504, 0.584617, 0.669196, 0.759594", \
                            "0.45474, 0.456852, 0.472989, 0.511907, 0.580844, 0.665742, 0.757537", \
                            "0.451286, 0.453519, 0.469513, 0.508552, 0.57772, 0.662255, 0.752686", \
                            "0.450142, 0.452551, 0.468611, 0.507551, 0.577247, 0.661221, 0.751663", \
                            "0.447469, 0.452309, 0.466928, 0.508585, 0.576675, 0.660715, 0.752444", \
                            "0.449207, 0.451484, 0.467335, 0.506605, 0.577412, 0.66, 0.75042", \
                            "0.448624, 0.45089, 0.467148, 0.506143, 0.575509, 0.659494, 0.751091" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          index_2 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          values  ( \
                            "1.23086, 1.24018, 1.24665, 1.2298, 1.18649, 1.14793, 1.11381", \
                            "1.23599, 1.24379, 1.25161, 1.23523, 1.19193, 1.15337, 1.11836", \
                            "1.25545, 1.26391, 1.27094, 1.25503, 1.21046, 1.17503, 1.13756", \
                            "1.29272, 1.30163, 1.30889, 1.29393, 1.24799, 1.21025, 1.1751", \
                            "1.35641, 1.36246, 1.37115, 1.35542, 1.31153, 1.27369, 1.23793", \
                            "1.40525, 1.41372, 1.42087, 1.40602, 1.36026, 1.32242, 1.28733", \
                            "1.45343, 1.46036, 1.46927, 1.45332, 1.40943, 1.37335, 1.33584" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          index_2 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          values  ( \
                            "1.28755, 1.28414, 1.26808, 1.22934, 1.16023, 1.07565, 0.985248", \
                            "1.29206, 1.28997, 1.2738, 1.2349, 1.16597, 1.08107, 0.989274", \
                            "1.31131, 1.309, 1.29305, 1.25402, 1.18484, 1.10031, 1.00989", \
                            "1.34893, 1.34651, 1.33045, 1.29151, 1.22185, 1.13787, 1.04743", \
                            "1.41394, 1.4091, 1.39447, 1.35278, 1.28469, 1.20065, 1.10892", \
                            "1.4608, 1.4586, 1.44276, 1.40349, 1.33265, 1.25006, 1.15964", \
                            "1.50942, 1.50722, 1.49094, 1.45189, 1.38259, 1.29855, 1.20699" \
                          )
                          }
                 }
          }
          pin(GWEN)   {
                  direction            : input;
                  capacitance          : 0.0510011;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          index_2 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          values  ( \
                            "0.676192, 0.68046, 0.698863, 0.738903, 0.807598, 0.891484, 0.968847", \
                            "0.670615, 0.674652, 0.69311, 0.732798, 0.801361, 0.885236, 0.963391", \
                            "0.651145, 0.655358, 0.674355, 0.714076, 0.782331, 0.866162, 0.945516", \
                            "0.614372, 0.618035, 0.635877, 0.676654, 0.745437, 0.829026, 0.907698", \
                            "0.548196, 0.552398, 0.571428, 0.610709, 0.679525, 0.763576, 0.841731", \
                            "0.493526, 0.497761, 0.516274, 0.556567, 0.624932, 0.708917, 0.787083", \
                            "0.43175, 0.43582, 0.454828, 0.494384, 0.562936, 0.646657, 0.725142" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          index_2 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          values  ( \
                            "0.719048, 0.723756, 0.750453, 0.805871, 0.895213, 1.01575, 1.14771", \
                            "0.713196, 0.717673, 0.744183, 0.797467, 0.889438, 1.009, 1.14318", \
                            "0.694419, 0.698797, 0.72545, 0.780901, 0.870221, 0.990594, 1.1237", \
                            "0.656447, 0.661309, 0.688127, 0.743424, 0.833437, 0.953117, 1.08624", \
                            "0.591206, 0.595859, 0.622479, 0.675917, 0.767712, 0.887634, 1.02121", \
                            "0.536371, 0.5412, 0.568007, 0.622798, 0.71258, 0.833008, 0.966097", \
                            "0.474386, 0.479226, 0.505956, 0.560879, 0.651409, 0.771034, 0.904618" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          index_2 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          values  ( \
                            "0.984093, 0.981464, 0.961631, 0.922834, 0.873532, 0.828322, 0.794585", \
                            "0.989219, 0.987096, 0.966757, 0.927498, 0.879021, 0.833679, 0.797742", \
                            "0.997095, 0.994444, 0.9746, 0.935572, 0.887161, 0.841511, 0.805574", \
                            "1.01146, 1.00834, 0.988482, 0.949465, 0.900394, 0.855404, 0.819467", \
                            "1.03157, 1.02869, 1.00895, 0.970321, 0.921679, 0.876018, 0.840081", \
                            "1.04361, 1.04099, 1.02113, 0.982168, 0.933471, 0.888063, 0.852137", \
                            "1.04751, 1.04444, 1.02507, 0.986249, 0.93764, 0.891979, 0.856042" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          index_2 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          values  ( \
                            "0.518177, 0.514074, 0.483362, 0.428197, 0.34023, 0.23223, 0.100898", \
                            "0.523226, 0.516736, 0.488521, 0.433191, 0.345433, 0.238213, 0.104776", \
                            "0.530728, 0.526713, 0.497101, 0.441133, 0.353606, 0.244368, 0.113589", \
                            "0.543257, 0.54054, 0.510235, 0.455037, 0.364771, 0.258247, 0.127525", \
                            "0.583231, 0.57816, 0.552827, 0.498124, 0.403865, 0.290763, 0.16863", \
                            "0.662574, 0.656964, 0.631477, 0.575476, 0.482317, 0.369666, 0.247629", \
                            "0.748484, 0.742885, 0.717508, 0.661397, 0.56859, 0.45562, 0.333355" \
                          )
                          }
                 }
          }
          bus(WEN)   {
                  bus_type             : Q_BUS;
                  direction            : input;
                  capacitance          : 0.00819589;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          index_2 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          values  ( \
                            "0, 0, 0, 0, 0, 0.004499, 0.040832", \
                            "0, 0, 0, 0, 0, 0, 0.034309", \
                            "0, 0, 0, 0, 0, 0, 0.02695", \
                            "0, 0, 0, 0, 0, 0, 0.012837", \
                            "0, 0, 0, 0, 0, 0, 0", \
                            "0, 0, 0, 0, 0, 0, 0", \
                            "0, 0, 0, 0, 0, 0, 0" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          index_2 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          values  ( \
                            "0.293106, 0.295999, 0.326403, 0.381271, 0.468655, 0.577885, 0.710149", \
                            "0.286528, 0.291863, 0.320617, 0.375716, 0.462638, 0.570801, 0.703153", \
                            "0.279389, 0.282469, 0.312763, 0.367884, 0.456236, 0.564762, 0.695277", \
                            "0.26588, 0.268032, 0.298771, 0.354629, 0.444224, 0.54956, 0.680438", \
                            "0.245136, 0.248752, 0.278322, 0.333058, 0.42471, 0.53097, 0.662123", \
                            "0.233261, 0.236653, 0.266737, 0.321508, 0.409684, 0.517627, 0.648054", \
                            "0.230608, 0.232777, 0.263369, 0.318901, 0.40898, 0.514965, 0.646129" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          index_2 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          values  ( \
                            "0.986656, 0.981684, 0.9636, 0.925507, 0.873532, 0.829268, 0.794585", \
                            "0.991749, 0.987096, 0.968682, 0.930589, 0.879021, 0.83435, 0.797742", \
                            "0.999592, 0.99462, 0.976525, 0.938443, 0.887161, 0.842193, 0.805574", \
                            "1.0135, 1.00851, 0.990429, 0.952336, 0.900394, 0.856097, 0.819467", \
                            "1.03404, 1.02906, 1.01098, 0.972884, 0.921679, 0.876645, 0.840081", \
                            "1.04618, 1.04119, 1.02311, 0.985017, 0.933471, 0.888767, 0.852137", \
                            "1.05006, 1.04508, 1.02699, 0.9889, 0.93764, 0.892661, 0.856042" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          index_2 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          values  ( \
                            "0.522533, 0.514074, 0.485001, 0.428197, 0.34023, 0.23223, 0.100898", \
                            "0.523457, 0.516736, 0.490127, 0.433191, 0.345433, 0.238213, 0.105256", \
                            "0.5313, 0.526713, 0.497992, 0.441133, 0.353606, 0.244368, 0.113589", \
                            "0.543642, 0.54054, 0.511863, 0.455037, 0.365178, 0.258247, 0.127525", \
                            "0.568546, 0.561572, 0.532466, 0.475849, 0.384923, 0.278575, 0.148782", \
                            "0.577665, 0.573111, 0.544555, 0.487531, 0.400345, 0.290653, 0.160112", \
                            "0.580195, 0.576708, 0.548372, 0.491447, 0.40161, 0.296252, 0.164158" \
                          )
                          }
                 }
          }
          bus(A)   {
                  bus_type             : A_BUS;
                  direction            : input;
                  capacitance          : 0.037943;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          index_2 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          values  ( \
                            "0.6391, 0.635767, 0.628727, 0.64449, 0.695629, 0.758516, 0.815023", \
                            "0.633094, 0.629398, 0.62216, 0.640915, 0.69124, 0.753181, 0.808148", \
                            "0.622468, 0.620961, 0.61358, 0.632687, 0.68387, 0.74283, 0.79728", \
                            "0.613316, 0.607211, 0.596013, 0.616715, 0.667513, 0.731192, 0.782078", \
                            "0.592119, 0.585321, 0.57827, 0.598994, 0.649704, 0.711876, 0.767173", \
                            "0.579722, 0.574134, 0.56793, 0.585695, 0.636075, 0.698544, 0.751443", \
                            "0.576851, 0.568898, 0.564487, 0.583605, 0.631026, 0.691031, 0.74789" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          index_2 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          values  ( \
                            "0.84447, 0.847792, 0.864017, 0.906741, 0.978747, 1.06931, 1.17623", \
                            "0.834702, 0.840686, 0.85778, 0.900647, 0.972334, 1.06431, 1.16975", \
                            "0.828795, 0.83413, 0.851719, 0.892771, 0.964733, 1.05553, 1.16245", \
                            "0.81576, 0.81972, 0.836385, 0.879659, 0.949146, 1.04259, 1.14858", \
                            "0.796961, 0.800305, 0.817927, 0.859067, 0.930039, 1.02246, 1.12916", \
                            "0.782804, 0.787974, 0.805123, 0.846802, 0.917642, 1.01044, 1.11628", \
                            "0.780054, 0.783717, 0.80014, 0.841929, 0.914056, 1.00567, 1.11191" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          index_2 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          values  ( \
                            "0.618761, 0.623832, 0.627682, 0.622028, 0.621731, 0.619872, 0.617958", \
                            "0.623161, 0.6281, 0.632005, 0.626406, 0.626109, 0.62425, 0.622336", \
                            "0.644094, 0.649077, 0.652982, 0.647372, 0.647075, 0.645227, 0.643313", \
                            "0.683782, 0.688809, 0.692714, 0.687104, 0.686818, 0.684959, 0.683056", \
                            "0.74184, 0.746867, 0.750772, 0.745162, 0.744876, 0.743017, 0.741103", \
                            "0.813219, 0.818587, 0.822899, 0.81455, 0.817003, 0.815144, 0.813241", \
                            "0.879868, 0.885203, 0.889086, 0.880759, 0.88319, 0.881331, 0.879428" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          index_2 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          values  ( \
                            "0.642103, 0.638528, 0.621291, 0.592625, 0.582934, 0.583803, 0.592713", \
                            "0.646481, 0.642895, 0.625669, 0.597003, 0.587312, 0.588192, 0.597091", \
                            "0.667524, 0.663883, 0.646074, 0.61798, 0.608289, 0.609169, 0.618068", \
                            "0.707256, 0.703615, 0.686367, 0.657712, 0.648021, 0.648901, 0.6578", \
                            "0.76538, 0.761662, 0.743842, 0.71577, 0.706079, 0.706948, 0.715308", \
                            "0.83743, 0.8338, 0.815991, 0.787897, 0.778217, 0.779086, 0.787985", \
                            "0.903562, 0.899987, 0.882761, 0.854095, 0.844404, 0.845273, 0.854172" \
                          )
                          }
                 }
          }
          bus(D)   {
                  bus_type             : Q_BUS;
                  memory_write() {
                          address      : A;
                          clocked_on   : "CLK";
                  }
                  direction            : input;
                  capacitance          : 0.0177682;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          index_2 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          values  ( \
                            "0.600622, 0.606474, 0.623766, 0.644688, 0.65131, 0.641443, 0.61512", \
                            "0.594319, 0.596772, 0.617089, 0.639463, 0.647328, 0.635646, 0.607497", \
                            "0.586806, 0.592218, 0.608795, 0.627022, 0.635811, 0.622567, 0.598697", \
                            "0.570713, 0.57893, 0.596299, 0.615835, 0.623843, 0.614097, 0.583572", \
                            "0.551617, 0.557128, 0.577368, 0.596024, 0.603119, 0.592757, 0.564839", \
                            "0.539286, 0.546425, 0.562639, 0.583352, 0.589666, 0.580228, 0.552431", \
                            "0.53647, 0.542817, 0.560593, 0.580327, 0.587642, 0.572011, 0.550528" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          index_2 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          values  ( \
                            "0.123269, 0.121989, 0.144582, 0.208949, 0.302346, 0.430694, 0.582758", \
                            "0.11654, 0.117391, 0.138156, 0.202542, 0.2959, 0.424369, 0.576257", \
                            "0.10933, 0.109747, 0.13092, 0.196985, 0.288233, 0.417395, 0.568667", \
                            "0.0957924, 0.0955053, 0.116328, 0.182911, 0.27511, 0.403491, 0.55462", \
                            "0.0762432, 0.0750299, 0.0966163, 0.160065, 0.255327, 0.382899, 0.534875", \
                            "0.062898, 0.0636328, 0.084392, 0.148851, 0.242224, 0.369523, 0.522555", \
                            "0.0593846, 0.0596277, 0.0807554, 0.144813, 0.238212, 0.3663, 0.518595" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          index_2 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          values  ( \
                            "0.508574, 0.505285, 0.487674, 0.464453, 0.459668, 0.470657, 0.497442", \
                            "0.516263, 0.512622, 0.495143, 0.470899, 0.464475, 0.47542, 0.504218", \
                            "0.522302, 0.517286, 0.502755, 0.480513, 0.472934, 0.486112, 0.512292", \
                            "0.538626, 0.530805, 0.5137, 0.491205, 0.48609, 0.49665, 0.526944", \
                            "0.558525, 0.552904, 0.535381, 0.509454, 0.506517, 0.516549, 0.543653", \
                            "0.56903, 0.562683, 0.548152, 0.525932, 0.519574, 0.529364, 0.559251", \
                            "0.573221, 0.56727, 0.551991, 0.528968, 0.520498, 0.534666, 0.559603" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          index_2 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          values  ( \
                            "0.743149, 0.742555, 0.721776, 0.656953, 0.560934, 0.436018, 0.287485", \
                            "0.749683, 0.748913, 0.728123, 0.663289, 0.56727, 0.442365, 0.293832", \
                            "0.757284, 0.757009, 0.735977, 0.669416, 0.575146, 0.450219, 0.301686", \
                            "0.770033, 0.770385, 0.749045, 0.682781, 0.588511, 0.463595, 0.315062", \
                            "0.789404, 0.789481, 0.76868, 0.703857, 0.607838, 0.482922, 0.334389", \
                            "0.803308, 0.802758, 0.781737, 0.716903, 0.620895, 0.496562, 0.347468", \
                            "0.806058, 0.805662, 0.784597, 0.719807, 0.623788, 0.498872, 0.350416" \
                          )
                          }
                 }
        }
          cell_leakage_power : 0.0001056015;
}
}
