/*
 * Copyright 2022 GlobalFoundries PDK Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 *      Single Port SRAM cell name : gf180mcu_fd_ip_sram__sram64x8m8wm1
 *      Technology                 : GF 180nm 5V Green
 *
 *      ---------
 *      Pin name:
 *      ---------
 *      Input Pins : CLK CEN GWEN WEN[7:0] A[5:0] D[7:0]
 *      Inout Pins:  VDD VSS
 *      Output Pins: Q[7:0]
 *
 *     Revision History: 1.0 (Initial Release: June 20, 2014)
 */

library(gf180mcu_fd_ip_sram__sram64x8m8wm1__ss_125C_4v50) {
        delay_model             : table_lookup;
        revision                : 1.0;
        date                    : "June 20, 2014";
        comment                 : "GF 180nm 5V Green";
        voltage_unit            : "1V";
        time_unit               : "1ns";
        current_unit            : "1mA";
        leakage_power_unit      : "1mW";
        nom_process             : 1;
        nom_temperature         : 125;
        nom_voltage             : 4.5;
        capacitive_load_unit    (1,pf);
        pulling_resistance_unit : "1kohm";

        /* additional header data */
        default_fanout_load            : 1;
        default_inout_pin_cap          : 0.045;
        default_input_pin_cap          : 0.045;
        default_output_pin_cap         : 0;
        default_max_transition         : 2.775;
        default_cell_leakage_power     : 0;

         /* default attributes */
         slew_derate_from_library      : 1.000;
         slew_lower_threshold_pct_fall : 10.000;
         slew_upper_threshold_pct_fall : 90.000;
         slew_lower_threshold_pct_rise : 10.000;
         slew_upper_threshold_pct_rise : 90.000;
         input_threshold_pct_fall      : 50.000;
         input_threshold_pct_rise      : 50.000;
         output_threshold_pct_fall     : 50.000;
         output_threshold_pct_rise     : 50.000;
         default_leakage_power_density : 0;

        /* k-factors */
        k_process_recovery_fall        : 1;
        k_process_recovery_rise        : 1;
        k_process_cell_fall            : 1;
        k_process_cell_leakage_power   : 0;
        k_process_cell_rise            : 1;
        k_process_fall_transition      : 1;
        k_process_hold_fall            : 1;
        k_process_hold_rise            : 1;
        k_process_internal_power       : 0;
        k_process_min_pulse_width_high : 1;
        k_process_min_pulse_width_low  : 1;
        k_process_setup_fall           : 1;
        k_process_setup_rise           : 1;
        k_process_wire_cap             : 0;
        k_process_wire_res             : 0;
        k_process_pin_cap              : 0;
        k_process_rise_transition      : 1;
        k_temp_cell_fall               : 0.000;
        k_temp_cell_rise               : 0.000;
        k_temp_hold_fall               : 0.000;
        k_temp_hold_rise               : 0.000;
        k_temp_min_pulse_width_high    : 0.000;
        k_temp_min_pulse_width_low     : 0.000;
        k_temp_min_period              : 0.000;
        k_temp_rise_propagation        : 0.000;
        k_temp_fall_propagation        : 0.000;
        k_temp_rise_transition         : 0.000;
        k_temp_fall_transition         : 0.000;
        k_temp_recovery_fall           : 0.000;
        k_temp_recovery_rise           : 0.000;
        k_temp_setup_fall              : 0.000;
        k_temp_setup_rise              : 0.000;
        k_volt_cell_fall               : 0.000;
        k_volt_cell_rise               : 0.000;
        k_volt_hold_fall               : 0.000;
        k_volt_hold_rise               : 0.000;
        k_volt_min_pulse_width_high    : 0.000;
        k_volt_min_pulse_width_low     : 0.000;
        k_volt_min_period              : 0.000;
        k_volt_recovery_fall           : 0.000;
        k_volt_recovery_rise           : 0.000;
        k_volt_setup_fall              : 0.000;
        k_volt_setup_rise              : 0.000;
        k_volt_rise_propagation        : 0.000;
        k_volt_fall_propagation        : 0.000;
        k_volt_rise_transition         : 0.000;
        k_volt_fall_transition         : 0.000;

         voltage_map (VDD, 4.5);
         voltage_map (VSS, 0.00);
         operating_conditions(ss_4p5v_125C) {
                process       : 1;
                temperature   : 125;
                voltage       : 4.5;
                tree_type     : balanced_tree;
         }

         default_operating_conditions : ss_4p5v_125C;
         wire_load("Estimate") {
                resistance    : 1.44e-05;
                capacitance   : 0.00018;
                area          : 1.7;
                slope         : 500;
                fanout_length (1,500);
         }
         power_lut_template(power_template) {
            variable_1 : input_transition_time;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(q_delay_template) {
            variable_1 : input_net_transition;
            variable_2 : total_output_net_capacitance;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
                 index_2 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(q_slew_template) {
            variable_1 : total_output_net_capacitance;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(constraint_template) {
            variable_1 : related_pin_transition;
            variable_2 : constrained_pin_transition;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
                 index_2 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }

         library_features(report_delay_calculation);

         type (A_BUS) {
                base_type : array;
                data_type : bit;
                bit_width : 6;
                bit_from  : 5;
                bit_to    : 0;
                downto    : true;
         }
         type (Q_BUS) {
                base_type : array;
                data_type : bit;
                bit_width : 8;
                bit_from  : 7;
                bit_to    : 0;
                downto    : true;
         }
 cell(gf180mcu_fd_ip_sram__sram64x8m8wm1) {
        area             : 100571.5568;
        dont_use         : TRUE;
        dont_touch       : TRUE;
        interface_timing : TRUE;
        memory() {
                type          : ram;
                address_width : 6;
                word_width    : 8;
        }

                 bus(Q)   {
                  bus_type             : Q_BUS;
                  direction            : output;
                  max_capacitance      : 1.202;
                  memory_read() {
                        address        : A;
                  }
                  timing() {
                          related_pin  : "CLK";
                          timing_type  : rising_edge;
                          timing_sense : non_unate;
       		  when : "((!CEN) & (GWEN))";
        	  sdf_cond : "CEN== 1'b0 && GWEN== 1'b1";
                          cell_rise(q_delay_template) {
			  index_1 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
			  index_2 ("0.01, 0.03143, 0.1067, 0.2504, 0.4742, 0.7883, 1.202");
                          values  ( \
                            "7.79676, 7.83144, 7.9422, 8.12112, 8.3874, 8.74548, 9.22092", \
                            "7.797, 7.83456, 7.94016, 8.12904, 8.38704, 8.75496, 9.22416", \
                            "7.8066, 7.84608, 7.95312, 8.13216, 8.39616, 8.76336, 9.23904", \
                            "7.82064, 7.85628, 7.96788, 8.14608, 8.41296, 8.7726, 9.25188", \
                            "7.84728, 7.88988, 7.98612, 8.17692, 8.43252, 8.79636, 9.28092", \
                            "7.87104, 7.8972, 8.00604, 8.18868, 8.4576, 8.82072, 9.28716", \
                            "7.85256, 7.88136, 7.99092, 8.17272, 8.44044, 8.80308, 9.27576" \
                          )
                          }
                          rise_transition(q_slew_template) {
                          index_1 ("0.01, 0.03143, 0.1067, 0.2504, 0.4742, 0.7883, 1.202");
                          values  ( \
  	                     "0.298332, 0.348864, 0.537108, 0.864324, 1.3758, 2.13288, 3.12072" \
                          )

                          }
                          cell_fall(q_delay_template) {
                          index_1 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                          index_2 ("0.01, 0.03143, 0.1067, 0.2504, 0.4742, 0.7883, 1.202");
                          values  ( \
                            "8.0592, 8.09436, 8.2002, 8.35836, 8.57424, 8.83188, 9.16764", \
                            "8.05632, 8.1, 8.20632, 8.37084, 8.57724, 8.84196, 9.17364", \
                            "8.06952, 8.10372, 8.2062, 8.3688, 8.58696, 8.8518, 9.1848", \
                            "8.07972, 8.11596, 8.22552, 8.38464, 8.59536, 8.86188, 9.20016", \
                            "8.10528, 8.1474, 8.24304, 8.41368, 8.6214, 8.88516, 9.22524", \
                            "8.13288, 8.15988, 8.26692, 8.42676, 8.64492, 8.90916, 9.24072", \
                            "8.11536, 8.14392, 8.2524, 8.41104, 8.62872, 8.89344, 9.22032" \
                          )
                          }
                          fall_transition(q_slew_template) {
                          index_1 ("0.01, 0.03143, 0.1067, 0.2504, 0.4742, 0.7883, 1.202");
                          values  ( \
                            "0.303324, 0.348096, 0.4623, 0.673896, 0.975348, 1.39968, 1.94952" \
                          )
                          }
                  }
          }
          pin(CLK)   {
                  direction            : input;
                  capacitance          : 0.316948;
                  clock                : true;
                  max_transition       : 2.775;
                  min_pulse_width_high : 3.96246;
                  min_pulse_width_low  : 4.846305;
                  min_period           : 10.279635;

/* WRITE POWER */
             internal_power() {
              when : "!CEN & !GWEN & (!WEN[0] | !WEN[1] | !WEN[2] | !WEN[3] | !WEN[4] | !WEN[5] | !WEN[6] | !WEN[7])";
              rise_power(power_template) {
                index_1 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                values  ("701.798, 701.798, 701.798, 701.798, 701.798, 701.798, 701.798");
              }
              fall_power(power_template) {
                index_1 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                values  ("701.798, 701.798, 701.798, 701.798, 701.798, 701.798, 701.798");
              }
             }
/* DISABLED POWER */
             internal_power() {
              when : "CEN";
              rise_power(power_template) {
                index_1 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                values  ("0.000140526, 0.000140526, 0.000140526, 0.000140526, 0.000140526, 0.000140526, 0.000140526");
              }
              fall_power(power_template) {
                index_1 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                values  ("0.000140526, 0.000140526, 0.000140526, 0.000140526, 0.000140526, 0.000140526, 0.000140526");
              }
             }
/* READ POWER */
             internal_power() {
             when : "!CEN & GWEN";
             rise_power(power_template) {
                index_1 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                values  ("630.697, 630.697, 630.697, 630.697, 630.697, 630.697, 630.697");
              }
              fall_power(power_template) {
                index_1 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                values  ("630.697, 630.697, 630.697, 630.697, 630.697, 630.697, 630.697");
              }
             }
          }

          pg_pin(VDD) {
                  voltage_name     : VDD;
                  pg_type          : primary_power;
          }
          pg_pin(VSS) {
                  voltage_name     : VSS;
                  pg_type          : primary_ground;
          }
          pin(CEN)   {
                  direction            : input;
                  capacitance          : 0.0192375;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                          index_2 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                          values  ( \
                            "0.662266, 0.655732, 0.648571, 0.672375, 0.736923, 0.805728, 0.87307", \
                            "0.655853, 0.647262, 0.640288, 0.664664, 0.731434, 0.802813, 0.855459", \
                            "0.648131, 0.640926, 0.632742, 0.653367, 0.70939, 0.77341, 0.835032", \
                            "0.646778, 0.639661, 0.631642, 0.652784, 0.707454, 0.747527, 0.793276", \
                            "0.647009, 0.639067, 0.631235, 0.652168, 0.706794, 0.744777, 0.789965", \
                            "0.64537, 0.638099, 0.631312, 0.652597, 0.70499, 0.747604, 0.789052", \
                            "0.646195, 0.639287, 0.63041, 0.650694, 0.706585, 0.748407, 0.786874" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                          index_2 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                          values  ( \
                            "0.58663, 0.592086, 0.615978, 0.675576, 0.778932, 0.902352, 1.04327", \
                            "0.582736, 0.588038, 0.613228, 0.67111, 0.774972, 0.902462, 1.03306", \
                            "0.579821, 0.585541, 0.610566, 0.668987, 0.772332, 0.895741, 1.03041", \
                            "0.578798, 0.584562, 0.609598, 0.668008, 0.771408, 0.900724, 1.03569", \
                            "0.578545, 0.583792, 0.608553, 0.66737, 0.770737, 0.900306, 1.03494", \
                            "0.577445, 0.582989, 0.606848, 0.666446, 0.769791, 0.895829, 1.0279", \
                            "0.577247, 0.582703, 0.60764, 0.666248, 0.769604, 0.893035, 1.03399" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                          index_2 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                          values  ( \
                            "1.85053, 1.85614, 1.86516, 1.84382, 1.79036, 1.74955, 1.7083", \
                            "1.8667, 1.87451, 1.88221, 1.86153, 1.80587, 1.76704, 1.7413", \
                            "1.89453, 1.90179, 1.90993, 1.88925, 1.83326, 1.79432, 1.76319", \
                            "1.94579, 1.95283, 1.96086, 1.93974, 1.88507, 1.84503, 1.80488", \
                            "2.03137, 2.0394, 2.04721, 2.0262, 1.97164, 1.93369, 1.88848", \
                            "2.11464, 2.1219, 2.12872, 2.10738, 2.05502, 2.01245, 1.97098", \
                            "2.17426, 2.18119, 2.1901, 2.16975, 2.11387, 2.07207, 2.03357" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                          index_2 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                          values  ( \
                            "1.91785, 1.91246, 1.88859, 1.82897, 1.72557, 1.60215, 1.46124", \
                            "1.93523, 1.92995, 1.90476, 1.84679, 1.74295, 1.61546, 1.48489", \
                            "1.96284, 1.95712, 1.93215, 1.87363, 1.77034, 1.64692, 1.51228", \
                            "2.01377, 2.00794, 1.98297, 1.92456, 1.82116, 1.6918, 1.55683", \
                            "2.0999, 2.09462, 2.06987, 2.01102, 1.90773, 1.77815, 1.64351", \
                            "2.18251, 2.17701, 2.15314, 2.09352, 1.99023, 1.86417, 1.73217", \
                            "2.24323, 2.23773, 2.21287, 2.15424, 2.05084, 1.92742, 1.78651" \
                          )
                          }
                 }
          }
          pin(GWEN)   {
                  direction            : input;
                  capacitance          : 0.0515207;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                          index_2 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                          values  ( \
                            "0.936232, 0.942337, 0.965932, 1.02169, 1.10787, 1.21504, 1.31648", \
                            "0.931018, 0.936584, 0.959002, 1.01555, 1.10259, 1.20652, 1.30625", \
                            "0.907478, 0.912967, 0.935242, 0.991947, 1.07917, 1.18538, 1.28381", \
                            "0.854887, 0.860453, 0.882728, 0.939048, 1.02665, 1.13286, 1.22993", \
                            "0.769791, 0.775632, 0.798622, 0.854953, 0.942128, 1.04609, 1.14621", \
                            "0.694727, 0.700018, 0.723096, 0.779361, 0.866294, 0.973093, 1.07052", \
                            "0.630586, 0.636482, 0.659593, 0.715792, 0.803077, 0.909513, 1.00838" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                          index_2 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                          values  ( \
                            "1.01498, 1.02389, 1.05742, 1.13311, 1.26206, 1.42813, 1.61744", \
                            "1.00992, 1.01794, 1.05226, 1.12954, 1.25522, 1.41812, 1.6115", \
                            "0.985556, 0.994103, 1.02773, 1.10347, 1.23159, 1.39843, 1.5884", \
                            "0.933174, 0.941589, 0.97559, 1.05094, 1.1778, 1.34651, 1.53472", \
                            "0.848485, 0.857032, 0.890681, 0.966075, 1.09546, 1.25941, 1.45244", \
                            "0.77319, 0.781077, 0.816948, 0.890791, 1.0195, 1.18556, 1.37577", \
                            "0.709687, 0.717882, 0.751828, 0.827266, 0.955383, 1.12225, 1.31032" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                          index_2 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                          values  ( \
                            "1.35762, 1.35047, 1.32759, 1.27809, 1.2148, 1.16164, 1.12725", \
                            "1.35784, 1.3508, 1.32792, 1.27765, 1.21417, 1.16645, 1.13088", \
                            "1.37016, 1.36323, 1.34035, 1.29008, 1.22768, 1.17443, 1.14136", \
                            "1.3772, 1.37027, 1.34739, 1.29778, 1.23471, 1.18147, 1.14935", \
                            "1.39898, 1.39205, 1.36917, 1.31912, 1.25649, 1.20816, 1.16896", \
                            "1.4157, 1.40877, 1.38589, 1.33595, 1.27424, 1.22002, 1.18563", \
                            "1.40877, 1.40184, 1.37885, 1.32858, 1.26588, 1.21305, 1.17856" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                          index_2 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                          values  ( \
                            "0.676115, 0.668371, 0.629684, 0.556721, 0.431299, 0.271598, 0.0865843", \
                            "0.674069, 0.670054, 0.632467, 0.554928, 0.428736, 0.277585, 0.0848342", \
                            "0.690415, 0.681263, 0.645128, 0.56914, 0.44165, 0.284306, 0.0973236", \
                            "0.697004, 0.686994, 0.652597, 0.576125, 0.453112, 0.291357, 0.107015", \
                            "0.719202, 0.707817, 0.674883, 0.59972, 0.471911, 0.315777, 0.124529", \
                            "0.815705, 0.806619, 0.771386, 0.697125, 0.564465, 0.403051, 0.223973", \
                            "0.915123, 0.906059, 0.871948, 0.796554, 0.663894, 0.502535, 0.322322" \
                          )
                          }
                 }
          }
          bus(WEN)   {
                  bus_type             : Q_BUS;
                  direction            : input;
                  capacitance          : 0.00826446;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                          index_2 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                          values  ( \
                            "0, 0, 0, 0, 0, 0, 0", \
                            "0, 0, 0, 0, 0, 0, 0", \
                            "0, 0, 0, 0, 0, 0, 0", \
                            "0, 0, 0, 0, 0, 0, 0", \
                            "0, 0, 0, 0, 0, 0, 0", \
                            "0, 0, 0, 0, 0, 0, 0", \
                            "0, 0, 0, 0, 0, 0, 0" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                          index_2 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                          values  ( \
                            "0.36553, 0.374077, 0.411444, 0.485672, 0.610951, 0.76857, 0.955009", \
                            "0.367719, 0.372504, 0.409134, 0.487553, 0.613294, 0.762432, 0.955559", \
                            "0.352572, 0.361394, 0.397056, 0.473759, 0.599236, 0.757768, 0.946033", \
                            "0.344014, 0.353705, 0.387607, 0.46409, 0.585442, 0.747967, 0.932745", \
                            "0.320716, 0.329989, 0.365167, 0.440495, 0.56782, 0.72347, 0.914397", \
                            "0.30668, 0.314941, 0.349217, 0.424963, 0.549945, 0.707102, 0.896137", \
                            "0.317537, 0.32439, 0.357929, 0.435402, 0.562265, 0.719191, 0.902385" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                          index_2 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                          values  ( \
                            "1.35762, 1.35267, 1.32869, 1.27809, 1.21549, 1.16378, 1.12796", \
                            "1.35784, 1.353, 1.32902, 1.27765, 1.21584, 1.16645, 1.13088", \
                            "1.37016, 1.36543, 1.34145, 1.29008, 1.22826, 1.17655, 1.14136", \
                            "1.3772, 1.37247, 1.34849, 1.29778, 1.23529, 1.18357, 1.14935", \
                            "1.39898, 1.3926, 1.36917, 1.31912, 1.25649, 1.20816, 1.16896", \
                            "1.4157, 1.41097, 1.38699, 1.33595, 1.27424, 1.22206, 1.18624", \
                            "1.40877, 1.40382, 1.37984, 1.32858, 1.26665, 1.21495, 1.17912" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                          index_2 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                          values  ( \
                            "0.67859, 0.668371, 0.630267, 0.556721, 0.431299, 0.271598, 0.0865843", \
                            "0.676214, 0.670054, 0.632918, 0.555071, 0.431178, 0.277585, 0.0848342", \
                            "0.690415, 0.681263, 0.645128, 0.56914, 0.443542, 0.284306, 0.0973236", \
                            "0.697004, 0.686994, 0.653433, 0.576125, 0.453112, 0.291357, 0.107015", \
                            "0.719202, 0.707817, 0.674883, 0.59972, 0.471911, 0.315777, 0.124529", \
                            "0.734129, 0.72578, 0.68981, 0.614647, 0.488642, 0.330946, 0.143141", \
                            "0.726517, 0.718344, 0.684684, 0.607519, 0.481943, 0.32274, 0.141259" \
                          )
                          }
                 }
          }
          bus(A)   {
                  bus_type             : A_BUS;
                  direction            : input;
                  capacitance          : 0.038237;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                          index_2 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                          values  ( \
                            "0.883278, 0.879153, 0.870804, 0.893816, 0.961477, 1.04106, 1.1054", \
                            "0.881485, 0.878647, 0.869286, 0.898491, 0.963468, 1.03952, 1.10538", \
                            "0.867768, 0.864677, 0.855294, 0.8844, 0.949729, 1.02858, 1.09582", \
                            "0.856273, 0.854755, 0.849486, 0.875347, 0.940907, 1.01572, 1.08074", \
                            "0.841599, 0.833283, 0.824538, 0.853875, 0.918434, 0.996435, 1.063", \
                            "0.818928, 0.814814, 0.808082, 0.829983, 0.899954, 0.978461, 1.04636", \
                            "0.827695, 0.824318, 0.819665, 0.846615, 0.91168, 0.988317, 1.05569" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                          index_2 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                          values  ( \
                            "1.09498, 1.09688, 1.12429, 1.18862, 1.29613, 1.43363, 1.58598", \
                            "1.09621, 1.0977, 1.12691, 1.18801, 1.29558, 1.43088, 1.5873", \
                            "1.08116, 1.0869, 1.1156, 1.17742, 1.28337, 1.42164, 1.57575", \
                            "1.07147, 1.07566, 1.10472, 1.16758, 1.27435, 1.41108, 1.56409", \
                            "1.04974, 1.0559, 1.08309, 1.14396, 1.25182, 1.38864, 1.54242", \
                            "1.03322, 1.03656, 1.06543, 1.12897, 1.23465, 1.37093, 1.52548", \
                            "1.04319, 1.04788, 1.0756, 1.13808, 1.24391, 1.38204, 1.53549" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                          index_2 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                          values  ( \
                            "0.792473, 0.799898, 0.801306, 0.782672, 0.774763, 0.769164, 0.76351", \
                            "0.798171, 0.805464, 0.807323, 0.788425, 0.780527, 0.774917, 0.769263", \
                            "0.823911, 0.831809, 0.833646, 0.81477, 0.803517, 0.801196, 0.795597", \
                            "0.872124, 0.879989, 0.88187, 0.862939, 0.851697, 0.84931, 0.843777", \
                            "0.961554, 0.968847, 0.970706, 0.951808, 0.940555, 0.938179, 0.932646", \
                            "1.04015, 1.04801, 1.04986, 1.03097, 1.01972, 1.0174, 1.01181", \
                            "1.11564, 1.12273, 1.12457, 1.10013, 1.09777, 1.09216, 1.08651" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                          index_2 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                          values  ( \
                            "0.830291, 0.824835, 0.796521, 0.752928, 0.726154, 0.721325, 0.728321", \
                            "0.83644, 0.830599, 0.802285, 0.758681, 0.731907, 0.727067, 0.734074", \
                            "0.862598, 0.856922, 0.828608, 0.785015, 0.758241, 0.753401, 0.760408", \
                            "0.910888, 0.905124, 0.876799, 0.833195, 0.806421, 0.801581, 0.808588", \
                            "0.999493, 0.993806, 0.965679, 0.922064, 0.89529, 0.89045, 0.897457", \
                            "1.07878, 1.07313, 1.04482, 1.00122, 0.974446, 0.969628, 0.976624", \
                            "1.15347, 1.14852, 1.11953, 1.07593, 1.04916, 1.04432, 1.05133" \
                          )
                          }
                 }
          }
          bus(D)   {
                  bus_type             : Q_BUS;
                  memory_write() {
                          address      : A;
                          clocked_on   : "CLK";
                  }
                  direction            : input;
                  capacitance          : 0.0178039;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                          index_2 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                          values  ( \
                            "0.78331, 0.785543, 0.812493, 0.838816, 0.840587, 0.817839, 0.759132", \
                            "0.78309, 0.789052, 0.815232, 0.840015, 0.843216, 0.81455, 0.757449", \
                            "0.770814, 0.776688, 0.800525, 0.82896, 0.830236, 0.800811, 0.749694", \
                            "0.759275, 0.769197, 0.789976, 0.814693, 0.819929, 0.791714, 0.73766", \
                            "0.737451, 0.74536, 0.767932, 0.792022, 0.796323, 0.771166, 0.714197", \
                            "0.720401, 0.726671, 0.752895, 0.777711, 0.78045, 0.753258, 0.691779", \
                            "0.729333, 0.736175, 0.763532, 0.789283, 0.788172, 0.767052, 0.710468" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                          index_2 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                          values  ( \
                            "0.104867, 0.102032, 0.138553, 0.227009, 0.369853, 0.550132, 0.772519", \
                            "0.106707, 0.104456, 0.137601, 0.225294, 0.368082, 0.550099, 0.772838", \
                            "0.098813, 0.0920689, 0.126606, 0.213378, 0.355971, 0.53845, 0.760562", \
                            "0.0858385, 0.0830819, 0.116661, 0.203371, 0.347842, 0.528121, 0.750442", \
                            "0.0608597, 0.0617991, 0.0939356, 0.180651, 0.325017, 0.505714, 0.727826", \
                            "0.044748, 0.042834, 0.0777282, 0.161837, 0.30833, 0.488686, 0.711557", \
                            "0.053416, 0.053691, 0.0871211, 0.173946, 0.316657, 0.498971, 0.723206" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                          index_2 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                          values  ( \
                            "0.660451, 0.657063, 0.625416, 0.60456, 0.599357, 0.622281, 0.681505", \
                            "0.660957, 0.649693, 0.627605, 0.60214, 0.601887, 0.623612, 0.683518", \
                            "0.667975, 0.66242, 0.637747, 0.612216, 0.609312, 0.630311, 0.690789", \
                            "0.682616, 0.673794, 0.648109, 0.622853, 0.620664, 0.640893, 0.703934", \
                            "0.703076, 0.693638, 0.671066, 0.646085, 0.64526, 0.664257, 0.724636", \
                            "0.719136, 0.711821, 0.689546, 0.66297, 0.661606, 0.685124, 0.740146", \
                            "0.710303, 0.699116, 0.678007, 0.651695, 0.650903, 0.672793, 0.727188" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                          index_2 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                          values  ( \
                            "1.01388, 1.01649, 0.9801, 0.893893, 0.750761, 0.568689, 0.349261", \
                            "1.01438, 1.01438, 0.981948, 0.89496, 0.751201, 0.569173, 0.349756", \
                            "1.02104, 1.02452, 0.990737, 0.903969, 0.760782, 0.578754, 0.359337", \
                            "1.03205, 1.03417, 1.00189, 0.914375, 0.771364, 0.589336, 0.369919", \
                            "1.05818, 1.05631, 1.02493, 0.938157, 0.79497, 0.612942, 0.393525", \
                            "1.07266, 1.07568, 1.04248, 0.955515, 0.812328, 0.6303, 0.410905", \
                            "1.06322, 1.06275, 1.03053, 0.943195, 0.799997, 0.61798, 0.398464" \
                          )
                          }
                 }
        }
          cell_leakage_power : 0.000140526;
}
}
