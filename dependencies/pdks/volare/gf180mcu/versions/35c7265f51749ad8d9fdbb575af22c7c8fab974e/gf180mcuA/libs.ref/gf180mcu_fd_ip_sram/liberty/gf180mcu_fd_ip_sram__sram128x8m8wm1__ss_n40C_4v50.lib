/*
 * Copyright 2022 GlobalFoundries PDK Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 *      Single Port SRAM cell name : gf180mcu_fd_ip_sram__sram128x8m8wm1
 *      Technology                 : GF 180nm 5V Green
 *
 *      ---------
 *      Pin name:
 *      ---------
 *      Input Pins : CLK CEN GWEN WEN[7:0] A[6:0] D[7:0]
 *      Inout Pins:  VDD VSS
 *      Output Pins: Q[7:0]
 *
 *     Revision History: 1.0 (Initial Release: June 20, 2014)
 */

library(gf180mcu_fd_ip_sram__sram128x8m8wm1__ss_n40C_4v50) {
        delay_model             : table_lookup;
        revision                : 1.0;
        date                    : "June 20, 2014";
        comment                 : "GF 180nm 5V Green";
        voltage_unit            : "1V";
        time_unit               : "1ns";
        current_unit            : "1mA";
        leakage_power_unit      : "1mW";
        nom_process             : 1;
        nom_temperature         : -40;
        nom_voltage             : 4.5;
        capacitive_load_unit    (1,pf);
        pulling_resistance_unit : "1kohm";

        /* additional header data */
        default_fanout_load            : 1;
        default_inout_pin_cap          : 0.045;
        default_input_pin_cap          : 0.045;
        default_output_pin_cap         : 0;
        default_max_transition         : 2.008;
        default_cell_leakage_power     : 0;

         /* default attributes */
         slew_derate_from_library      : 1.000;
         slew_lower_threshold_pct_fall : 10.000;
         slew_upper_threshold_pct_fall : 90.000;
         slew_lower_threshold_pct_rise : 10.000;
         slew_upper_threshold_pct_rise : 90.000;
         input_threshold_pct_fall      : 50.000;
         input_threshold_pct_rise      : 50.000;
         output_threshold_pct_fall     : 50.000;
         output_threshold_pct_rise     : 50.000;
         default_leakage_power_density : 0;

        /* k-factors */
        k_process_recovery_fall        : 1;
        k_process_recovery_rise        : 1;
        k_process_cell_fall            : 1;
        k_process_cell_leakage_power   : 0;
        k_process_cell_rise            : 1;
        k_process_fall_transition      : 1;
        k_process_hold_fall            : 1;
        k_process_hold_rise            : 1;
        k_process_internal_power       : 0;
        k_process_min_pulse_width_high : 1;
        k_process_min_pulse_width_low  : 1;
        k_process_setup_fall           : 1;
        k_process_setup_rise           : 1;
        k_process_wire_cap             : 0;
        k_process_wire_res             : 0;
        k_process_pin_cap              : 0;
        k_process_rise_transition      : 1;
        k_temp_cell_fall               : 0.000;
        k_temp_cell_rise               : 0.000;
        k_temp_hold_fall               : 0.000;
        k_temp_hold_rise               : 0.000;
        k_temp_min_pulse_width_high    : 0.000;
        k_temp_min_pulse_width_low     : 0.000;
        k_temp_min_period              : 0.000;
        k_temp_rise_propagation        : 0.000;
        k_temp_fall_propagation        : 0.000;
        k_temp_rise_transition         : 0.000;
        k_temp_fall_transition         : 0.000;
        k_temp_recovery_fall           : 0.000;
        k_temp_recovery_rise           : 0.000;
        k_temp_setup_fall              : 0.000;
        k_temp_setup_rise              : 0.000;
        k_volt_cell_fall               : 0.000;
        k_volt_cell_rise               : 0.000;
        k_volt_hold_fall               : 0.000;
        k_volt_hold_rise               : 0.000;
        k_volt_min_pulse_width_high    : 0.000;
        k_volt_min_pulse_width_low     : 0.000;
        k_volt_min_period              : 0.000;
        k_volt_recovery_fall           : 0.000;
        k_volt_recovery_rise           : 0.000;
        k_volt_setup_fall              : 0.000;
        k_volt_setup_rise              : 0.000;
        k_volt_rise_propagation        : 0.000;
        k_volt_fall_propagation        : 0.000;
        k_volt_rise_transition         : 0.000;
        k_volt_fall_transition         : 0.000;

         voltage_map (VDD, 4.5);
         voltage_map (VSS, 0.00);
         operating_conditions(ss_4p5v_m40C) {
                process       : 1;
                temperature   : -40;
                voltage       : 4.5;
                tree_type     : balanced_tree;
         }

         default_operating_conditions : ss_4p5v_m40C;
         wire_load("Estimate") {
                resistance    : 1.44e-05;
                capacitance   : 0.00018;
                area          : 1.7;
                slope         : 500;
                fanout_length (1,500);
         }
         power_lut_template(power_template) {
            variable_1 : input_transition_time;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(q_delay_template) {
            variable_1 : input_net_transition;
            variable_2 : total_output_net_capacitance;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
                 index_2 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(q_slew_template) {
            variable_1 : total_output_net_capacitance;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(constraint_template) {
            variable_1 : related_pin_transition;
            variable_2 : constrained_pin_transition;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
                 index_2 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }

         library_features(report_delay_calculation);

         type (A_BUS) {
                base_type : array;
                data_type : bit;
                bit_width : 7;
                bit_from  : 6;
                bit_to    : 0;
                downto    : true;
         }
         type (Q_BUS) {
                base_type : array;
                data_type : bit;
                bit_width : 8;
                bit_from  : 7;
                bit_to    : 0;
                downto    : true;
         }
 cell(gf180mcu_fd_ip_sram__sram128x8m8wm1) {
        area             : 116118.5168;
        dont_use         : TRUE;
        dont_touch       : TRUE;
        interface_timing : TRUE;
        memory() {
                type          : ram;
                address_width : 7;
                word_width    : 8;
        }

                 bus(Q)   {
                  bus_type             : Q_BUS;
                  direction            : output;
                  max_capacitance      : 1.253;
                  memory_read() {
                        address        : A;
                  }
                  timing() {
                          related_pin  : "CLK";
                          timing_type  : rising_edge;
                          timing_sense : non_unate;
       		  when : "((!CEN) & (GWEN))";
        	  sdf_cond : "CEN== 1'b0 && GWEN== 1'b1";
                          cell_rise(q_delay_template) {
			  index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
			  index_2 ("0.01, 0.03235, 0.1108, 0.2606, 0.4941, 0.8216, 1.253");
                          values  ( \
                            "5.39904, 5.42688, 5.50332, 5.63472, 5.82348, 6.08964, 6.43908", \
                            "5.403, 5.4312, 5.50812, 5.6388, 5.82588, 6.09204, 6.44388", \
                            "5.40648, 5.43768, 5.51196, 5.64564, 5.82084, 6.09276, 6.44256", \
                            "5.427, 5.45148, 5.52996, 5.6658, 5.85336, 6.11376, 6.46236", \
                            "5.44392, 5.47152, 5.54832, 5.67876, 5.8674, 6.13176, 6.48", \
                            "5.4672, 5.49012, 5.57232, 5.6982, 5.8884, 6.1566, 6.50496", \
                            "5.46492, 5.48928, 5.5638, 5.69664, 5.88636, 6.15312, 6.5004" \
                          )
                          }
                          rise_transition(q_slew_template) {
                          index_1 ("0.01, 0.03235, 0.1108, 0.2606, 0.4941, 0.8216, 1.253");
                          values  ( \
  	                     "0.17556, 0.217584, 0.333636, 0.560532, 0.921924, 1.446, 2.12808" \
                          )

                          }
                          cell_fall(q_delay_template) {
                          index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          index_2 ("0.01, 0.03235, 0.1108, 0.2606, 0.4941, 0.8216, 1.253");
                          values  ( \
                            "5.58336, 5.61756, 5.69076, 5.81424, 5.97324, 6.17004, 6.43176", \
                            "5.58972, 5.6202, 5.69724, 5.8182, 5.97228, 6.17388, 6.43416", \
                            "5.58996, 5.62572, 5.69904, 5.82252, 5.9658, 6.17736, 6.43716", \
                            "5.60676, 5.63712, 5.7096, 5.84556, 5.99988, 6.19164, 6.45552", \
                            "5.63112, 5.65644, 5.7348, 5.856, 6.01212, 6.21036, 6.4722", \
                            "5.65248, 5.6814, 5.76108, 5.87868, 6.036, 6.23628, 6.498", \
                            "5.65044, 5.67444, 5.75364, 5.87112, 6.03228, 6.23256, 6.49284" \
                          )
                          }
                          fall_transition(q_slew_template) {
                          index_1 ("0.01, 0.03235, 0.1108, 0.2606, 0.4941, 0.8216, 1.253");
                          values  ( \
                            "0.178176, 0.2076, 0.30174, 0.447432, 0.669312, 0.983772, 1.39476" \
                          )
                          }
                  }
          }
          pin(CLK)   {
                  direction            : input;
                  capacitance          : 0.317495;
                  clock                : true;
                  max_transition       : 2.008;
                  min_pulse_width_high : 2.55696;
                  min_pulse_width_low  : 2.56524;
                  min_period           : 7.29681;

/* WRITE POWER */
             internal_power() {
              when : "!CEN & !GWEN & (!WEN[0] | !WEN[1] | !WEN[2] | !WEN[3] | !WEN[4] | !WEN[5] | !WEN[6] | !WEN[7])";
              rise_power(power_template) {
                index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                values  ("702.945, 702.945, 702.945, 702.945, 702.945, 702.945, 702.945");
              }
              fall_power(power_template) {
                index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                values  ("702.945, 702.945, 702.945, 702.945, 702.945, 702.945, 702.945");
              }
             }
/* DISABLED POWER */
             internal_power() {
              when : "CEN";
              rise_power(power_template) {
                index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                values  ("0.000162171, 0.000162171, 0.000162171, 0.000162171, 0.000162171, 0.000162171, 0.000162171");
              }
              fall_power(power_template) {
                index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                values  ("0.000162171, 0.000162171, 0.000162171, 0.000162171, 0.000162171, 0.000162171, 0.000162171");
              }
             }
/* READ POWER */
             internal_power() {
             when : "!CEN & GWEN";
             rise_power(power_template) {
                index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                values  ("632.295, 632.295, 632.295, 632.295, 632.295, 632.295, 632.295");
              }
              fall_power(power_template) {
                index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                values  ("632.295, 632.295, 632.295, 632.295, 632.295, 632.295, 632.295");
              }
             }
          }

          pg_pin(VDD) {
                  voltage_name     : VDD;
                  pg_type          : primary_power;
          }
          pg_pin(VSS) {
                  voltage_name     : VSS;
                  pg_type          : primary_ground;
          }
          pin(CEN)   {
                  direction            : input;
                  capacitance          : 0.0186547;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          index_2 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          values  ( \
                            "0.511874, 0.505021, 0.498905, 0.514393, 0.558998, 0.610951, 0.661243", \
                            "0.508376, 0.504229, 0.495099, 0.51084, 0.547118, 0.608388, 0.649352", \
                            "0.505318, 0.501127, 0.49159, 0.507452, 0.551342, 0.593747, 0.636977", \
                            "0.503932, 0.49973, 0.490765, 0.506429, 0.55033, 0.588896, 0.623029", \
                            "0.503371, 0.498927, 0.490556, 0.505824, 0.549791, 0.589402, 0.623403", \
                            "0.502535, 0.495924, 0.489489, 0.505098, 0.549087, 0.587631, 0.622732", \
                            "0.502183, 0.495319, 0.488587, 0.504636, 0.548592, 0.588269, 0.622314" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          index_2 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          values  ( \
                            "0.458975, 0.457875, 0.476784, 0.515328, 0.586586, 0.669152, 0.75955", \
                            "0.455158, 0.454575, 0.472934, 0.511896, 0.583121, 0.665082, 0.757361", \
                            "0.451682, 0.451143, 0.469491, 0.508387, 0.578226, 0.661914, 0.752631", \
                            "0.450604, 0.450384, 0.468809, 0.507386, 0.578633, 0.661199, 0.752884", \
                            "0.450274, 0.452177, 0.467929, 0.506946, 0.576114, 0.660352, 0.751036", \
                            "0.446952, 0.449196, 0.466246, 0.506088, 0.575938, 0.659967, 0.751685", \
                            "0.449009, 0.44836, 0.46706, 0.505681, 0.574915, 0.659164, 0.74987" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          index_2 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          values  ( \
                            "1.23242, 1.23928, 1.24539, 1.2299, 1.18531, 1.14756, 1.11231", \
                            "1.23934, 1.24348, 1.25261, 1.23687, 1.2006, 1.15209, 1.12904", \
                            "1.25749, 1.26167, 1.27127, 1.25534, 1.21145, 1.16906, 1.13775", \
                            "1.29734, 1.30152, 1.31054, 1.29481, 1.25094, 1.21238, 1.17824", \
                            "1.35927, 1.36378, 1.37214, 1.35685, 1.31285, 1.27325, 1.23928", \
                            "1.40888, 1.41548, 1.42197, 1.40635, 1.36235, 1.32374, 1.28865", \
                            "1.45585, 1.46267, 1.46938, 1.45343, 1.40943, 1.36972, 1.33573" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          index_2 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          values  ( \
                            "1.28535, 1.28645, 1.26753, 1.22896, 1.15771, 1.07514, 0.984742", \
                            "1.29261, 1.29316, 1.27479, 1.23582, 1.16458, 1.08262, 0.990352", \
                            "1.31109, 1.31164, 1.29327, 1.25442, 1.18458, 1.10088, 1.01016", \
                            "1.35069, 1.35091, 1.33243, 1.29393, 1.22264, 1.14007, 1.0484", \
                            "1.4124, 1.41053, 1.3948, 1.35575, 1.28656, 1.20232, 1.11164", \
                            "1.46443, 1.46223, 1.44518, 1.40536, 1.33551, 1.25146, 1.15974", \
                            "1.50898, 1.50964, 1.49094, 1.45233, 1.38314, 1.29888, 1.20814" \
                          )
                          }
                 }
          }
          pin(GWEN)   {
                  direction            : input;
                  capacitance          : 0.0509742;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          index_2 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          values  ( \
                            "0.674146, 0.677534, 0.696278, 0.736417, 0.804309, 0.889163, 0.967538", \
                            "0.669647, 0.672518, 0.691394, 0.732039, 0.800272, 0.883927, 0.96063", \
                            "0.650859, 0.654698, 0.672551, 0.713119, 0.781957, 0.866173, 0.944295", \
                            "0.613316, 0.616242, 0.635096, 0.675741, 0.74459, 0.828498, 0.904354", \
                            "0.5478, 0.551606, 0.569338, 0.609906, 0.678304, 0.761849, 0.841104", \
                            "0.493339, 0.496804, 0.515064, 0.555676, 0.62447, 0.708444, 0.786808", \
                            "0.431321, 0.434775, 0.453035, 0.493559, 0.56243, 0.645535, 0.724801" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          index_2 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          values  ( \
                            "0.716375, 0.720885, 0.747098, 0.803286, 0.892485, 1.01245, 1.14419", \
                            "0.711678, 0.71654, 0.743446, 0.798028, 0.888547, 1.00808, 1.14151", \
                            "0.692835, 0.697763, 0.72413, 0.778239, 0.869913, 0.989021, 1.1222", \
                            "0.655369, 0.66022, 0.685201, 0.740377, 0.831798, 0.950829, 1.08481", \
                            "0.589611, 0.595551, 0.620851, 0.676654, 0.765985, 0.88583, 1.01899", \
                            "0.53548, 0.541244, 0.566643, 0.622644, 0.712415, 0.83204, 0.965041", \
                            "0.473143, 0.478247, 0.503877, 0.559185, 0.650155, 0.767624, 0.900647" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          index_2 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          values  ( \
                            "0.993575, 0.990814, 0.970233, 0.93214, 0.882882, 0.837419, 0.801273", \
                            "1.0004, 0.99715, 0.976569, 0.938476, 0.889163, 0.847022, 0.809589", \
                            "1.00609, 1.00334, 0.982751, 0.944669, 0.895345, 0.849937, 0.813802", \
                            "1.01618, 1.0131, 0.992519, 0.954426, 0.905113, 0.859705, 0.825517", \
                            "1.03871, 1.03555, 1.01497, 0.976877, 0.927564, 0.885412, 0.846021", \
                            "1.05371, 1.05097, 1.03037, 0.992277, 0.942964, 0.897556, 0.861421", \
                            "1.05552, 1.05227, 1.03169, 0.993399, 0.944273, 0.902121, 0.86273" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          index_2 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          values  ( \
                            "0.530288, 0.525338, 0.491986, 0.437129, 0.350152, 0.24353, 0.114559", \
                            "0.53405, 0.531025, 0.502117, 0.443806, 0.356477, 0.248413, 0.116255", \
                            "0.540496, 0.536426, 0.505824, 0.450219, 0.361394, 0.25583, 0.124046", \
                            "0.548889, 0.547503, 0.516626, 0.461472, 0.372504, 0.266691, 0.134357", \
                            "0.584496, 0.57794, 0.553707, 0.496969, 0.404327, 0.292281, 0.170076", \
                            "0.662101, 0.657019, 0.631818, 0.575201, 0.482768, 0.369996, 0.247844", \
                            "0.748462, 0.742819, 0.718047, 0.66286, 0.568293, 0.45914, 0.33528" \
                          )
                          }
                 }
          }
          bus(WEN)   {
                  bus_type             : Q_BUS;
                  direction            : input;
                  capacitance          : 0.00819588;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          index_2 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          values  ( \
                            "0, 0, 0, 0, 0, 0, 0.031823", \
                            "0, 0, 0, 0, 0, 0, 0.024816", \
                            "0, 0, 0, 0, 0, 0, 0.018381", \
                            "0, 0, 0, 0, 0, 0, 0.008173", \
                            "0, 0, 0, 0, 0, 0, 0", \
                            "0, 0, 0, 0, 0, 0, 0", \
                            "0, 0, 0, 0, 0, 0, 0" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          index_2 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          values  ( \
                            "0.280148, 0.284405, 0.318516, 0.373516, 0.460218, 0.568216, 0.694342", \
                            "0.276331, 0.278828, 0.307527, 0.36685, 0.453321, 0.561715, 0.691647", \
                            "0.26968, 0.273316, 0.304183, 0.358435, 0.447601, 0.553773, 0.684277", \
                            "0.26034, 0.262266, 0.29293, 0.346599, 0.436557, 0.543477, 0.673057", \
                            "0.237927, 0.241666, 0.270775, 0.326524, 0.414447, 0.521851, 0.651222", \
                            "0.222456, 0.225136, 0.256126, 0.312455, 0.400587, 0.504823, 0.637461", \
                            "0.218693, 0.224027, 0.255645, 0.308044, 0.397485, 0.50072, 0.632192" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          index_2 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          values  ( \
                            "0.99572, 0.990814, 0.972664, 0.93456, 0.882882, 0.838321, 0.801273", \
                            "1.0023, 0.997326, 0.979231, 0.941138, 0.889163, 0.847022, 0.809589", \
                            "1.00845, 1.00346, 0.98538, 0.947287, 0.895345, 0.851048, 0.813802", \
                            "1.0182, 1.01322, 0.995137, 0.957044, 0.905113, 0.860805, 0.825517", \
                            "1.04066, 1.03568, 1.01759, 0.979506, 0.927564, 0.885412, 0.846021", \
                            "1.05604, 1.05106, 1.03298, 0.994884, 0.942964, 0.898645, 0.861421", \
                            "1.05736, 1.05238, 1.0343, 0.996204, 0.944273, 0.902121, 0.86273" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          index_2 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          values  ( \
                            "0.530288, 0.525514, 0.493977, 0.437129, 0.350152, 0.24353, 0.115308", \
                            "0.53405, 0.531025, 0.50402, 0.443806, 0.357467, 0.248413, 0.118177", \
                            "0.540496, 0.536426, 0.509498, 0.450219, 0.361394, 0.25583, 0.124436", \
                            "0.549241, 0.54802, 0.519717, 0.461472, 0.372504, 0.266691, 0.134692", \
                            "0.571846, 0.567677, 0.540067, 0.482724, 0.395439, 0.288354, 0.156652", \
                            "0.587235, 0.58476, 0.557117, 0.497002, 0.408991, 0.302005, 0.171469", \
                            "0.590348, 0.58553, 0.555874, 0.500346, 0.412313, 0.306999, 0.176172" \
                          )
                          }
                 }
          }
          bus(A)   {
                  bus_type             : A_BUS;
                  direction            : input;
                  capacitance          : 0.0422366;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          index_2 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          values  ( \
                            "0.618596, 0.61688, 0.610071, 0.631334, 0.683232, 0.7414, 0.800426", \
                            "0.613954, 0.610027, 0.605528, 0.622655, 0.675851, 0.736703, 0.794409", \
                            "0.605913, 0.602558, 0.597432, 0.615527, 0.666182, 0.729322, 0.783915", \
                            "0.597377, 0.593186, 0.588038, 0.606309, 0.65769, 0.716826, 0.780032", \
                            "0.574277, 0.571494, 0.565598, 0.583671, 0.638286, 0.697411, 0.750662", \
                            "0.558448, 0.55517, 0.54736, 0.568524, 0.618134, 0.681846, 0.735427", \
                            "0.559009, 0.552926, 0.54835, 0.565268, 0.621577, 0.680559, 0.734217" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          index_2 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          values  ( \
                            "0.88341, 0.887095, 0.903342, 0.947914, 1.01929, 1.11389, 1.22079", \
                            "0.87857, 0.881144, 0.899668, 0.94182, 1.01478, 1.10624, 1.21536", \
                            "0.871948, 0.874082, 0.891825, 0.934967, 1.00714, 1.10056, 1.20817", \
                            "0.861971, 0.863456, 0.881848, 0.923318, 0.997095, 1.08878, 1.19772", \
                            "0.837914, 0.84282, 0.858561, 0.901406, 0.973753, 1.06774, 1.17602", \
                            "0.822943, 0.827519, 0.841115, 0.887392, 0.957682, 1.05195, 1.1606", \
                            "0.820853, 0.82456, 0.843029, 0.884389, 0.957077, 1.05081, 1.15817" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          index_2 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          values  ( \
                            "0.636449, 0.641311, 0.645546, 0.638396, 0.640629, 0.636647, 0.6336", \
                            "0.640376, 0.646492, 0.649517, 0.645139, 0.644589, 0.640618, 0.63756", \
                            "0.660869, 0.665764, 0.670263, 0.665621, 0.665082, 0.661111, 0.658053", \
                            "0.699413, 0.704176, 0.708411, 0.704033, 0.703483, 0.699512, 0.696465", \
                            "0.760287, 0.765116, 0.769791, 0.765006, 0.764467, 0.760485, 0.757438", \
                            "0.831732, 0.836693, 0.841148, 0.83644, 0.835901, 0.83193, 0.828872", \
                            "0.901604, 0.907676, 0.911108, 0.906323, 0.905806, 0.902968, 0.898744" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          index_2 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          values  ( \
                            "0.657316, 0.653554, 0.636724, 0.607673, 0.597014, 0.597652, 0.606881", \
                            "0.661309, 0.657514, 0.639386, 0.611644, 0.600985, 0.601623, 0.610852", \
                            "0.682011, 0.678018, 0.659879, 0.632137, 0.621478, 0.622149, 0.630762", \
                            "0.720016, 0.716408, 0.698852, 0.670538, 0.659879, 0.660517, 0.669746", \
                            "0.781209, 0.777381, 0.75999, 0.731522, 0.720863, 0.72149, 0.73073", \
                            "0.852599, 0.848826, 0.832876, 0.802956, 0.792297, 0.792957, 0.802164", \
                            "0.922999, 0.918709, 0.902011, 0.872828, 0.862169, 0.86284, 0.871453" \
                          )
                          }
                 }
          }
          bus(D)   {
                  bus_type             : Q_BUS;
                  memory_write() {
                          address      : A;
                          clocked_on   : "CLK";
                  }
                  direction            : input;
                  capacitance          : 0.017553;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          index_2 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          values  ( \
                            "0.594715, 0.60071, 0.617089, 0.639331, 0.645249, 0.632599, 0.607409", \
                            "0.589006, 0.594352, 0.609895, 0.63371, 0.639122, 0.628749, 0.60027", \
                            "0.580679, 0.58729, 0.603251, 0.625933, 0.632225, 0.620158, 0.592295", \
                            "0.570108, 0.576268, 0.594198, 0.613437, 0.621346, 0.612535, 0.582505", \
                            "0.549758, 0.555434, 0.56936, 0.594693, 0.599412, 0.588016, 0.562408", \
                            "0.53218, 0.536569, 0.555291, 0.578193, 0.584496, 0.571351, 0.546062", \
                            "0.53097, 0.536437, 0.554224, 0.576004, 0.581636, 0.572209, 0.540727" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          index_2 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          values  ( \
                            "0.116831, 0.117738, 0.138508, 0.202619, 0.295504, 0.423973, 0.575399", \
                            "0.111984, 0.109101, 0.132766, 0.198784, 0.289729, 0.419177, 0.569701", \
                            "0.100762, 0.104372, 0.124643, 0.191505, 0.282392, 0.410674, 0.562232", \
                            "0.0943877, 0.0933735, 0.114381, 0.179266, 0.27213, 0.401412, 0.551903", \
                            "0.0713548, 0.0723998, 0.0926563, 0.15665, 0.253367, 0.378763, 0.529793", \
                            "0.055572, 0.0552761, 0.0768284, 0.14324, 0.237306, 0.362758, 0.514745", \
                            "0.054054, 0.054076, 0.0749386, 0.141704, 0.232694, 0.36113, 0.512127" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          index_2 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          values  ( \
                            "0.518309, 0.512039, 0.496386, 0.472351, 0.468347, 0.478445, 0.506121", \
                            "0.524601, 0.518727, 0.502326, 0.478951, 0.473088, 0.485067, 0.514063", \
                            "0.532345, 0.52448, 0.509267, 0.485122, 0.479006, 0.490468, 0.520663", \
                            "0.54296, 0.536415, 0.519123, 0.49676, 0.490655, 0.500742, 0.530695", \
                            "0.561748, 0.557931, 0.540474, 0.515757, 0.51183, 0.523864, 0.55253", \
                            "0.580096, 0.57354, 0.557788, 0.531905, 0.526317, 0.541453, 0.567908", \
                            "0.581812, 0.575399, 0.557568, 0.534776, 0.529001, 0.539924, 0.570119" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          index_2 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          values  ( \
                            "0.752059, 0.751553, 0.730631, 0.66583, 0.569822, 0.444906, 0.296373", \
                            "0.757119, 0.757108, 0.735834, 0.669372, 0.575377, 0.450461, 0.301928", \
                            "0.76494, 0.763994, 0.743094, 0.676522, 0.582252, 0.457336, 0.308803", \
                            "0.774279, 0.774312, 0.753412, 0.688589, 0.59257, 0.467654, 0.319121", \
                            "0.796114, 0.795773, 0.774972, 0.710138, 0.614119, 0.489203, 0.340681", \
                            "0.812812, 0.812097, 0.791439, 0.724603, 0.630597, 0.505681, 0.357148", \
                            "0.814132, 0.81356, 0.79277, 0.726187, 0.631917, 0.507001, 0.358468" \
                          )
                          }
                 }
        }
          cell_leakage_power : 0.000162171;
}
}
