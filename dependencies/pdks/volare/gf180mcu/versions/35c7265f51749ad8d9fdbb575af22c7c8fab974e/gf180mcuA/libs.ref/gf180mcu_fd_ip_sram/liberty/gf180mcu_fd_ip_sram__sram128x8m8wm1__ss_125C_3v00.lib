/*
 * Copyright 2022 GlobalFoundries PDK Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 *      Single Port SRAM cell name : gf180mcu_fd_ip_sram__sram128x8m8wm1
 *      Technology                 : GF 180nm 5V Green
 *
 *      ---------
 *      Pin name:
 *      ---------
 *      Input Pins : CLK CEN GWEN WEN[7:0] A[6:0] D[7:0]
 *      Inout Pins:  VDD VSS
 *      Output Pins: Q[7:0]
 *
 *     Revision History: 1.0 (Initial Release: June 20, 2014)
 */

library(gf180mcu_fd_ip_sram__sram128x8m8wm1__ss_125C_3v00) {
        delay_model             : table_lookup;
        revision                : 1.0;
        date                    : "June 20, 2014";
        comment                 : "GF 180nm 5V Green";
        voltage_unit            : "1V";
        time_unit               : "1ns";
        current_unit            : "1mA";
        leakage_power_unit      : "1mW";
        nom_process             : 1;
        nom_temperature         : 125;
        nom_voltage             : 3.0;
        capacitive_load_unit    (1,pf);
        pulling_resistance_unit : "1kohm";

        /* additional header data */
        default_fanout_load            : 1;
        default_inout_pin_cap          : 0.045;
        default_input_pin_cap          : 0.045;
        default_output_pin_cap         : 0;
        default_max_transition         : 7.0901;
        default_cell_leakage_power     : 0;

         /* default attributes */
         slew_derate_from_library      : 1.000;
         slew_lower_threshold_pct_fall : 10.000;
         slew_upper_threshold_pct_fall : 90.000;
         slew_lower_threshold_pct_rise : 10.000;
         slew_upper_threshold_pct_rise : 90.000;
         input_threshold_pct_fall      : 50.000;
         input_threshold_pct_rise      : 50.000;
         output_threshold_pct_fall     : 50.000;
         output_threshold_pct_rise     : 50.000;
         default_leakage_power_density : 0;

        /* k-factors */
        k_process_recovery_fall        : 1;
        k_process_recovery_rise        : 1;
        k_process_cell_fall            : 1;
        k_process_cell_leakage_power   : 0;
        k_process_cell_rise            : 1;
        k_process_fall_transition      : 1;
        k_process_hold_fall            : 1;
        k_process_hold_rise            : 1;
        k_process_internal_power       : 0;
        k_process_min_pulse_width_high : 1;
        k_process_min_pulse_width_low  : 1;
        k_process_setup_fall           : 1;
        k_process_setup_rise           : 1;
        k_process_wire_cap             : 0;
        k_process_wire_res             : 0;
        k_process_pin_cap              : 0;
        k_process_rise_transition      : 1;
        k_temp_cell_fall               : 0.000;
        k_temp_cell_rise               : 0.000;
        k_temp_hold_fall               : 0.000;
        k_temp_hold_rise               : 0.000;
        k_temp_min_pulse_width_high    : 0.000;
        k_temp_min_pulse_width_low     : 0.000;
        k_temp_min_period              : 0.000;
        k_temp_rise_propagation        : 0.000;
        k_temp_fall_propagation        : 0.000;
        k_temp_rise_transition         : 0.000;
        k_temp_fall_transition         : 0.000;
        k_temp_recovery_fall           : 0.000;
        k_temp_recovery_rise           : 0.000;
        k_temp_setup_fall              : 0.000;
        k_temp_setup_rise              : 0.000;
        k_volt_cell_fall               : 0.000;
        k_volt_cell_rise               : 0.000;
        k_volt_hold_fall               : 0.000;
        k_volt_hold_rise               : 0.000;
        k_volt_min_pulse_width_high    : 0.000;
        k_volt_min_pulse_width_low     : 0.000;
        k_volt_min_period              : 0.000;
        k_volt_recovery_fall           : 0.000;
        k_volt_recovery_rise           : 0.000;
        k_volt_setup_fall              : 0.000;
        k_volt_setup_rise              : 0.000;
        k_volt_rise_propagation        : 0.000;
        k_volt_fall_propagation        : 0.000;
        k_volt_rise_transition         : 0.000;
        k_volt_fall_transition         : 0.000;

         voltage_map (VDD, 3.0);
         voltage_map (VSS, 0.00);
         operating_conditions(ss_3p0v_125C) {
                process       : 1;
                temperature   : 125;
                voltage       : 3.0;
                tree_type     : balanced_tree;
         }

         default_operating_conditions : ss_3p0v_125C;
         wire_load("Estimate") {
                resistance    : 1.44e-05;
                capacitance   : 0.00018;
                area          : 1.7;
                slope         : 500;
                fanout_length (1,500);
         }
         power_lut_template(power_template) {
            variable_1 : input_transition_time;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(q_delay_template) {
            variable_1 : input_net_transition;
            variable_2 : total_output_net_capacitance;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
                 index_2 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(q_slew_template) {
            variable_1 : total_output_net_capacitance;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(constraint_template) {
            variable_1 : related_pin_transition;
            variable_2 : constrained_pin_transition;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
                 index_2 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }

         library_features(report_delay_calculation);

         type (A_BUS) {
                base_type : array;
                data_type : bit;
                bit_width : 7;
                bit_from  : 6;
                bit_to    : 0;
                downto    : true;
         }
         type (Q_BUS) {
                base_type : array;
                data_type : bit;
                bit_width : 8;
                bit_from  : 7;
                bit_to    : 0;
                downto    : true;
         }
 cell(gf180mcu_fd_ip_sram__sram128x8m8wm1) {
        area             : 116118.5168;
        dont_use         : TRUE;
        dont_touch       : TRUE;
        interface_timing : TRUE;
        memory() {
                type          : ram;
                address_width : 7;
                word_width    : 8;
        }

                 bus(Q)   {
                  bus_type             : Q_BUS;
                  direction            : output;
                  max_capacitance      : 1.1270;
                  memory_read() {
                        address        : A;
                  }
                  timing() {
                          related_pin  : "CLK";
                          timing_type  : rising_edge;
                          timing_sense : non_unate;
       		  when : "((!CEN) & (GWEN))";
        	  sdf_cond : "CEN== 1'b0 && GWEN== 1'b1";
                          cell_rise(q_delay_template) {
			  index_1 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
			  index_2 ("0.0100, 0.0301, 0.1006, 0.2353, 0.4451, 0.7395, 1.1270");
                          values  ( \
                            "12.1944, 12.2508, 12.4212, 12.702, 13.0836, 13.644, 14.3652", \
                            "12.1764, 12.2724, 12.396, 12.6828, 13.0812, 13.6608, 14.3412", \
                            "12.2472, 12.3228, 12.4848, 12.762, 13.1484, 13.7076, 14.4228", \
                            "12.324, 12.378, 12.5496, 12.8232, 13.23, 13.7724, 14.4972", \
                            "12.3912, 12.4608, 12.6324, 12.9048, 13.3008, 13.8408, 14.5668", \
                            "12.4308, 12.486, 12.6648, 12.93, 13.3368, 13.8888, 14.5992", \
                            "12.408, 12.4548, 12.6348, 12.906, 13.3152, 13.8492, 14.5524" \
                          )
                          }
                          rise_transition(q_slew_template) {
                          index_1 ("0.0100, 0.0301, 0.1006, 0.2353, 0.4451, 0.7395, 1.1270");
                          values  ( \
  	                     "0.431244, 0.513864, 0.783108, 1.2498, 2.00148, 3.1074, 4.54428" \
                          )

                          }
                          cell_fall(q_delay_template) {
                          index_1 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                          index_2 ("0.0100, 0.0301, 0.1006, 0.2353, 0.4451, 0.7395, 1.1270");
                          values  ( \
                            "12.7032, 12.7584, 12.9096, 13.146, 13.4124, 13.7772, 14.2212", \
                            "12.6936, 12.7824, 12.8892, 13.1256, 13.4064, 13.7988, 14.1972", \
                            "12.7608, 12.834, 12.9768, 13.2108, 13.4844, 13.8408, 14.2788", \
                            "12.8352, 12.894, 13.0464, 13.2768, 13.5636, 13.9152, 14.3532", \
                            "12.9, 12.9672, 13.1232, 13.344, 13.626, 13.9668, 14.4108", \
                            "12.942, 12.9984, 13.1508, 13.368, 13.6656, 14.0196, 14.4504", \
                            "12.918, 12.966, 13.1316, 13.3416, 13.6452, 13.9836, 14.4048" \
                          )
                          }
                          fall_transition(q_slew_template) {
                          index_1 ("0.0100, 0.0301, 0.1006, 0.2353, 0.4451, 0.7395, 1.1270");
                          values  ( \
                            "0.424596, 0.481824, 0.647904, 0.924516, 1.3122, 1.8618, 2.56176" \
                          )
                          }
                  }
          }
          pin(CLK)   {
                  direction            : input;
                  capacitance          : 0.314003;
                  clock                : true;
                  max_transition       : 7.0901;
                  min_pulse_width_high : 4.715325;
                  min_pulse_width_low  : 5.95461;
                  min_period           : 16.6365;

/* WRITE POWER */
             internal_power() {
              when : "!CEN & !GWEN & (!WEN[0] | !WEN[1] | !WEN[2] | !WEN[3] | !WEN[4] | !WEN[5] | !WEN[6] | !WEN[7])";
              rise_power(power_template) {
                index_1 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                values  ("303.885, 303.885, 303.885, 303.885, 303.885, 303.885, 303.885");
              }
              fall_power(power_template) {
                index_1 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                values  ("303.885, 303.885, 303.885, 303.885, 303.885, 303.885, 303.885");
              }
             }
/* DISABLED POWER */
             internal_power() {
              when : "CEN";
              rise_power(power_template) {
                index_1 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                values  ("9.5157e-05, 9.5157e-05, 9.5157e-05, 9.5157e-05, 9.5157e-05, 9.5157e-05, 9.5157e-05");
              }
              fall_power(power_template) {
                index_1 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                values  ("9.5157e-05, 9.5157e-05, 9.5157e-05, 9.5157e-05, 9.5157e-05, 9.5157e-05, 9.5157e-05");
              }
             }
/* READ POWER */
             internal_power() {
             when : "!CEN & GWEN";
             rise_power(power_template) {
                index_1 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                values  ("276.39, 276.39, 276.39, 276.39, 276.39, 276.39, 276.39");
              }
              fall_power(power_template) {
                index_1 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                values  ("276.39, 276.39, 276.39, 276.39, 276.39, 276.39, 276.39");
              }
             }
          }

          pg_pin(VDD) {
                  voltage_name     : VDD;
                  pg_type          : primary_power;
          }
          pg_pin(VSS) {
                  voltage_name     : VSS;
                  pg_type          : primary_ground;
          }
          pin(CEN)   {
                  direction            : input;
                  capacitance          : 0.0190412;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                          index_2 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                          values  ( \
                            "1.07491, 1.05817, 1.07353, 1.22163, 1.45882, 1.6368, 1.72612", \
                            "1.04905, 1.03578, 1.04762, 1.19573, 1.43605, 1.61744, 1.70984", \
                            "0.965646, 0.948156, 0.972323, 1.11599, 1.34596, 1.52889, 1.62723", \
                            "0.96371, 0.947023, 0.96459, 1.09727, 1.28534, 1.4113, 1.51503", \
                            "0.963479, 0.946066, 0.963853, 1.08914, 1.27967, 1.38303, 1.41977", \
                            "0.962819, 0.945615, 0.963193, 1.09596, 1.28412, 1.38072, 1.42296", \
                            "0.962005, 0.946627, 0.962368, 1.0949, 1.28328, 1.39381, 1.47015" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                          index_2 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                          values  ( \
                            "0.85228, 0.863676, 0.96492, 1.16864, 1.47741, 1.8139, 2.15567", \
                            "0.845603, 0.85888, 0.958144, 1.16372, 1.46201, 1.78904, 2.13631", \
                            "0.843458, 0.856724, 0.9559, 1.16776, 1.46663, 1.78739, 2.12498", \
                            "0.842226, 0.855085, 0.950928, 1.15999, 1.4652, 1.78541, 2.12289", \
                            "0.841786, 0.857329, 0.953777, 1.15938, 1.46454, 1.78475, 2.10694", \
                            "0.839993, 0.856614, 0.953106, 1.15907, 1.46388, 1.78464, 2.11882", \
                            "0.840048, 0.855844, 0.952292, 1.15987, 1.46311, 1.78321, 2.1208" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                          index_2 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                          values  ( \
                            "2.85626, 2.87122, 2.85593, 2.72338, 2.53484, 2.43672, 2.41318", \
                            "2.86319, 2.87815, 2.86286, 2.73031, 2.54188, 2.4442, 2.40581", \
                            "2.95064, 2.96813, 2.94393, 2.80896, 2.63351, 2.52813, 2.49579", \
                            "3.12983, 3.14655, 3.12895, 2.99629, 2.80819, 2.7104, 2.67069", \
                            "3.34774, 3.36512, 3.3473, 3.22201, 3.03149, 2.9282, 2.90235", \
                            "3.5255, 3.54266, 3.52517, 3.3924, 3.20419, 3.10761, 3.07879", \
                            "3.6399, 3.6553, 3.63957, 3.50702, 3.31859, 3.22201, 3.21332" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                          index_2 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                          values  ( \
                            "2.97913, 2.96516, 2.86594, 2.66035, 2.35521, 2.03511, 1.70368", \
                            "2.9854, 2.97209, 2.87287, 2.66728, 2.36896, 2.04193, 1.70445", \
                            "3.07285, 3.05954, 2.96043, 2.74857, 2.44959, 2.12883, 1.79124", \
                            "3.25138, 3.23851, 3.14259, 2.93359, 2.62845, 2.30824, 1.97065", \
                            "3.4694, 3.45378, 3.35742, 3.15183, 2.84658, 2.52648, 2.20429", \
                            "3.64837, 3.63165, 3.53518, 3.32926, 3.02445, 2.70369, 2.36951", \
                            "3.76178, 3.74605, 3.64958, 3.44201, 3.13885, 2.81864, 2.48116" \
                          )
                          }
                 }
          }
          pin(GWEN)   {
                  direction            : input;
                  capacitance          : 0.0498129;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                          index_2 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                          values  ( \
                            "1.43022, 1.45288, 1.54132, 1.71028, 1.93512, 2.14588, 2.29834", \
                            "1.40646, 1.42912, 1.51778, 1.68443, 1.91158, 2.11948, 2.2957", \
                            "1.32418, 1.34904, 1.43418, 1.59874, 1.82842, 2.03896, 2.19769", \
                            "1.15892, 1.18386, 1.27059, 1.43902, 1.66507, 1.87462, 2.03434", \
                            "0.990385, 1.01547, 1.10156, 1.26799, 1.49578, 1.7039, 1.86945", \
                            "0.862037, 0.886952, 0.972345, 1.13917, 1.36664, 1.56904, 1.73712", \
                            "0.773564, 0.796004, 0.884521, 1.05076, 1.27821, 1.48071, 1.65847" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                          index_2 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                          values  ( \
                            "1.64285, 1.67277, 1.77397, 1.99342, 2.34938, 2.76067, 3.21189", \
                            "1.62217, 1.64945, 1.75043, 1.96999, 2.3254, 2.73713, 3.1889", \
                            "1.53901, 1.56662, 1.66782, 1.88815, 2.24323, 2.65309, 3.10651", \
                            "1.37247, 1.40173, 1.50931, 1.72216, 2.07812, 2.49018, 2.94107", \
                            "1.20394, 1.23307, 1.3354, 1.55375, 1.90971, 2.31836, 2.77277", \
                            "1.07654, 1.10452, 1.20689, 1.43341, 1.78134, 2.19076, 2.64528", \
                            "0.987987, 1.01604, 1.11722, 1.34442, 1.69268, 2.10518, 2.55563" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                          index_2 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                          values  ( \
                            "2.06272, 2.046, 1.95899, 1.81577, 1.67981, 1.60006, 1.55628", \
                            "2.03907, 2.01872, 1.93424, 1.78662, 1.65638, 1.58037, 1.5312", \
                            "2.0603, 2.04479, 1.95712, 1.81401, 1.67882, 1.59962, 1.5521", \
                            "2.11343, 2.09737, 2.00552, 1.86472, 1.72821, 1.64714, 1.60523", \
                            "2.18614, 2.17041, 2.08241, 1.93479, 1.80444, 1.7259, 1.67684", \
                            "2.21936, 2.20363, 2.11596, 1.96801, 1.83766, 1.76253, 1.7171", \
                            "2.18933, 2.17052, 2.08571, 1.94073, 1.80774, 1.73261, 1.68487" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                          index_2 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                          values  ( \
                            "0.99022, 0.964788, 0.856317, 0.637626, 0.307857, 0, 0", \
                            "0.964546, 0.937981, 0.831556, 0.610775, 0.278694, 0, 0", \
                            "0.987877, 0.962665, 0.854095, 0.634359, 0.30514, 0, 0", \
                            "1.03996, 1.0139, 0.905135, 0.688369, 0.358853, 0, 0", \
                            "1.17069, 1.14412, 1.04149, 0.818213, 0.464112, 0.0842699, 0", \
                            "1.38204, 1.35454, 1.25186, 1.01979, 0.674465, 0.293664, 0", \
                            "1.55265, 1.52625, 1.42362, 1.19149, 0.846241, 0.465377, 0.053295" \
                          )
                          }
                 }
          }
          bus(WEN)   {
                  bus_type             : Q_BUS;
                  direction            : input;
                  capacitance          : 0.00804241;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                          index_2 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                          values  ( \
                            "0, 0, 0, 0, 0, 0, 0", \
                            "0, 0, 0, 0, 0, 0, 0.015664", \
                            "0, 0, 0, 0, 0, 0, 0", \
                            "0, 0, 0, 0, 0, 0, 0", \
                            "0, 0, 0, 0, 0, 0, 0", \
                            "0, 0, 0, 0, 0, 0, 0", \
                            "0, 0, 0, 0, 0, 0, 0" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                          index_2 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                          values  ( \
                            "0.525228, 0.546667, 0.655985, 0.879153, 1.20856, 1.60435, 2.04798", \
                            "0.550979, 0.568238, 0.675763, 0.899074, 1.2278, 1.62349, 2.07405", \
                            "0.524656, 0.545699, 0.654555, 0.878669, 1.20425, 1.60193, 2.05106", \
                            "0.475332, 0.497618, 0.611028, 0.825814, 1.15698, 1.54946, 2.00299", \
                            "0.409046, 0.426305, 0.536404, 0.75856, 1.08811, 1.47961, 1.93391", \
                            "0.378994, 0.394988, 0.50754, 0.731258, 1.05416, 1.4487, 1.90377", \
                            "0.401126, 0.417351, 0.52558, 0.756547, 1.07624, 1.47246, 1.92412" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                          index_2 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                          values  ( \
                            "2.06426, 2.046, 1.95899, 1.81577, 1.69477, 1.60501, 1.56475", \
                            "2.04006, 2.01872, 1.93424, 1.79102, 1.66793, 1.5807, 1.5312", \
                            "2.0625, 2.04479, 1.95712, 1.81401, 1.69301, 1.60314, 1.56299", \
                            "2.11552, 2.09737, 2.00838, 1.86648, 1.74669, 1.65605, 1.6159", \
                            "2.18823, 2.17041, 2.08241, 1.93919, 1.81863, 1.72887, 1.68872", \
                            "2.21936, 2.20363, 2.11596, 1.96988, 1.84932, 1.76253, 1.7193", \
                            "2.19164, 2.17052, 2.08571, 1.9426, 1.82204, 1.73261, 1.68487" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                          index_2 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                          values  ( \
                            "0.99022, 0.964876, 0.856317, 0.637626, 0.309122, 0, 0", \
                            "0.964546, 0.939279, 0.831556, 0.610775, 0.278694, 0, 0", \
                            "0.987877, 0.963281, 0.854095, 0.634359, 0.306933, 0, 0", \
                            "1.03996, 1.01475, 0.905135, 0.688369, 0.360283, 0, 0", \
                            "1.11315, 1.08869, 0.982487, 0.760925, 0.433004, 0.037301, 0", \
                            "1.1456, 1.12312, 1.01653, 0.783255, 0.463397, 0.069982, 0", \
                            "1.11723, 1.09208, 0.98307, 0.757262, 0.436161, 0.040359, 0" \
                          )
                          }
                 }
          }
          bus(A)   {
                  bus_type             : A_BUS;
                  direction            : input;
                  capacitance          : 0.0426231;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                          index_2 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                          values  ( \
                            "1.29415, 1.272, 1.29987, 1.45552, 1.68718, 1.87638, 1.99474", \
                            "1.31296, 1.29014, 1.3211, 1.47543, 1.71094, 1.88749, 1.9932", \
                            "1.29299, 1.27111, 1.29965, 1.45761, 1.69026, 1.87814, 1.9976", \
                            "1.23982, 1.22107, 1.25116, 1.40503, 1.63911, 1.81423, 1.925", \
                            "1.17646, 1.15146, 1.17841, 1.33023, 1.56838, 1.75659, 1.87792", \
                            "1.13597, 1.11964, 1.14833, 1.30328, 1.54011, 1.70984, 1.82171", \
                            "1.16008, 1.14426, 1.17513, 1.31593, 1.55991, 1.72744, 1.84745" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                          index_2 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                          values  ( \
                            "1.68234, 1.70335, 1.80015, 2.01102, 2.33442, 2.68037, 3.06636", \
                            "1.70192, 1.72403, 1.81973, 2.0284, 2.35796, 2.69841, 3.08462", \
                            "1.67805, 1.70489, 1.80048, 2.00376, 2.33134, 2.67773, 3.06614", \
                            "1.62921, 1.6511, 1.7523, 1.96108, 2.28129, 2.63219, 3.0118", \
                            "1.56398, 1.58576, 1.67794, 1.88925, 2.21364, 2.55992, 2.94107", \
                            "1.52966, 1.54528, 1.64879, 1.85405, 2.18141, 2.52725, 2.91346", \
                            "1.54836, 1.57663, 1.67013, 1.87902, 2.20583, 2.55057, 2.93436" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                          index_2 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                          values  ( \
                            "1.14113, 1.15424, 1.11445, 1.03877, 0.987151, 0.954261, 0.9119", \
                            "1.16985, 1.18378, 1.14381, 1.06823, 1.01647, 0.984401, 0.937684", \
                            "1.25709, 1.27037, 1.2304, 1.15159, 1.10339, 1.06921, 1.03044", \
                            "1.42109, 1.43418, 1.39436, 1.31879, 1.26702, 1.23497, 1.18824", \
                            "1.63317, 1.64648, 1.606, 1.52713, 1.47851, 1.44595, 1.40371", \
                            "1.82138, 1.83524, 1.79487, 1.71974, 1.66793, 1.63592, 1.58917", \
                            "1.94634, 1.95954, 1.91961, 1.8403, 1.79212, 1.75945, 1.71347" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                          index_2 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                          values  ( \
                            "1.22935, 1.20768, 1.11176, 0.993421, 0.90211, 0.849992, 0.810678", \
                            "1.25884, 1.23702, 1.14109, 1.02275, 0.931436, 0.879318, 0.839993", \
                            "1.34552, 1.32363, 1.22772, 1.10938, 1.01807, 0.965954, 0.92664", \
                            "1.5092, 1.48753, 1.39161, 1.27331, 1.18199, 1.12991, 1.09056", \
                            "1.71919, 1.69983, 1.60369, 1.48544, 1.39414, 1.342, 1.30262", \
                            "1.90839, 1.8909, 1.79256, 1.6742, 1.58301, 1.53087, 1.49149", \
                            "2.03478, 2.01256, 1.91686, 1.79861, 1.70731, 1.65517, 1.61579" \
                          )
                          }
                 }
          }
          bus(D)   {
                  bus_type             : Q_BUS;
                  memory_write() {
                          address      : A;
                          clocked_on   : "CLK";
                  }
                  direction            : input;
                  capacitance          : 0.0174714;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                          index_2 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                          values  ( \
                            "1.26305, 1.2827, 1.35454, 1.41262, 1.41295, 1.34046, 1.2176", \
                            "1.28424, 1.30185, 1.38336, 1.4278, 1.43176, 1.35894, 1.25642", \
                            "1.25863, 1.28048, 1.36015, 1.42109, 1.41933, 1.34519, 1.19567", \
                            "1.21035, 1.2314, 1.30273, 1.37401, 1.3618, 1.30009, 1.18697", \
                            "1.13874, 1.15927, 1.23676, 1.28767, 1.29789, 1.21899, 1.10408", \
                            "1.10908, 1.12802, 1.20222, 1.25302, 1.25914, 1.19699, 1.0751", \
                            "1.13349, 1.15226, 1.22891, 1.28278, 1.28268, 1.2038, 1.10056" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                          index_2 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                          values  ( \
                            "0.104068, 0.10081, 0.207855, 0.446435, 0.782914, 1.18581, 1.64362", \
                            "0.12414, 0.123481, 0.228181, 0.46662, 0.806476, 1.20935, 1.66012", \
                            "0.101732, 0.100441, 0.207415, 0.444642, 0.777667, 1.18781, 1.64813", \
                            "0.053713, 0.052679, 0.157158, 0.385044, 0.73238, 1.13773, 1.59775", \
                            "0, 0, 0.089606, 0.326293, 0.66231, 1.06809, 1.51954", \
                            "0, 0, 0.056793, 0.289221, 0.634502, 1.03707, 1.496", \
                            "0, 0, 0.078782, 0.31691, 0.657492, 1.0605, 1.48687" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                          index_2 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                          values  ( \
                            "0.861146, 0.83666, 0.764258, 0.709049, 0.708092, 0.77473, 0.87835", \
                            "0.840015, 0.819313, 0.748077, 0.692725, 0.686257, 0.761112, 0.854854", \
                            "0.869429, 0.846054, 0.766546, 0.704319, 0.710644, 0.778844, 0.907324", \
                            "0.908248, 0.892089, 0.819555, 0.757922, 0.756481, 0.820886, 0.927564", \
                            "0.985292, 0.962984, 0.885489, 0.829037, 0.82907, 0.907302, 0.998074", \
                            "1.01494, 0.989549, 0.917906, 0.863093, 0.856284, 0.916916, 1.02786", \
                            "0.9889, 0.967285, 0.894927, 0.838387, 0.837287, 0.907313, 1.01387" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                          index_2 ("0.0200, 0.1472, 0.5937, 1.4462, 2.7748, 4.6388, 7.0901");
                          values  ( \
                            "1.53439, 1.52922, 1.42857, 1.19261, 0.853886, 0.451407, 0", \
                            "1.51525, 1.51008, 1.40943, 1.17349, 0.834438, 0.433939, 0", \
                            "1.53967, 1.53439, 1.43385, 1.19791, 0.859177, 0.45672, 0", \
                            "1.5862, 1.58125, 1.4806, 1.24453, 0.905586, 0.505087, 0.045672", \
                            "1.65561, 1.65033, 1.54968, 1.31373, 0.975062, 0.574222, 0.114812", \
                            "1.68564, 1.68014, 1.57949, 1.34343, 1.00481, 0.603977, 0.144562", \
                            "1.66221, 1.65715, 1.5565, 1.32055, 0.981871, 0.58102, 0.153635" \
                          )
                          }
                 }
        }
          cell_leakage_power : 9.5157e-05;
}
}
