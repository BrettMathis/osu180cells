/*
 * Copyright 2022 GlobalFoundries PDK Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 *      Single Port SRAM cell name : gf180mcu_fd_ip_sram__sram128x8m8wm1
 *      Technology                 : GF 180nm 5V Green
 *
 *      ---------
 *      Pin name:
 *      ---------
 *      Input Pins : CLK CEN GWEN WEN[7:0] A[6:0] D[7:0]
 *      Inout Pins:  VDD VSS
 *      Output Pins: Q[7:0]
 *
 *     Revision History: 1.0 (Initial Release: June 20, 2014)
 */

library(gf180mcu_fd_ip_sram__sram128x8m8wm1__ss_125C_4v50) {
        delay_model             : table_lookup;
        revision                : 1.0;
        date                    : "June 20, 2014";
        comment                 : "GF 180nm 5V Green";
        voltage_unit            : "1V";
        time_unit               : "1ns";
        current_unit            : "1mA";
        leakage_power_unit      : "1mW";
        nom_process             : 1;
        nom_temperature         : 125;
        nom_voltage             : 4.5;
        capacitive_load_unit    (1,pf);
        pulling_resistance_unit : "1kohm";

        /* additional header data */
        default_fanout_load            : 1;
        default_inout_pin_cap          : 0.045;
        default_input_pin_cap          : 0.045;
        default_output_pin_cap         : 0;
        default_max_transition         : 2.775;
        default_cell_leakage_power     : 0;

         /* default attributes */
         slew_derate_from_library      : 1.000;
         slew_lower_threshold_pct_fall : 10.000;
         slew_upper_threshold_pct_fall : 90.000;
         slew_lower_threshold_pct_rise : 10.000;
         slew_upper_threshold_pct_rise : 90.000;
         input_threshold_pct_fall      : 50.000;
         input_threshold_pct_rise      : 50.000;
         output_threshold_pct_fall     : 50.000;
         output_threshold_pct_rise     : 50.000;
         default_leakage_power_density : 0;

        /* k-factors */
        k_process_recovery_fall        : 1;
        k_process_recovery_rise        : 1;
        k_process_cell_fall            : 1;
        k_process_cell_leakage_power   : 0;
        k_process_cell_rise            : 1;
        k_process_fall_transition      : 1;
        k_process_hold_fall            : 1;
        k_process_hold_rise            : 1;
        k_process_internal_power       : 0;
        k_process_min_pulse_width_high : 1;
        k_process_min_pulse_width_low  : 1;
        k_process_setup_fall           : 1;
        k_process_setup_rise           : 1;
        k_process_wire_cap             : 0;
        k_process_wire_res             : 0;
        k_process_pin_cap              : 0;
        k_process_rise_transition      : 1;
        k_temp_cell_fall               : 0.000;
        k_temp_cell_rise               : 0.000;
        k_temp_hold_fall               : 0.000;
        k_temp_hold_rise               : 0.000;
        k_temp_min_pulse_width_high    : 0.000;
        k_temp_min_pulse_width_low     : 0.000;
        k_temp_min_period              : 0.000;
        k_temp_rise_propagation        : 0.000;
        k_temp_fall_propagation        : 0.000;
        k_temp_rise_transition         : 0.000;
        k_temp_fall_transition         : 0.000;
        k_temp_recovery_fall           : 0.000;
        k_temp_recovery_rise           : 0.000;
        k_temp_setup_fall              : 0.000;
        k_temp_setup_rise              : 0.000;
        k_volt_cell_fall               : 0.000;
        k_volt_cell_rise               : 0.000;
        k_volt_hold_fall               : 0.000;
        k_volt_hold_rise               : 0.000;
        k_volt_min_pulse_width_high    : 0.000;
        k_volt_min_pulse_width_low     : 0.000;
        k_volt_min_period              : 0.000;
        k_volt_recovery_fall           : 0.000;
        k_volt_recovery_rise           : 0.000;
        k_volt_setup_fall              : 0.000;
        k_volt_setup_rise              : 0.000;
        k_volt_rise_propagation        : 0.000;
        k_volt_fall_propagation        : 0.000;
        k_volt_rise_transition         : 0.000;
        k_volt_fall_transition         : 0.000;

         voltage_map (VDD, 4.5);
         voltage_map (VSS, 0.00);
         operating_conditions(ss_4p5v_125C) {
                process       : 1;
                temperature   : 125;
                voltage       : 4.5;
                tree_type     : balanced_tree;
         }

         default_operating_conditions : ss_4p5v_125C;
         wire_load("Estimate") {
                resistance    : 1.44e-05;
                capacitance   : 0.00018;
                area          : 1.7;
                slope         : 500;
                fanout_length (1,500);
         }
         power_lut_template(power_template) {
            variable_1 : input_transition_time;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(q_delay_template) {
            variable_1 : input_net_transition;
            variable_2 : total_output_net_capacitance;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
                 index_2 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(q_slew_template) {
            variable_1 : total_output_net_capacitance;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(constraint_template) {
            variable_1 : related_pin_transition;
            variable_2 : constrained_pin_transition;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
                 index_2 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }

         library_features(report_delay_calculation);

         type (A_BUS) {
                base_type : array;
                data_type : bit;
                bit_width : 7;
                bit_from  : 6;
                bit_to    : 0;
                downto    : true;
         }
         type (Q_BUS) {
                base_type : array;
                data_type : bit;
                bit_width : 8;
                bit_from  : 7;
                bit_to    : 0;
                downto    : true;
         }
 cell(gf180mcu_fd_ip_sram__sram128x8m8wm1) {
        area             : 116118.5168;
        dont_use         : TRUE;
        dont_touch       : TRUE;
        interface_timing : TRUE;
        memory() {
                type          : ram;
                address_width : 7;
                word_width    : 8;
        }

                 bus(Q)   {
                  bus_type             : Q_BUS;
                  direction            : output;
                  max_capacitance      : 1.202;
                  memory_read() {
                        address        : A;
                  }
                  timing() {
                          related_pin  : "CLK";
                          timing_type  : rising_edge;
                          timing_sense : non_unate;
       		  when : "((!CEN) & (GWEN))";
        	  sdf_cond : "CEN== 1'b0 && GWEN== 1'b1";
                          cell_rise(q_delay_template) {
			  index_1 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
			  index_2 ("0.01, 0.03143, 0.1067, 0.2504, 0.4742, 0.7883, 1.202");
                          values  ( \
                            "7.95276, 7.98996, 8.10696, 8.2866, 8.54256, 8.91684, 9.38136", \
                            "7.9602, 8.00232, 8.10372, 8.2842, 8.55216, 8.91972, 9.39144", \
                            "7.96344, 8.007, 8.11524, 8.29464, 8.56368, 8.92176, 9.40152", \
                            "7.98984, 8.01672, 8.12184, 8.30472, 8.57412, 8.93796, 9.40776", \
                            "8.00364, 8.03652, 8.15724, 8.34276, 8.60064, 8.96736, 9.43632", \
                            "8.02176, 8.05308, 8.16432, 8.34372, 8.61252, 8.979, 9.44952", \
                            "8.01732, 8.05308, 8.15988, 8.34312, 8.60556, 8.96976, 9.44436" \
                          )
                          }
                          rise_transition(q_slew_template) {
                          index_1 ("0.01, 0.03143, 0.1067, 0.2504, 0.4742, 0.7883, 1.202");
                          values  ( \
  	                     "0.299952, 0.349116, 0.527856, 0.85086, 1.3782, 2.13624, 3.12336" \
                          )

                          }
                          cell_fall(q_delay_template) {
                          index_1 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                          index_2 ("0.01, 0.03143, 0.1067, 0.2504, 0.4742, 0.7883, 1.202");
                          values  ( \
                            "8.21556, 8.25696, 8.37012, 8.52696, 8.73528, 9.01044, 9.33528", \
                            "8.2284, 8.265, 8.36928, 8.52444, 8.7408, 9.01212, 9.34176", \
                            "8.22444, 8.27184, 8.37528, 8.5362, 8.74956, 9.012, 9.35352", \
                            "8.25732, 8.283, 8.38764, 8.54844, 8.76516, 9.02748, 9.36084", \
                            "8.26716, 8.30604, 8.41608, 8.58264, 8.79048, 9.06132, 9.387", \
                            "8.28768, 8.32128, 8.42676, 8.59164, 8.80104, 9.0696, 9.40404", \
                            "8.28372, 8.31624, 8.424, 8.58396, 8.79624, 9.06168, 9.39492" \
                          )
                          }
                          fall_transition(q_slew_template) {
                          index_1 ("0.01, 0.03143, 0.1067, 0.2504, 0.4742, 0.7883, 1.202");
                          values  ( \
                            "0.303396, 0.34398, 0.46356, 0.671292, 0.97482, 1.40424, 1.95612" \
                          )
                          }
                  }
          }
          pin(CLK)   {
                  direction            : input;
                  capacitance          : 0.319023;
                  clock                : true;
                  max_transition       : 2.775;
                  min_pulse_width_high : 4.5174;
                  min_pulse_width_low  : 4.53114;
                  min_period           : 10.548255;

/* WRITE POWER */
             internal_power() {
              when : "!CEN & !GWEN & (!WEN[0] | !WEN[1] | !WEN[2] | !WEN[3] | !WEN[4] | !WEN[5] | !WEN[6] | !WEN[7])";
              rise_power(power_template) {
                index_1 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                values  ("731.97, 731.97, 731.97, 731.97, 731.97, 731.97, 731.97");
              }
              fall_power(power_template) {
                index_1 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                values  ("731.97, 731.97, 731.97, 731.97, 731.97, 731.97, 731.97");
              }
             }
/* DISABLED POWER */
             internal_power() {
              when : "CEN";
              rise_power(power_template) {
                index_1 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                values  ("0.00020857, 0.00020857, 0.00020857, 0.00020857, 0.00020857, 0.00020857, 0.00020857");
              }
              fall_power(power_template) {
                index_1 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                values  ("0.00020857, 0.00020857, 0.00020857, 0.00020857, 0.00020857, 0.00020857, 0.00020857");
              }
             }
/* READ POWER */
             internal_power() {
             when : "!CEN & GWEN";
             rise_power(power_template) {
                index_1 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                values  ("662.018, 662.018, 662.018, 662.018, 662.018, 662.018, 662.018");
              }
              fall_power(power_template) {
                index_1 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                values  ("662.018, 662.018, 662.018, 662.018, 662.018, 662.018, 662.018");
              }
             }
          }

          pg_pin(VDD) {
                  voltage_name     : VDD;
                  pg_type          : primary_power;
          }
          pg_pin(VSS) {
                  voltage_name     : VSS;
                  pg_type          : primary_ground;
          }
          pin(CEN)   {
                  direction            : input;
                  capacitance          : 0.0189488;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                          index_2 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                          values  ( \
                            "0.659549, 0.653928, 0.648725, 0.672595, 0.739673, 0.811008, 0.867493", \
                            "0.651706, 0.642477, 0.641003, 0.664598, 0.729256, 0.799634, 0.866437", \
                            "0.647262, 0.640981, 0.632478, 0.653279, 0.710523, 0.773487, 0.8349", \
                            "0.64537, 0.639749, 0.631477, 0.652223, 0.710424, 0.747472, 0.786357", \
                            "0.644424, 0.639199, 0.630883, 0.652058, 0.706739, 0.746669, 0.76219", \
                            "0.644424, 0.638561, 0.630773, 0.65142, 0.707289, 0.746042, 0.789239", \
                            "0.643621, 0.63811, 0.62986, 0.650672, 0.708587, 0.751322, 0.776391" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                          index_2 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                          values  ( \
                            "0.587433, 0.591998, 0.616682, 0.675048, 0.780043, 0.902308, 1.04326", \
                            "0.583484, 0.586982, 0.613118, 0.671055, 0.776083, 0.899426, 1.0393", \
                            "0.580855, 0.585409, 0.610401, 0.668426, 0.772486, 0.895708, 1.03034", \
                            "0.579348, 0.584364, 0.609004, 0.667359, 0.772365, 0.901406, 1.03557", \
                            "0.578732, 0.583825, 0.608597, 0.666809, 0.771815, 0.894091, 1.03488", \
                            "0.577599, 0.583286, 0.607761, 0.664785, 0.77121, 0.893442, 1.0281", \
                            "0.577599, 0.582637, 0.607167, 0.665533, 0.769604, 0.899074, 1.03374" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                          index_2 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                          values  ( \
                            "1.85218, 1.8579, 1.86604, 1.84503, 1.78904, 1.74757, 1.7193", \
                            "1.86703, 1.87693, 1.88067, 1.85966, 1.80598, 1.76517, 1.72392", \
                            "1.89497, 1.90124, 1.90971, 1.88892, 1.83172, 1.79586, 1.76286", \
                            "1.94634, 1.95195, 1.9602, 1.93952, 1.88133, 1.84426, 1.81247", \
                            "2.03324, 2.03841, 2.04677, 2.02554, 1.97087, 1.93094, 1.91543", \
                            "2.11728, 2.12311, 2.13092, 2.11024, 2.05436, 2.01564, 1.97252", \
                            "2.16909, 2.17459, 2.18284, 2.16205, 2.10408, 2.0614, 2.03632" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                          index_2 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                          values  ( \
                            "1.91785, 1.91323, 1.88859, 1.83029, 1.72524, 1.60303, 1.46201", \
                            "1.93259, 1.92907, 1.90289, 1.84503, 1.73998, 1.61656, 1.47675", \
                            "1.9613, 1.95679, 1.93182, 1.87374, 1.76968, 1.64648, 1.51184", \
                            "2.01234, 2.00739, 1.98275, 1.92434, 1.8194, 1.69037, 1.55617", \
                            "2.09891, 2.09385, 2.06899, 2.0108, 1.90575, 1.78354, 1.64274", \
                            "2.18416, 2.17844, 2.15391, 2.09693, 1.99045, 1.86824, 1.7336", \
                            "2.23509, 2.23003, 2.2055, 2.1472, 2.04314, 1.91367, 1.77903" \
                          )
                          }
                 }
          }
          pin(GWEN)   {
                  direction            : input;
                  capacitance          : 0.0514938;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                          index_2 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                          values  ( \
                            "0.933856, 0.941567, 0.963853, 1.02038, 1.10582, 1.21338, 1.31175", \
                            "0.928455, 0.935286, 0.95898, 1.0142, 1.10053, 1.20744, 1.3079", \
                            "0.905795, 0.911889, 0.935858, 0.990726, 1.07638, 1.18154, 1.28172", \
                            "0.854832, 0.86185, 0.884048, 0.940577, 1.02711, 1.13374, 1.23068", \
                            "0.767877, 0.774774, 0.798369, 0.853666, 0.939796, 1.04468, 1.14591", \
                            "0.692417, 0.698676, 0.721072, 0.777601, 0.863588, 0.968506, 1.06865", \
                            "0.632148, 0.639155, 0.661584, 0.717497, 0.8041, 0.910998, 1.0089" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                          index_2 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                          values  ( \
                            "1.01397, 1.02343, 1.05749, 1.13458, 1.25866, 1.42549, 1.61623", \
                            "1.00785, 1.01667, 1.05106, 1.12846, 1.25396, 1.41702, 1.61007", \
                            "0.984192, 0.993377, 1.02639, 1.10453, 1.22911, 1.39667, 1.58488", \
                            "0.934307, 0.943283, 0.977823, 1.05482, 1.17995, 1.34486, 1.53637", \
                            "0.847374, 0.856471, 0.889361, 0.967868, 1.09337, 1.26007, 1.44947", \
                            "0.771012, 0.780318, 0.813923, 0.89111, 1.01716, 1.18346, 1.37313", \
                            "0.71137, 0.72083, 0.755172, 0.831776, 0.955306, 1.12384, 1.31395" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                          index_2 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                          values  ( \
                            "1.37181, 1.36422, 1.34123, 1.29162, 1.22914, 1.17479, 1.14062", \
                            "1.37456, 1.3673, 1.34365, 1.29415, 1.2312, 1.17852, 1.14411", \
                            "1.38237, 1.37511, 1.35223, 1.30251, 1.23921, 1.19012, 1.15156", \
                            "1.39139, 1.38369, 1.36081, 1.31054, 1.24794, 1.19496, 1.16148", \
                            "1.41592, 1.40833, 1.38622, 1.33573, 1.2716, 1.22397, 1.18742", \
                            "1.43099, 1.42373, 1.40074, 1.35124, 1.28766, 1.23933, 1.20057", \
                            "1.42263, 1.41504, 1.39216, 1.34277, 1.27831, 1.22626, 1.19148" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                          index_2 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                          values  ( \
                            "0.689557, 0.681241, 0.645062, 0.568095, 0.4466, 0.286517, 0.104138", \
                            "0.693627, 0.683782, 0.64713, 0.57101, 0.447271, 0.292061, 0.10693", \
                            "0.699424, 0.692846, 0.655303, 0.580844, 0.457501, 0.297275, 0.114658", \
                            "0.708928, 0.700128, 0.66429, 0.587752, 0.462374, 0.308143, 0.123684", \
                            "0.73271, 0.725604, 0.688072, 0.612183, 0.488125, 0.33242, 0.145412", \
                            "0.816332, 0.805475, 0.771749, 0.695629, 0.565004, 0.404173, 0.225278", \
                            "0.912362, 0.903276, 0.867339, 0.790977, 0.662101, 0.500181, 0.320166" \
                          )
                          }
                 }
          }
          bus(WEN)   {
                  bus_type             : Q_BUS;
                  direction            : input;
                  capacitance          : 0.00826446;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                          index_2 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                          values  ( \
                            "0, 0, 0, 0, 0, 0, 0", \
                            "0, 0, 0, 0, 0, 0, 0", \
                            "0, 0, 0, 0, 0, 0, 0", \
                            "0, 0, 0, 0, 0, 0, 0", \
                            "0, 0, 0, 0, 0, 0, 0", \
                            "0, 0, 0, 0, 0, 0, 0", \
                            "0, 0, 0, 0, 0, 0, 0" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                          index_2 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                          values  ( \
                            "0.352583, 0.360987, 0.396429, 0.473044, 0.594781, 0.754666, 0.938795", \
                            "0.348667, 0.359238, 0.393118, 0.470437, 0.5951, 0.750717, 0.937123", \
                            "0.34265, 0.348568, 0.385066, 0.460086, 0.583506, 0.743875, 0.928191", \
                            "0.331452, 0.339977, 0.375111, 0.45078, 0.57816, 0.732358, 0.917972", \
                            "0.309232, 0.31559, 0.352198, 0.429319, 0.552728, 0.70972, 0.897193", \
                            "0.293975, 0.301719, 0.338173, 0.413974, 0.538747, 0.696828, 0.882002", \
                            "0.300322, 0.305558, 0.340901, 0.418913, 0.543444, 0.700953, 0.885401" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                          index_2 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                          values  ( \
                            "1.37181, 1.36631, 1.34233, 1.29162, 1.22915, 1.17744, 1.14162", \
                            "1.37456, 1.3695, 1.34552, 1.29415, 1.23236, 1.18065, 1.14484", \
                            "1.38237, 1.3772, 1.35322, 1.30251, 1.24007, 1.19012, 1.15254", \
                            "1.39139, 1.38589, 1.36202, 1.31054, 1.24879, 1.19708, 1.16148", \
                            "1.41592, 1.41053, 1.38655, 1.33573, 1.27336, 1.22397, 1.18742", \
                            "1.43099, 1.42593, 1.40195, 1.35124, 1.28876, 1.23933, 1.20122", \
                            "1.42263, 1.41713, 1.39315, 1.34277, 1.27996, 1.22829, 1.19248" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                          index_2 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                          values  ( \
                            "0.692395, 0.681241, 0.646646, 0.568095, 0.4466, 0.286517, 0.104138", \
                            "0.693627, 0.683782, 0.648604, 0.57101, 0.447271, 0.292743, 0.10693", \
                            "0.701382, 0.692846, 0.65571, 0.580844, 0.457501, 0.297275, 0.114658", \
                            "0.709808, 0.702482, 0.665973, 0.587752, 0.462374, 0.308143, 0.123684", \
                            "0.734646, 0.725604, 0.689601, 0.612183, 0.488125, 0.33242, 0.145412", \
                            "0.75097, 0.740399, 0.703076, 0.628672, 0.503514, 0.345939, 0.160178", \
                            "0.741213, 0.733546, 0.697818, 0.620554, 0.498465, 0.337931, 0.155361" \
                          )
                          }
                 }
          }
          bus(A)   {
                  bus_type             : A_BUS;
                  direction            : input;
                  capacitance          : 0.0425306;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                          index_2 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                          values  ( \
                            "0.844206, 0.837485, 0.830357, 0.860057, 0.928686, 1.00316, 1.06888", \
                            "0.836319, 0.834064, 0.827189, 0.856647, 0.925848, 1.00258, 1.06796", \
                            "0.830621, 0.825671, 0.820149, 0.848936, 0.916234, 0.992145, 1.05828", \
                            "0.819544, 0.816222, 0.810359, 0.837199, 0.906092, 0.983488, 1.04942", \
                            "0.797082, 0.789272, 0.788073, 0.814627, 0.883685, 0.962148, 1.02672", \
                            "0.782199, 0.777601, 0.771276, 0.80036, 0.867306, 0.945945, 1.00909", \
                            "0.790064, 0.782265, 0.776787, 0.80487, 0.872707, 0.952842, 1.01752" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                          index_2 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                          values  ( \
                            "1.1569, 1.15515, 1.18689, 1.24724, 1.35729, 1.49468, 1.65429", \
                            "1.15316, 1.15534, 1.18181, 1.24427, 1.3541, 1.49248, 1.65022", \
                            "1.14269, 1.14831, 1.17705, 1.23615, 1.34651, 1.48247, 1.64318", \
                            "1.1323, 1.13863, 1.16734, 1.22797, 1.33661, 1.47323, 1.6302", \
                            "1.11262, 1.11347, 1.14268, 1.20497, 1.31318, 1.45233, 1.6093", \
                            "1.09462, 1.09758, 1.12879, 1.18698, 1.29569, 1.4355, 1.59324", \
                            "1.10209, 1.10109, 1.13219, 1.19365, 1.3024, 1.44023, 1.59797" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                          index_2 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                          values  ( \
                            "0.81554, 0.82247, 0.824824, 0.807664, 0.799029, 0.792506, 0.787578", \
                            "0.824626, 0.832205, 0.834218, 0.817399, 0.809006, 0.802252, 0.797302", \
                            "0.849662, 0.856581, 0.858913, 0.841775, 0.833976, 0.826628, 0.8217", \
                            "0.901538, 0.908446, 0.910756, 0.89364, 0.885841, 0.878493, 0.873554", \
                            "0.980815, 0.98769, 0.99, 0.972884, 0.965074, 0.957671, 0.952809", \
                            "1.07039, 1.07789, 1.08021, 1.06308, 1.05527, 1.04794, 1.04299", \
                            "1.14369, 1.15073, 1.15275, 1.13593, 1.12813, 1.12071, 1.11584" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                          index_2 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                          values  ( \
                            "0.849475, 0.843601, 0.815661, 0.771375, 0.743974, 0.738727, 0.745437", \
                            "0.859199, 0.853336, 0.825407, 0.781121, 0.753698, 0.748451, 0.755183", \
                            "0.883597, 0.878174, 0.849772, 0.805497, 0.778074, 0.772827, 0.779559", \
                            "0.934945, 0.930017, 0.901648, 0.857373, 0.829939, 0.824692, 0.831424", \
                            "1.01473, 1.00948, 0.980881, 0.936606, 0.909183, 0.903936, 0.910668", \
                            "1.10498, 1.09902, 1.07108, 1.02681, 0.999383, 0.994147, 1.00086", \
                            "1.17784, 1.17186, 1.14382, 1.09965, 1.07223, 1.067, 1.07371" \
                          )
                          }
                 }
          }
          bus(D)   {
                  bus_type             : Q_BUS;
                  memory_write() {
                          address      : A;
                          clocked_on   : "CLK";
                  }
                  direction            : input;
                  capacitance          : 0.0175888;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                          index_2 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                          values  ( \
                            "0.773718, 0.782056, 0.804287, 0.831666, 0.831754, 0.808467, 0.749144", \
                            "0.77055, 0.777337, 0.798226, 0.829642, 0.826903, 0.803649, 0.746801", \
                            "0.760914, 0.770473, 0.791978, 0.816244, 0.823262, 0.797984, 0.738507", \
                            "0.751135, 0.758989, 0.782001, 0.809171, 0.812537, 0.789657, 0.727991", \
                            "0.730147, 0.737726, 0.759462, 0.782749, 0.788392, 0.762685, 0.708125", \
                            "0.710424, 0.721237, 0.747021, 0.772673, 0.765699, 0.748198, 0.689238", \
                            "0.719653, 0.726781, 0.749837, 0.77825, 0.776534, 0.755117, 0.69476" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                          index_2 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                          values  ( \
                            "0.099033, 0.0928972, 0.130921, 0.218309, 0.360514, 0.540958, 0.763433", \
                            "0.093874, 0.0930699, 0.124974, 0.211185, 0.355223, 0.537438, 0.760078", \
                            "0.0877294, 0.0853996, 0.117339, 0.20447, 0.347358, 0.529298, 0.750409", \
                            "0.0724713, 0.0725483, 0.108593, 0.194952, 0.337238, 0.519244, 0.741972", \
                            "0.054571, 0.049687, 0.0860134, 0.17383, 0.314105, 0.494692, 0.72061", \
                            "0.034771, 0.034551, 0.0686411, 0.153512, 0.300223, 0.478269, 0.703373", \
                            "0.043978, 0.036311, 0.0760342, 0.16362, 0.305888, 0.486519, 0.706937" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                          index_2 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                          values  ( \
                            "0.671407, 0.661309, 0.635239, 0.610302, 0.612315, 0.634436, 0.691394", \
                            "0.676324, 0.668239, 0.642257, 0.611622, 0.615879, 0.638088, 0.696058", \
                            "0.683111, 0.672078, 0.651035, 0.625427, 0.623678, 0.647295, 0.70213", \
                            "0.694496, 0.681384, 0.662024, 0.63481, 0.633325, 0.65241, 0.712624", \
                            "0.713669, 0.709313, 0.683342, 0.658658, 0.657382, 0.680449, 0.733689", \
                            "0.735779, 0.72226, 0.699149, 0.670373, 0.674146, 0.696256, 0.753291", \
                            "0.725142, 0.719103, 0.689381, 0.664543, 0.665555, 0.687236, 0.742236" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                          index_2 ("0.02, 0.06956, 0.2435, 0.5757, 1.093, 1.819, 2.775");
                          values  ( \
                            "1.02241, 1.02512, 0.991309, 0.905135, 0.761937, 0.579909, 0.360503", \
                            "1.02505, 1.02884, 0.995291, 0.908292, 0.765094, 0.583066, 0.363693", \
                            "1.0338, 1.03627, 1.00288, 0.916685, 0.773487, 0.59147, 0.372042", \
                            "1.04344, 1.04834, 1.01228, 0.92609, 0.782903, 0.600875, 0.381502", \
                            "1.06695, 1.06964, 1.03612, 0.949938, 0.806751, 0.624349, 0.405328", \
                            "1.08716, 1.0872, 1.05323, 0.967032, 0.823845, 0.641817, 0.422433", \
                            "1.07669, 1.08308, 1.04556, 0.959376, 0.816189, 0.634161, 0.414744" \
                          )
                          }
                 }
        }
          cell_leakage_power : 0.0002085705;
}
}
