/*
 * Copyright 2022 GlobalFoundries PDK Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 *      Single Port SRAM cell name : gf180mcu_fd_ip_sram__sram256x8m8wm1
 *      Technology                 : GF 180nm 5V Green
 *
 *      ---------
 *      Pin name:
 *      ---------
 *      Input Pins : CLK CEN GWEN WEN[7:0] A[7:0] D[7:0]
 *      Inout Pins:  VDD VSS
 *      Output Pins: Q[7:0]
 *
 *     Revision History: 1.0 (Initial Release: June 20, 2014)
 */

library(gf180mcu_fd_ip_sram__sram256x8m8wm1__ff_n40C_1v98) {
        delay_model             : table_lookup;
        revision                : 1.0;
        date                    : "June 20, 2014";
        comment                 : "GF 180nm 5V Green";
        voltage_unit            : "1V";
        time_unit               : "1ns";
        current_unit            : "1mA";
        leakage_power_unit      : "1mW";
        nom_process             : 1;
        nom_temperature         : -40;
        nom_voltage             : 1.98;
        capacitive_load_unit    (1,pf);
        pulling_resistance_unit : "1kohm";

        /* additional header data */
        default_fanout_load            : 1;
        default_inout_pin_cap          : 0.045;
        default_input_pin_cap          : 0.045;
        default_output_pin_cap         : 0;
        default_max_transition         : 2.315;
        default_cell_leakage_power     : 0;

         /* default attributes */
         slew_derate_from_library      : 1.000;
         slew_lower_threshold_pct_fall : 10.000;
         slew_upper_threshold_pct_fall : 90.000;
         slew_lower_threshold_pct_rise : 10.000;
         slew_upper_threshold_pct_rise : 90.000;
         input_threshold_pct_fall      : 50.000;
         input_threshold_pct_rise      : 50.000;
         output_threshold_pct_fall     : 50.000;
         output_threshold_pct_rise     : 50.000;
         default_leakage_power_density : 0;

        /* k-factors */
        k_process_recovery_fall        : 1;
        k_process_recovery_rise        : 1;
        k_process_cell_fall            : 1;
        k_process_cell_leakage_power   : 0;
        k_process_cell_rise            : 1;
        k_process_fall_transition      : 1;
        k_process_hold_fall            : 1;
        k_process_hold_rise            : 1;
        k_process_internal_power       : 0;
        k_process_min_pulse_width_high : 1;
        k_process_min_pulse_width_low  : 1;
        k_process_setup_fall           : 1;
        k_process_setup_rise           : 1;
        k_process_wire_cap             : 0;
        k_process_wire_res             : 0;
        k_process_pin_cap              : 0;
        k_process_rise_transition      : 1;
        k_temp_cell_fall               : 0.000;
        k_temp_cell_rise               : 0.000;
        k_temp_hold_fall               : 0.000;
        k_temp_hold_rise               : 0.000;
        k_temp_min_pulse_width_high    : 0.000;
        k_temp_min_pulse_width_low     : 0.000;
        k_temp_min_period              : 0.000;
        k_temp_rise_propagation        : 0.000;
        k_temp_fall_propagation        : 0.000;
        k_temp_rise_transition         : 0.000;
        k_temp_fall_transition         : 0.000;
        k_temp_recovery_fall           : 0.000;
        k_temp_recovery_rise           : 0.000;
        k_temp_setup_fall              : 0.000;
        k_temp_setup_rise              : 0.000;
        k_volt_cell_fall               : 0.000;
        k_volt_cell_rise               : 0.000;
        k_volt_hold_fall               : 0.000;
        k_volt_hold_rise               : 0.000;
        k_volt_min_pulse_width_high    : 0.000;
        k_volt_min_pulse_width_low     : 0.000;
        k_volt_min_period              : 0.000;
        k_volt_recovery_fall           : 0.000;
        k_volt_recovery_rise           : 0.000;
        k_volt_setup_fall              : 0.000;
        k_volt_setup_rise              : 0.000;
        k_volt_rise_propagation        : 0.000;
        k_volt_fall_propagation        : 0.000;
        k_volt_rise_transition         : 0.000;
        k_volt_fall_transition         : 0.000;

         voltage_map (VDD, 1.98);
         voltage_map (VSS, 0.00);
         operating_conditions(ff_1p98v_m40C) {
                process       : 1;
                temperature   : -40;
                voltage       : 1.98;
                tree_type     : balanced_tree;
         }

         default_operating_conditions : ff_1p98v_m40C;
         wire_load("Estimate") {
                resistance    : 1.44e-05;
                capacitance   : 0.00018;
                area          : 1.7;
                slope         : 500;
                fanout_length (1,500);
         }
         power_lut_template(power_template) {
            variable_1 : input_transition_time;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(q_delay_template) {
            variable_1 : input_net_transition;
            variable_2 : total_output_net_capacitance;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
                 index_2 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(q_slew_template) {
            variable_1 : total_output_net_capacitance;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(constraint_template) {
            variable_1 : related_pin_transition;
            variable_2 : constrained_pin_transition;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
                 index_2 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }

         library_features(report_delay_calculation);

         type (A_BUS) {
                base_type : array;
                data_type : bit;
                bit_width : 8;
                bit_from  : 7;
                bit_to    : 0;
                downto    : true;
         }
         type (Q_BUS) {
                base_type : array;
                data_type : bit;
                bit_width : 8;
                bit_from  : 7;
                bit_to    : 0;
                downto    : true;
         }
 cell(gf180mcu_fd_ip_sram__sram256x8m8wm1) {
        area             : 147212.4368;
        dont_use         : TRUE;
        dont_touch       : TRUE;
        interface_timing : TRUE;
        memory() {
                type          : ram;
                address_width : 8;
                word_width    : 8;
        }

                 bus(Q)   {
                  bus_type             : Q_BUS;
                  direction            : output;
                  max_capacitance      : 0.973;
                  memory_read() {
                        address        : A;
                  }
                  timing() {
                          related_pin  : "CLK";
                          timing_type  : rising_edge;
                          timing_sense : non_unate;
       		  when : "((!CEN) & (GWEN))";
        	  sdf_cond : "CEN== 1'b0 && GWEN== 1'b1";
                          cell_rise(q_delay_template) {
			  index_1 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
			  index_2 ("0.01, 0.02732, 0.08813, 0.2042, 0.3851, 0.639, 0.973");
                          values  ( \
                            "7.81572, 7.86564, 7.96908, 8.1402, 8.3916, 8.73252, 9.19596", \
                            "7.82688, 7.8558, 7.96272, 8.15184, 8.39352, 8.73816, 9.18984", \
                            "7.87272, 7.9104, 8.00748, 8.18352, 8.41692, 8.77764, 9.22752", \
                            "7.88688, 7.9314, 8.02404, 8.18496, 8.45844, 8.7942, 9.26676", \
                            "7.94652, 7.98528, 8.0868, 8.265, 8.51916, 8.85732, 9.31056", \
                            "8.00124, 8.04144, 8.14824, 8.31192, 8.5704, 8.91528, 9.36744", \
                            "8.07552, 8.09964, 8.20932, 8.3808, 8.637, 8.98452, 9.4314" \
                          )
                          }
                          rise_transition(q_slew_template) {
                          index_1 ("0.01, 0.02732, 0.08813, 0.2042, 0.3851, 0.639, 0.973");
                          values  ( \
  	                     "0.255792, 0.29964, 0.451968, 0.738288, 1.18367, 1.8498, 2.71212" \
                          )

                          }
                          cell_fall(q_delay_template) {
                          index_1 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                          index_2 ("0.01, 0.02732, 0.08813, 0.2042, 0.3851, 0.639, 0.973");
                          values  ( \
                            "8.1864, 8.23704, 8.32428, 8.45304, 8.60844, 8.79624, 9.05148", \
                            "8.19996, 8.22912, 8.31972, 8.46936, 8.60856, 8.80572, 9.03948", \
                            "8.24628, 8.27364, 8.35884, 8.49192, 8.63088, 8.83704, 9.07512", \
                            "8.2602, 8.29836, 8.38164, 8.50404, 8.6754, 8.85828, 9.11016", \
                            "8.31984, 8.35416, 8.44632, 8.57136, 8.72916, 8.92392, 9.16272", \
                            "8.37348, 8.41488, 8.49972, 8.62236, 8.78808, 8.97732, 9.22284", \
                            "8.44884, 8.47344, 8.56776, 8.697, 8.85468, 9.04608, 9.28644" \
                          )
                          }
                          fall_transition(q_slew_template) {
                          index_1 ("0.01, 0.02732, 0.08813, 0.2042, 0.3851, 0.639, 0.973");
                          values  ( \
                            "0.252852, 0.286248, 0.38142, 0.517788, 0.730836, 1.01138, 1.38156" \
                          )
                          }
                  }
          }
          pin(CLK)   {
                  direction            : input;
                  capacitance          : 0.270567;
                  clock                : true;
                  max_transition       : 2.315;
                  min_pulse_width_high : 4.664565;
                  min_pulse_width_low  : 4.743105;
                  min_period           : 10.55478;

/* WRITE POWER */
             internal_power() {
              when : "!CEN & !GWEN & (!WEN[0] | !WEN[1] | !WEN[2] | !WEN[3] | !WEN[4] | !WEN[5] | !WEN[6] | !WEN[7])";
              rise_power(power_template) {
                index_1 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                values  ("120.602, 120.602, 120.602, 120.602, 120.602, 120.602, 120.602");
              }
              fall_power(power_template) {
                index_1 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                values  ("120.602, 120.602, 120.602, 120.602, 120.602, 120.602, 120.602");
              }
             }
/* DISABLED POWER */
             internal_power() {
              when : "CEN";
              rise_power(power_template) {
                index_1 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                values  ("5.34501e-05, 5.34501e-05, 5.34501e-05, 5.34501e-05, 5.34501e-05, 5.34501e-05, 5.34501e-05");
              }
              fall_power(power_template) {
                index_1 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                values  ("5.34501e-05, 5.34501e-05, 5.34501e-05, 5.34501e-05, 5.34501e-05, 5.34501e-05, 5.34501e-05");
              }
             }
/* READ POWER */
             internal_power() {
             when : "!CEN & GWEN";
             rise_power(power_template) {
                index_1 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                values  ("110.454, 110.454, 110.454, 110.454, 110.454, 110.454, 110.454");
              }
              fall_power(power_template) {
                index_1 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                values  ("110.454, 110.454, 110.454, 110.454, 110.454, 110.454, 110.454");
              }
             }
          }

          pg_pin(VDD) {
                  voltage_name     : VDD;
                  pg_type          : primary_power;
          }
          pg_pin(VSS) {
                  voltage_name     : VSS;
                  pg_type          : primary_ground;
          }
          pin(CEN)   {
                  direction            : input;
                  capacitance          : 0.0172439;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                          index_2 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                          values  ( \
                            "0.79816, 0.787347, 0.78716, 0.830819, 0.941237, 1.09125, 1.23563", \
                            "0.786775, 0.773949, 0.776094, 0.819742, 0.93005, 1.08018, 1.23377", \
                            "0.758604, 0.749353, 0.749254, 0.79266, 0.902935, 1.0531, 1.19143", \
                            "0.707069, 0.69839, 0.69971, 0.738265, 0.844899, 0.995049, 1.14864", \
                            "0.706794, 0.698049, 0.699226, 0.737979, 0.841291, 0.964062, 1.06952", \
                            "0.70664, 0.697895, 0.69927, 0.737825, 0.841115, 0.963908, 1.05128", \
                            "0.70653, 0.697796, 0.698962, 0.737726, 0.841038, 0.958837, 1.04913" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                          index_2 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                          values  ( \
                            "0.652058, 0.658141, 0.687852, 0.757878, 0.880264, 1.0461, 1.24434", \
                            "0.648846, 0.652905, 0.684695, 0.754182, 0.877393, 1.04278, 1.23504", \
                            "0.648461, 0.652476, 0.684354, 0.753038, 0.877052, 1.04244, 1.24121", \
                            "0.648274, 0.652388, 0.684145, 0.753621, 0.875358, 1.04222, 1.23449", \
                            "0.647977, 0.65208, 0.683848, 0.753247, 0.876546, 1.04193, 1.23419", \
                            "0.647823, 0.651948, 0.683705, 0.753192, 0.874918, 1.04179, 1.23409", \
                            "0.647713, 0.651772, 0.683441, 0.752664, 0.876293, 1.04168, 1.24053" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                          index_2 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                          values  ( \
                            "1.9932, 2.002, 2.00079, 1.96196, 1.85856, 1.73591, 1.64846", \
                            "2.00354, 2.01652, 2.01113, 1.97241, 1.86912, 1.74636, 1.64824", \
                            "2.03797, 2.04666, 2.04545, 2.00684, 1.90355, 1.78079, 1.68872", \
                            "2.0966, 2.10529, 2.10397, 2.06547, 1.96218, 1.83942, 1.7413", \
                            "2.20572, 2.21452, 2.21331, 2.17459, 2.07119, 1.94843, 1.85669", \
                            "2.3529, 2.3617, 2.36027, 2.32177, 2.21848, 2.09561, 2.00827", \
                            "2.4849, 2.4937, 2.49249, 2.45377, 2.35037, 2.23267, 2.14236" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                          index_2 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                          values  ( \
                            "2.05194, 2.04787, 2.0163, 1.94656, 1.82402, 1.65803, 1.46575", \
                            "2.06239, 2.05832, 2.02653, 1.95701, 1.83381, 1.66848, 1.4762", \
                            "2.09682, 2.09286, 2.06096, 1.99232, 1.86824, 1.70291, 1.50414", \
                            "2.15545, 2.15138, 2.11959, 2.05007, 1.92841, 1.76154, 1.56926", \
                            "2.26457, 2.2605, 2.22871, 2.1593, 2.03599, 1.87055, 1.67838", \
                            "2.41175, 2.40757, 2.37589, 2.30637, 2.1846, 2.01773, 1.82545", \
                            "2.54375, 2.53968, 2.508, 2.43881, 2.31517, 2.14973, 1.95096" \
                          )
                          }
                 }
          }
          pin(GWEN)   {
                  direction            : input;
                  capacitance          : 0.0440075;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                          index_2 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                          values  ( \
                            "1.00536, 1.01264, 1.0487, 1.10638, 1.20385, 1.31505, 1.43297", \
                            "0.993047, 1.00624, 1.03637, 1.09406, 1.19152, 1.30272, 1.42043", \
                            "0.967934, 0.975172, 1.01026, 1.06912, 1.16648, 1.27763, 1.3959", \
                            "0.909612, 0.916817, 0.951896, 1.01061, 1.10811, 1.21927, 1.33705", \
                            "0.820523, 0.827794, 0.863874, 0.921734, 1.01908, 1.13024, 1.24808", \
                            "0.731291, 0.73854, 0.773597, 0.832458, 0.929797, 1.04096, 1.15885", \
                            "0.661562, 0.6688, 0.704891, 0.762586, 0.860046, 0.972224, 1.08909" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                          index_2 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                          values  ( \
                            "1.18864, 1.20172, 1.23673, 1.31931, 1.45189, 1.62514, 1.83909", \
                            "1.17615, 1.1895, 1.22916, 1.307, 1.43814, 1.61282, 1.82677", \
                            "1.15116, 1.16415, 1.20408, 1.27285, 1.41306, 1.58774, 1.80532", \
                            "1.0927, 1.10596, 1.14572, 1.22354, 1.35586, 1.52944, 1.74493", \
                            "1.00422, 1.01696, 1.05667, 1.13067, 1.26564, 1.44034, 1.65594", \
                            "0.91454, 0.927531, 0.967417, 1.04523, 1.17759, 1.35113, 1.56497", \
                            "0.844679, 0.857791, 0.893013, 0.974402, 1.10666, 1.28137, 1.50073" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                          index_2 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                          values  ( \
                            "1.34255, 1.33606, 1.30079, 1.24444, 1.1673, 1.09737, 1.03784", \
                            "1.34387, 1.33452, 1.30199, 1.24559, 1.16845, 1.09853, 1.05376", \
                            "1.37126, 1.36466, 1.32946, 1.27307, 1.19513, 1.12601, 1.06648", \
                            "1.40173, 1.39513, 1.35993, 1.30352, 1.22557, 1.15646, 1.11168", \
                            "1.44628, 1.43957, 1.40459, 1.34816, 1.27026, 1.20113, 1.14161", \
                            "1.51041, 1.5037, 1.4685, 1.41207, 1.33419, 1.26672, 1.20553", \
                            "1.55331, 1.5466, 1.5114, 1.45497, 1.37786, 1.30792, 1.24841" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                          index_2 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                          values  ( \
                            "0.710853, 0.703384, 0.667953, 0.577995, 0.447425, 0.28106, 0.079376", \
                            "0.711678, 0.704473, 0.664477, 0.579315, 0.450197, 0.283521, 0.080575", \
                            "0.739431, 0.732028, 0.692076, 0.616638, 0.477708, 0.309695, 0.09669", \
                            "0.769527, 0.762465, 0.722557, 0.637197, 0.5071, 0.340219, 0.138489", \
                            "0.814572, 0.807059, 0.767151, 0.684035, 0.552838, 0.384813, 0.183466", \
                            "0.878548, 0.869484, 0.831061, 0.745789, 0.615692, 0.448734, 0.247185", \
                            "0.92103, 0.91388, 0.875501, 0.791461, 0.659615, 0.491579, 0.278659" \
                          )
                          }
                 }
          }
          bus(WEN)   {
                  bus_type             : Q_BUS;
                  direction            : input;
                  capacitance          : 0.00700372;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                          index_2 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                          values  ( \
                            "0, 0, 0, 0, 0.007106, 0.077187, 0.134582", \
                            "0, 0, 0, 0, 0.006523, 0.077946, 0.132738", \
                            "0, 0, 0, 0, 0, 0.050292, 0.106491", \
                            "0, 0, 0, 0, 0, 0.019855, 0.074646", \
                            "0, 0, 0, 0, 0, 0, 0.02981", \
                            "0, 0, 0, 0, 0, 0, 0", \
                            "0, 0, 0, 0, 0, 0, 0" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                          index_2 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                          values  ( \
                            "0.45936, 0.470492, 0.506748, 0.590722, 0.723789, 0.892265, 1.09347", \
                            "0.459965, 0.469293, 0.50655, 0.590557, 0.720786, 0.891385, 1.09288", \
                            "0.43164, 0.4422, 0.479501, 0.556413, 0.693077, 0.864182, 1.07568", \
                            "0.401654, 0.41041, 0.449845, 0.532224, 0.664411, 0.833756, 1.03619", \
                            "0.35805, 0.366168, 0.403612, 0.483076, 0.616528, 0.787655, 0.989868", \
                            "0.291954, 0.301805, 0.340032, 0.423445, 0.553333, 0.724031, 0.925034", \
                            "0.250131, 0.26049, 0.297898, 0.379621, 0.511247, 0.682374, 0.894553" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                          index_2 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                          values  ( \
                            "1.34497, 1.33606, 1.30599, 1.24524, 1.17006, 1.09737, 1.04161", \
                            "1.34618, 1.33694, 1.30716, 1.24642, 1.17125, 1.09853, 1.05376", \
                            "1.37357, 1.36466, 1.33463, 1.27391, 1.19873, 1.12601, 1.07027", \
                            "1.40404, 1.39513, 1.3651, 1.30436, 1.22918, 1.15646, 1.11168", \
                            "1.44881, 1.43957, 1.40976, 1.34904, 1.27386, 1.20113, 1.14541", \
                            "1.51261, 1.5037, 1.47367, 1.41295, 1.33771, 1.26672, 1.2093", \
                            "1.55562, 1.5466, 1.51668, 1.45596, 1.38072, 1.30792, 1.2523" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                          index_2 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                          values  ( \
                            "0.710853, 0.704099, 0.667953, 0.577995, 0.447425, 0.28106, 0.079794", \
                            "0.711678, 0.705155, 0.664477, 0.579315, 0.450197, 0.283521, 0.080982", \
                            "0.739431, 0.732743, 0.692076, 0.616638, 0.477708, 0.309695, 0.096734", \
                            "0.769527, 0.763213, 0.722557, 0.637197, 0.5071, 0.340219, 0.138489", \
                            "0.814572, 0.807785, 0.767151, 0.684035, 0.552838, 0.384813, 0.183466", \
                            "0.878548, 0.869792, 0.831061, 0.745789, 0.615692, 0.448734, 0.247594", \
                            "0.92103, 0.914661, 0.875501, 0.791461, 0.659615, 0.491579, 0.278659" \
                          )
                          }
                 }
          }
          bus(A)   {
                  bus_type             : A_BUS;
                  direction            : input;
                  capacitance          : 0.0374549;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                          index_2 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                          values  ( \
                            "0.920029, 0.928246, 0.927421, 0.974237, 1.06946, 1.21652, 1.34882", \
                            "0.927894, 0.92884, 0.930061, 0.972411, 1.07237, 1.21678, 1.36147", \
                            "0.897072, 0.904024, 0.901318, 0.945373, 1.04386, 1.19142, 1.32385", \
                            "0.865799, 0.873037, 0.86944, 0.912923, 1.01138, 1.15667, 1.30111", \
                            "0.813934, 0.823801, 0.823141, 0.865799, 0.965107, 1.10965, 1.24572", \
                            "0.756811, 0.763059, 0.761321, 0.805134, 0.90354, 1.04905, 1.1829", \
                            "0.709522, 0.719686, 0.719972, 0.762586, 0.861157, 1.00691, 1.14077" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                          index_2 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                          values  ( \
                            "1.10205, 1.1071, 1.14038, 1.21373, 1.34156, 1.50095, 1.71237", \
                            "1.10153, 1.10845, 1.13676, 1.21239, 1.33892, 1.50183, 1.71457", \
                            "1.07337, 1.08261, 1.1134, 1.18383, 1.31304, 1.47499, 1.68575", \
                            "1.04115, 1.04598, 1.08134, 1.15547, 1.27953, 1.43968, 1.65462", \
                            "0.994455, 1.00084, 1.03392, 1.10853, 1.23467, 1.39689, 1.60897", \
                            "0.932217, 0.939015, 0.971718, 1.04669, 1.16974, 1.33408, 1.54726", \
                            "0.888591, 0.896599, 0.930721, 1.00256, 1.13048, 1.30403, 1.50403" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                          index_2 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                          values  ( \
                            "0.768196, 0.773575, 0.770748, 0.715594, 0.646371, 0.541618, 0.440946", \
                            "0.778646, 0.784014, 0.781198, 0.726044, 0.656821, 0.552079, 0.451396", \
                            "0.805046, 0.810425, 0.807609, 0.752455, 0.683232, 0.578479, 0.477796", \
                            "0.86823, 0.873609, 0.870793, 0.81565, 0.746427, 0.641674, 0.541002", \
                            "0.957869, 0.963226, 0.960421, 0.905278, 0.836044, 0.731302, 0.630619", \
                            "1.07949, 1.08486, 1.08205, 1.02689, 0.957671, 0.852929, 0.752246", \
                            "1.19105, 1.19643, 1.19361, 1.13846, 1.06923, 0.96448, 0.863808" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                          index_2 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                          values  ( \
                            "0.837144, 0.830346, 0.795905, 0.730873, 0.661617, 0.590315, 0.528264", \
                            "0.847561, 0.840796, 0.806344, 0.741323, 0.672078, 0.600776, 0.538714", \
                            "0.873961, 0.867207, 0.832755, 0.767723, 0.698478, 0.627176, 0.565125", \
                            "0.937189, 0.930402, 0.89595, 0.830918, 0.761684, 0.690371, 0.62832", \
                            "1.02678, 1.02002, 0.985578, 0.920546, 0.851301, 0.779999, 0.717948", \
                            "1.14841, 1.14168, 1.10719, 1.04217, 0.972928, 0.901626, 0.839575", \
                            "1.25997, 1.25321, 1.21876, 1.15372, 1.08449, 1.01318, 0.951126" \
                          )
                          }
                 }
          }
          bus(D)   {
                  bus_type             : Q_BUS;
                  memory_write() {
                          address      : A;
                          clocked_on   : "CLK";
                  }
                  direction            : input;
                  capacitance          : 0.0153635;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                          index_2 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                          values  ( \
                            "0.905696, 0.920436, 0.948178, 0.993883, 1.03314, 1.04653, 1.04077", \
                            "0.90453, 0.909821, 0.946605, 0.995423, 1.02838, 1.04234, 1.0331", \
                            "0.882728, 0.885588, 0.92301, 0.967505, 1.0069, 1.01206, 1.00965", \
                            "0.848144, 0.854843, 0.8899, 0.937178, 0.968638, 0.985116, 0.981618", \
                            "0.80025, 0.804914, 0.842842, 0.889977, 0.924638, 0.936375, 0.936408", \
                            "0.741994, 0.744447, 0.781462, 0.827145, 0.86053, 0.87505, 0.869077", \
                            "0.697642, 0.703428, 0.739673, 0.78606, 0.821414, 0.832183, 0.829048" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                          index_2 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                          values  ( \
                            "0.160907, 0.160189, 0.194678, 0.272532, 0.396242, 0.570636, 0.768383", \
                            "0.1616, 0.160873, 0.195361, 0.273158, 0.396935, 0.575366, 0.769076", \
                            "0.134017, 0.133304, 0.167737, 0.245634, 0.369358, 0.543741, 0.741499", \
                            "0.101959, 0.101233, 0.13573, 0.213409, 0.337293, 0.511676, 0.709434", \
                            "0.055638, 0.054912, 0.089397, 0.167236, 0.290973, 0.465366, 0.663113", \
                            "0, 0, 0.027588, 0.105402, 0.229159, 0.403557, 0.601304", \
                            "0, 0, 0, 0.063008, 0.186981, 0.364958, 0.558998" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                          index_2 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                          values  ( \
                            "0.579887, 0.570086, 0.539033, 0.490677, 0.456313, 0.443839, 0.441177", \
                            "0.583649, 0.574013, 0.542806, 0.494967, 0.460196, 0.4466, 0.445379", \
                            "0.611336, 0.601634, 0.570625, 0.52228, 0.484561, 0.467159, 0.472582", \
                            "0.642037, 0.632247, 0.601392, 0.553355, 0.518584, 0.504999, 0.503778", \
                            "0.689634, 0.678337, 0.648109, 0.599291, 0.559163, 0.550935, 0.547514", \
                            "0.745173, 0.737231, 0.706959, 0.657822, 0.623359, 0.609774, 0.606507", \
                            "0.792341, 0.782441, 0.751498, 0.703659, 0.668888, 0.64823, 0.653642" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                          index_2 ("0.02, 0.06127, 0.2062, 0.4828, 0.9139, 1.519, 2.315");
                          values  ( \
                            "1.07118, 1.0737, 1.03777, 0.96162, 0.837738, 0.661133, 0.468259", \
                            "1.07494, 1.07747, 1.04154, 0.965382, 0.8415, 0.664895, 0.472021", \
                            "1.10257, 1.10509, 1.06917, 0.993003, 0.869132, 0.692527, 0.499642", \
                            "1.13334, 1.13586, 1.09993, 1.02378, 0.899899, 0.723294, 0.53042", \
                            "1.17928, 1.18179, 1.14586, 1.06971, 0.945824, 0.769219, 0.576356", \
                            "1.23812, 1.24064, 1.20471, 1.12856, 1.00467, 0.828069, 0.635184", \
                            "1.28186, 1.28619, 1.25024, 1.17409, 1.05019, 0.873587, 0.680702" \
                          )
                          }
                 }
        }
          cell_leakage_power : 5.34501e-05;
}
}
