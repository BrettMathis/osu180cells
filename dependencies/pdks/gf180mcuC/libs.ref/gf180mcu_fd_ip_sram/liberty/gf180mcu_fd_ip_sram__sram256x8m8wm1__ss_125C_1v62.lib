/*
 * Copyright 2022 GlobalFoundries PDK Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 *      Single Port SRAM cell name : gf180mcu_fd_ip_sram__sram256x8m8wm1
 *      Technology                 : GF 180nm 5V Green
 *
 *      ---------
 *      Pin name:
 *      ---------
 *      Input Pins : CLK CEN GWEN WEN[7:0] A[7:0] D[7:0]
 *      Inout Pins:  VDD VSS
 *      Output Pins: Q[7:0]
 *
 *     Revision History: 1.0 (Initial Release: June 20, 2014)
 */

library(gf180mcu_fd_ip_sram__sram256x8m8wm1__ss_125C_1v62) {
        delay_model             : table_lookup;
        revision                : 1.0;
        date                    : "June 20, 2014";
        comment                 : "GF 180nm 5V Green";
        voltage_unit            : "1V";
        time_unit               : "1ns";
        current_unit            : "1mA";
        leakage_power_unit      : "1mW";
        nom_process             : 1;
        nom_temperature         : 125;
        nom_voltage             : 1.62;
        capacitive_load_unit    (1,pf);
        pulling_resistance_unit : "1kohm";

        /* additional header data */
        default_fanout_load            : 1;
        default_inout_pin_cap          : 0.045;
        default_input_pin_cap          : 0.045;
        default_output_pin_cap         : 0;
        default_max_transition         : 11.06;
        default_cell_leakage_power     : 0;

         /* default attributes */
         slew_derate_from_library      : 1.000;
         slew_lower_threshold_pct_fall : 10.000;
         slew_upper_threshold_pct_fall : 90.000;
         slew_lower_threshold_pct_rise : 10.000;
         slew_upper_threshold_pct_rise : 90.000;
         input_threshold_pct_fall      : 50.000;
         input_threshold_pct_rise      : 50.000;
         output_threshold_pct_fall     : 50.000;
         output_threshold_pct_rise     : 50.000;
         default_leakage_power_density : 0;

        /* k-factors */
        k_process_recovery_fall        : 1;
        k_process_recovery_rise        : 1;
        k_process_cell_fall            : 1;
        k_process_cell_leakage_power   : 0;
        k_process_cell_rise            : 1;
        k_process_fall_transition      : 1;
        k_process_hold_fall            : 1;
        k_process_hold_rise            : 1;
        k_process_internal_power       : 0;
        k_process_min_pulse_width_high : 1;
        k_process_min_pulse_width_low  : 1;
        k_process_setup_fall           : 1;
        k_process_setup_rise           : 1;
        k_process_wire_cap             : 0;
        k_process_wire_res             : 0;
        k_process_pin_cap              : 0;
        k_process_rise_transition      : 1;
        k_temp_cell_fall               : 0.000;
        k_temp_cell_rise               : 0.000;
        k_temp_hold_fall               : 0.000;
        k_temp_hold_rise               : 0.000;
        k_temp_min_pulse_width_high    : 0.000;
        k_temp_min_pulse_width_low     : 0.000;
        k_temp_min_period              : 0.000;
        k_temp_rise_propagation        : 0.000;
        k_temp_fall_propagation        : 0.000;
        k_temp_rise_transition         : 0.000;
        k_temp_fall_transition         : 0.000;
        k_temp_recovery_fall           : 0.000;
        k_temp_recovery_rise           : 0.000;
        k_temp_setup_fall              : 0.000;
        k_temp_setup_rise              : 0.000;
        k_volt_cell_fall               : 0.000;
        k_volt_cell_rise               : 0.000;
        k_volt_hold_fall               : 0.000;
        k_volt_hold_rise               : 0.000;
        k_volt_min_pulse_width_high    : 0.000;
        k_volt_min_pulse_width_low     : 0.000;
        k_volt_min_period              : 0.000;
        k_volt_recovery_fall           : 0.000;
        k_volt_recovery_rise           : 0.000;
        k_volt_setup_fall              : 0.000;
        k_volt_setup_rise              : 0.000;
        k_volt_rise_propagation        : 0.000;
        k_volt_fall_propagation        : 0.000;
        k_volt_rise_transition         : 0.000;
        k_volt_fall_transition         : 0.000;

         voltage_map (VDD, 1.62);
         voltage_map (VSS, 0.00);
         operating_conditions(ss_1p62v_125C) {
                process       : 1;
                temperature   : 125;
                voltage       : 1.62;
                tree_type     : balanced_tree;
         }

         default_operating_conditions : ss_1p62v_125C;
         wire_load("Estimate") {
                resistance    : 1.44e-05;
                capacitance   : 0.00018;
                area          : 1.7;
                slope         : 500;
                fanout_length (1,500);
         }
         power_lut_template(power_template) {
            variable_1 : input_transition_time;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(q_delay_template) {
            variable_1 : input_net_transition;
            variable_2 : total_output_net_capacitance;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
                 index_2 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(q_slew_template) {
            variable_1 : total_output_net_capacitance;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(constraint_template) {
            variable_1 : related_pin_transition;
            variable_2 : constrained_pin_transition;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
                 index_2 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }

         library_features(report_delay_calculation);

         type (A_BUS) {
                base_type : array;
                data_type : bit;
                bit_width : 8;
                bit_from  : 7;
                bit_to    : 0;
                downto    : true;
         }
         type (Q_BUS) {
                base_type : array;
                data_type : bit;
                bit_width : 8;
                bit_from  : 7;
                bit_to    : 0;
                downto    : true;
         }
 cell(gf180mcu_fd_ip_sram__sram256x8m8wm1) {
        area             : 147212.4368;
        dont_use         : TRUE;
        dont_touch       : TRUE;
        interface_timing : TRUE;
        memory() {
                type          : ram;
                address_width : 8;
                word_width    : 8;
        }

                 bus(Q)   {
                  bus_type             : Q_BUS;
                  direction            : output;
                  max_capacitance      : 1.058;
                  memory_read() {
                        address        : A;
                  }
                  timing() {
                          related_pin  : "CLK";
                          timing_type  : rising_edge;
                          timing_sense : non_unate;
       		  when : "((!CEN) & (GWEN))";
        	  sdf_cond : "CEN== 1'b0 && GWEN== 1'b1";
                          cell_rise(q_delay_template) {
			  index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
			  index_2 ("0.01, 0.02885, 0.09503, 0.2214, 0.4183, 0.6946, 1.058");
                          values  ( \
                            "37.734, 37.8888, 38.3772, 39.1836, 40.41, 41.9904, 44.1228", \
                            "37.7472, 37.92, 38.3784, 39.1992, 40.3836, 42.0156, 44.1312", \
                            "37.9752, 38.1228, 38.694, 39.5064, 40.5996, 42.2028, 44.4384", \
                            "38.2704, 38.4276, 38.9148, 39.75, 40.8984, 42.5304, 44.6856", \
                            "38.7996, 38.9436, 39.3888, 40.206, 41.394, 43.092, 45.1548", \
                            "39.5064, 39.642, 40.1268, 40.962, 42.1128, 43.7988, 45.9372", \
                            "40.182, 40.3116, 40.818, 41.6196, 42.7968, 44.388, 46.5552" \
                          )
                          }
                          rise_transition(q_slew_template) {
                          index_1 ("0.01, 0.02885, 0.09503, 0.2214, 0.4183, 0.6946, 1.058");
                          values  ( \
  	                     "1.07692, 1.2828, 2.01492, 3.37344, 5.42856, 8.43576, 12.4368" \
                          )

                          }
                          cell_fall(q_delay_template) {
                          index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          index_2 ("0.01, 0.02885, 0.09503, 0.2214, 0.4183, 0.6946, 1.058");
                          values  ( \
                            "39.9912, 40.1172, 40.5168, 41.0364, 41.7456, 42.4716, 43.476", \
                            "40.0776, 40.2048, 40.5864, 41.0616, 41.7228, 42.5388, 43.4916", \
                            "40.2936, 40.4208, 40.8228, 41.3568, 41.9556, 42.7236, 43.7856", \
                            "40.5696, 40.7064, 41.0712, 41.6016, 42.2748, 43.0596, 44.0436", \
                            "41.0892, 41.2128, 41.58, 42.0804, 42.78, 43.566, 44.5092", \
                            "41.7888, 41.9004, 42.276, 42.8376, 43.464, 44.3052, 45.288", \
                            "42.4956, 42.6024, 42.972, 43.524, 44.1708, 44.9112, 45.8712" \
                          )
                          }
                          fall_transition(q_slew_template) {
                          index_1 ("0.01, 0.02885, 0.09503, 0.2214, 0.4183, 0.6946, 1.058");
                          values  ( \
                            "1.12518, 1.24956, 1.59288, 2.17272, 3.0816, 4.2456, 5.661" \
                          )
                          }
                  }
          }
          pin(CLK)   {
                  direction            : input;
                  capacitance          : 0.301782;
                  clock                : true;
                  max_transition       : 11.06;
                  min_pulse_width_high : 25.77855;
                  min_pulse_width_low  : 20.8014;
                  min_period           : 53.6235;

/* WRITE POWER */
             internal_power() {
              when : "!CEN & !GWEN & (!WEN[0] | !WEN[1] | !WEN[2] | !WEN[3] | !WEN[4] | !WEN[5] | !WEN[6] | !WEN[7])";
              rise_power(power_template) {
                index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                values  ("86.0949, 86.0949, 86.0949, 86.0949, 86.0949, 86.0949, 86.0949");
              }
              fall_power(power_template) {
                index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                values  ("86.0949, 86.0949, 86.0949, 86.0949, 86.0949, 86.0949, 86.0949");
              }
             }
/* DISABLED POWER */
             internal_power() {
              when : "CEN";
              rise_power(power_template) {
                index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                values  ("4.91314e-05, 4.91314e-05, 4.91314e-05, 4.91314e-05, 4.91314e-05, 4.91314e-05, 4.91314e-05");
              }
              fall_power(power_template) {
                index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                values  ("4.91314e-05, 4.91314e-05, 4.91314e-05, 4.91314e-05, 4.91314e-05, 4.91314e-05, 4.91314e-05");
              }
             }
/* READ POWER */
             internal_power() {
             when : "!CEN & GWEN";
             rise_power(power_template) {
                index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                values  ("79.1103, 79.1103, 79.1103, 79.1103, 79.1103, 79.1103, 79.1103");
              }
              fall_power(power_template) {
                index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                values  ("79.1103, 79.1103, 79.1103, 79.1103, 79.1103, 79.1103, 79.1103");
              }
             }
          }

          pg_pin(VDD) {
                  voltage_name     : VDD;
                  pg_type          : primary_power;
          }
          pg_pin(VSS) {
                  voltage_name     : VSS;
                  pg_type          : primary_ground;
          }
          pin(CEN)   {
                  direction            : input;
                  capacitance          : 0.0199649;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          index_2 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          values  ( \
                            "3.60426, 3.56521, 3.59777, 3.98222, 4.68611, 5.81218, 7.31401", \
                            "3.54486, 3.48975, 3.53914, 3.92139, 4.61241, 5.753, 7.23448", \
                            "3.32442, 3.28933, 3.32244, 3.70458, 4.39582, 5.53762, 7.00854", \
                            "2.9568, 2.91962, 2.9535, 3.33278, 4.01456, 5.16505, 6.64851", \
                            "2.88046, 2.84372, 2.89344, 3.26711, 3.94812, 5.08508, 6.52476", \
                            "2.86539, 2.8413, 2.88233, 3.25215, 3.94933, 5.08288, 6.55644", \
                            "2.87903, 2.83393, 2.88244, 3.25303, 3.96594, 5.07111, 6.52476" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          index_2 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          values  ( \
                            "2.4651, 2.49205, 2.69632, 3.12807, 3.84153, 4.88356, 6.22193", \
                            "2.40757, 2.43287, 2.63472, 3.06911, 3.78037, 4.82438, 6.16649", \
                            "2.18064, 2.2165, 2.42099, 2.85164, 3.564, 4.6046, 5.93175", \
                            "2.16249, 2.20319, 2.40295, 2.83569, 3.54948, 4.58953, 5.90392", \
                            "2.16029, 2.20165, 2.40218, 2.83393, 3.54651, 4.58832, 5.90326", \
                            "2.15908, 2.19956, 2.39965, 2.83096, 3.54442, 4.58315, 5.90117", \
                            "2.16909, 2.2011, 2.40097, 2.83217, 3.54519, 4.58403, 5.90205" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          index_2 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          values  ( \
                            "8.14154, 8.1796, 8.1301, 7.76798, 7.07575, 5.9499, 4.47018", \
                            "8.19302, 8.23075, 8.1807, 7.81913, 7.12437, 6.00105, 4.55532", \
                            "8.36682, 8.40092, 8.35065, 7.98919, 7.29432, 6.17078, 4.71009", \
                            "8.74632, 8.78273, 8.734, 8.3721, 7.70264, 6.55446, 5.10081", \
                            "9.38311, 9.41985, 9.37013, 8.99646, 8.31545, 7.17849, 5.73881", \
                            "10.2393, 10.2634, 10.2224, 9.85259, 9.15541, 8.02186, 6.5483", \
                            "11.151, 11.1962, 11.1477, 10.7771, 10.0642, 8.95895, 7.5053" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          index_2 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          values  ( \
                            "8.85214, 8.8198, 8.62037, 8.18785, 7.47373, 6.43379, 5.12303", \
                            "8.90153, 8.87106, 8.67394, 8.239, 7.52697, 6.48505, 5.17022", \
                            "9.08149, 9.04079, 8.84092, 8.40972, 7.69659, 6.65797, 5.35755", \
                            "9.46506, 9.42447, 9.2246, 8.79186, 8.07818, 7.03802, 5.72374", \
                            "10.1033, 10.0619, 9.86139, 9.42964, 8.71706, 7.67525, 6.36031", \
                            "10.9457, 10.9053, 10.7051, 10.2738, 9.56032, 8.52159, 7.20357", \
                            "11.8613, 11.8294, 11.6292, 11.198, 10.4849, 9.44614, 8.12801" \
                          )
                          }
                 }
          }
          pin(GWEN)   {
                  direction            : input;
                  capacitance          : 0.0455145;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          index_2 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          values  ( \
                            "4.14843, 4.21223, 4.3857, 4.80502, 5.41244, 6.21819, 7.15924", \
                            "4.09178, 4.1558, 4.3274, 4.75156, 5.35568, 6.16176, 7.09962", \
                            "3.89103, 3.95494, 4.13006, 4.5507, 5.1546, 5.9609, 6.90151", \
                            "3.53969, 3.58787, 3.76277, 4.18319, 4.73121, 5.59372, 6.53323", \
                            "2.90697, 2.96186, 3.13533, 3.55344, 4.16163, 4.96749, 5.90458", \
                            "2.22068, 2.28503, 2.46389, 2.88189, 3.48447, 4.28054, 5.22412", \
                            "1.51239, 1.56651, 1.73888, 2.16172, 2.76826, 3.57698, 4.49746" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          index_2 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          values  ( \
                            "5.59504, 5.64905, 5.84815, 6.3195, 7.02658, 8.02373, 9.42491", \
                            "5.53575, 5.59273, 5.79304, 6.22083, 6.94947, 7.9673, 9.35209", \
                            "5.33907, 5.39187, 5.59097, 6.05363, 6.74894, 7.78734, 9.1674", \
                            "4.96881, 5.02458, 5.2239, 5.68678, 6.40222, 7.39398, 8.78416", \
                            "4.34555, 4.38768, 4.59745, 5.06033, 5.75542, 6.77303, 8.13967", \
                            "3.66652, 3.71085, 3.92128, 4.39659, 5.06121, 6.11688, 7.4668", \
                            "2.94525, 3.00278, 3.20188, 3.66971, 4.35996, 5.39836, 6.74828" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          index_2 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          values  ( \
                            "7.18432, 7.14296, 6.95442, 6.56821, 6.04879, 5.40056, 4.77224", \
                            "6.81494, 6.76885, 6.58779, 6.19234, 5.67248, 5.02359, 4.36931", \
                            "6.27583, 6.2293, 6.04791, 5.66082, 5.14107, 4.49295, 3.86463", \
                            "5.8388, 5.79293, 5.60989, 5.21015, 4.70635, 4.05515, 3.38998", \
                            "6.12425, 6.08168, 5.89556, 5.47976, 4.92767, 4.36018, 3.63979", \
                            "6.63916, 6.59747, 6.41168, 6.02426, 5.45391, 4.84693, 4.22015", \
                            "7.26957, 7.22964, 7.04176, 6.64708, 6.0995, 5.44236, 4.79215" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          index_2 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          values  ( \
                            "4.2086, 4.17901, 3.98585, 3.48436, 2.74758, 1.77122, 0.41184", \
                            "3.82646, 3.81568, 3.61658, 3.16052, 2.40636, 1.40272, 0.054197", \
                            "3.30253, 3.27679, 3.07912, 2.61228, 1.8678, 0.823658, 0", \
                            "2.84779, 2.83954, 2.64011, 2.17899, 1.40206, 0.429374, 0", \
                            "3.14776, 3.08451, 2.92655, 2.46455, 1.71556, 0.711469, 0", \
                            "3.65222, 3.60096, 3.44245, 2.97165, 2.2539, 1.18831, 0", \
                            "4.29583, 4.26624, 4.07187, 3.59447, 2.86154, 1.81874, 0.532994" \
                          )
                          }
                 }
          }
          bus(WEN)   {
                  bus_type             : Q_BUS;
                  direction            : input;
                  capacitance          : 0.00749419;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          index_2 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          values  ( \
                            "0, 0, 0, 0, 0, 0, 0", \
                            "0, 0, 0, 0, 0, 0, 0", \
                            "0, 0, 0, 0, 0, 0, 0.335049", \
                            "0, 0, 0, 0, 0, 0.141077, 0.773157", \
                            "0, 0, 0, 0, 0, 0, 0.511434", \
                            "0, 0, 0, 0, 0, 0, 0", \
                            "0, 0, 0, 0, 0, 0, 0" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          index_2 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          values  ( \
                            "0, 0, 0.154971, 0.588115, 1.32253, 2.3221, 3.68093", \
                            "0.238291, 0.316602, 0.516736, 0.942348, 1.67024, 2.69291, 4.05284", \
                            "0.772552, 0.855305, 1.05333, 1.4784, 2.20737, 3.23257, 4.58964", \
                            "1.20506, 1.28561, 1.49303, 1.92533, 2.66728, 3.67004, 5.01655", \
                            "0.911273, 1.01129, 1.20768, 1.64065, 2.36236, 3.38547, 4.70613", \
                            "0.413611, 0.498564, 0.69454, 1.13196, 1.81467, 2.8677, 4.18253", \
                            "0, 0, 0.06611, 0.512446, 1.21657, 2.24191, 3.55729" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          index_2 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          values  ( \
                            "7.20588, 7.14659, 6.95585, 6.58086, 6.04879, 5.40573, 4.77224", \
                            "6.83661, 6.77743, 6.58779, 6.22237, 5.67248, 5.03646, 4.36931", \
                            "6.29827, 6.23898, 6.04813, 5.67325, 5.14107, 4.49812, 3.86463", \
                            "5.86047, 5.80107, 5.61033, 5.23545, 4.70635, 4.06032, 3.3968", \
                            "6.14592, 6.08652, 5.89567, 5.5209, 4.95099, 4.36018, 3.68357", \
                            "6.6638, 6.59879, 6.41168, 6.03658, 5.46282, 4.84693, 4.22015", \
                            "7.29179, 7.23239, 7.04176, 6.66699, 6.0995, 5.48548, 4.82416" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          index_2 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          values  ( \
                            "4.2086, 4.17901, 3.98585, 3.48436, 2.74758, 1.77122, 0.41184", \
                            "3.82646, 3.81568, 3.61658, 3.16052, 2.40636, 1.40272, 0.054197", \
                            "3.30253, 3.27679, 3.07912, 2.61228, 1.8678, 0.823658, 0", \
                            "2.84779, 2.83954, 2.64011, 2.17899, 1.40206, 0.429374, 0", \
                            "3.14776, 3.08451, 2.92655, 2.46455, 1.71556, 0.711469, 0", \
                            "3.65222, 3.60096, 3.44245, 2.97165, 2.2539, 1.18831, 0", \
                            "4.29583, 4.26624, 4.07187, 3.59447, 2.86154, 1.81874, 0.532994" \
                          )
                          }
                 }
          }
          bus(A)   {
                  bus_type             : A_BUS;
                  direction            : input;
                  capacitance          : 0.0442479;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          index_2 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          values  ( \
                            "3.57522, 3.54057, 3.58776, 4.00279, 4.7322, 5.8245, 7.10666", \
                            "3.50999, 3.48326, 3.55058, 3.91226, 4.64145, 5.7552, 7.1995", \
                            "3.30473, 3.26986, 3.31672, 3.71349, 4.4506, 5.54675, 6.97895", \
                            "3.57907, 3.54387, 3.62153, 4.02908, 4.74232, 5.83385, 7.27034", \
                            "3.29725, 3.25501, 3.27151, 3.69369, 4.42233, 5.52596, 6.91031", \
                            "2.78597, 2.74868, 2.8028, 3.179, 3.9281, 5.02634, 6.45117", \
                            "2.16304, 2.13664, 2.19934, 2.56289, 3.24643, 4.39791, 5.80767" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          index_2 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          values  ( \
                            "2.59369, 2.64033, 2.84537, 3.27866, 4.00202, 5.08838, 6.42059", \
                            "2.96835, 3.02104, 3.19495, 3.63616, 4.37426, 5.45809, 6.78524", \
                            "3.50933, 3.52726, 3.73197, 4.17582, 4.91623, 5.99951, 7.31676", \
                            "3.96462, 3.97793, 4.16438, 4.6244, 5.36822, 6.42917, 7.77018", \
                            "3.66179, 3.68753, 3.88784, 4.32564, 5.05868, 6.14405, 7.48", \
                            "3.14886, 3.16745, 3.35907, 3.80985, 4.54399, 5.63035, 6.95607", \
                            "2.52252, 2.5597, 2.73042, 3.19693, 3.93085, 4.9852, 6.33127" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          index_2 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          values  ( \
                            "2.69412, 2.71513, 2.66673, 2.23674, 1.54396, 0.633193, 0", \
                            "2.75429, 2.77673, 2.71656, 2.32958, 1.6335, 0.709027, 0", \
                            "2.96791, 2.98925, 2.94063, 2.52857, 1.83414, 0.912615, 0", \
                            "3.32024, 3.344, 3.25776, 2.8721, 2.17932, 1.26843, 0.25178", \
                            "3.94999, 3.97276, 3.94119, 3.53045, 2.83085, 1.90553, 0.919226", \
                            "4.77224, 4.78291, 4.70052, 4.31497, 3.62208, 2.71128, 1.69224", \
                            "5.6826, 5.69327, 5.6111, 5.22566, 4.53288, 3.62219, 2.60161" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          index_2 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          values  ( \
                            "3.25435, 3.21068, 3.00971, 2.57455, 2.02026, 1.35861, 0.618761", \
                            "3.31958, 3.27459, 3.08286, 2.63967, 2.08538, 1.42395, 0.683958", \
                            "3.52836, 3.48469, 3.29153, 2.84856, 2.29438, 1.63262, 0.892716", \
                            "3.88641, 3.85308, 3.65002, 3.20991, 2.65562, 1.99408, 1.25414", \
                            "4.51572, 4.47183, 4.27889, 3.83581, 3.28141, 2.61998, 1.88001", \
                            "5.32906, 5.28902, 5.09289, 4.65278, 4.0986, 3.43695, 2.69698", \
                            "6.24129, 6.2029, 6.00864, 5.5638, 5.0094, 4.34797, 3.60822" \
                          )
                          }
                 }
          }
          bus(D)   {
                  bus_type             : Q_BUS;
                  memory_write() {
                          address      : A;
                          clocked_on   : "CLK";
                  }
                  direction            : input;
                  capacitance          : 0.0171829;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          index_2 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          values  ( \
                            "3.15931, 3.19297, 3.40615, 3.7653, 4.15712, 4.58876, 4.939", \
                            "3.52902, 3.5695, 3.78917, 4.13545, 4.532, 4.97607, 5.36547", \
                            "4.05339, 4.11587, 4.31145, 4.67841, 5.09685, 5.50715, 5.87422", \
                            "4.49262, 4.54927, 4.76179, 5.11104, 5.51903, 5.93274, 6.31455", \
                            "4.23533, 4.25425, 4.44972, 4.81624, 5.21983, 5.65367, 5.9906", \
                            "3.67125, 3.74231, 3.93371, 4.33752, 4.71526, 5.12479, 5.53564", \
                            "3.04997, 3.09507, 3.35159, 3.72867, 4.07781, 4.51737, 4.90842" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          index_2 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          values  ( \
                            "0, 0, 0, 0, 0, 0.626021, 1.88408", \
                            "0, 0, 0, 0, 0.025267, 0.995808, 2.2539", \
                            "0, 0, 0, 0, 0.566203, 1.53681, 2.79488", \
                            "0, 0, 0, 0.264856, 1.00217, 1.97175, 3.22949", \
                            "0, 0, 0, 0, 0.718234, 1.68872, 2.9469", \
                            "0, 0, 0, 0, 0.198193, 1.16872, 2.42704", \
                            "0, 0, 0, 0, 0, 0.554411, 1.80246" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          index_2 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          values  ( \
                            "3.31771, 3.27129, 3.06416, 2.69995, 2.28822, 1.88716, 1.50788", \
                            "2.94844, 2.89454, 2.69566, 2.32969, 1.93512, 1.50117, 1.13352", \
                            "2.40416, 2.36885, 2.15325, 1.79531, 1.38402, 0.961675, 0.595155", \
                            "1.9679, 1.9217, 1.73052, 1.353, 0.962742, 0.530101, 0.168537", \
                            "2.22673, 2.20176, 2.0119, 1.63339, 1.24953, 0.815408, 0.453156", \
                            "2.77508, 2.71777, 2.52824, 2.12905, 1.73415, 1.32935, 0.951434", \
                            "3.40802, 3.35093, 3.15392, 2.78102, 2.39129, 1.95657, 1.57245" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          index_2 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          values  ( \
                            "6.14801, 6.14636, 5.98422, 5.55566, 4.81745, 3.83174, 2.574", \
                            "5.77126, 5.76917, 5.60736, 5.1788, 4.4407, 3.45488, 2.19714", \
                            "5.23666, 5.23457, 5.07309, 4.64453, 3.90643, 2.92061, 1.66298", \
                            "4.79798, 4.796, 4.63441, 4.20585, 3.46775, 2.48193, 1.22423", \
                            "5.08156, 5.08002, 4.9181, 4.48954, 3.75133, 2.76562, 1.50788", \
                            "5.59537, 5.5935, 5.43158, 5.00302, 4.26481, 3.2791, 2.02136", \
                            "6.22314, 6.22193, 6.05968, 5.63145, 4.89324, 3.90753, 2.64979" \
                          )
                          }
                 }
        }
          cell_leakage_power : 4.913136e-05;
}
}
