/*
 * Copyright 2022 GlobalFoundries PDK Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 *      Single Port SRAM cell name : gf180mcu_fd_ip_sram__sram512x8m8wm1
 *      Technology                 : GF 180nm 5V Green
 *
 *      ---------
 *      Pin name:
 *      ---------
 *      Input Pins : CLK CEN GWEN WEN[7:0] A[8:0] D[7:0]
 *      Inout Pins:  VDD VSS
 *      Output Pins: Q[7:0]
 *
 *     Revision History: 1.0 (Initial Release: June 20, 2014)
 */

library(gf180mcu_fd_ip_sram__sram512x8m8wm1__ff_n40C_3v60) {
        delay_model             : table_lookup;
        revision                : 1.0;
        date                    : "June 20, 2014";
        comment                 : "GF 180nm 5V Green";
        voltage_unit            : "1V";
        time_unit               : "1ns";
        current_unit            : "1mA";
        leakage_power_unit      : "1mW";
        nom_process             : 1;
        nom_temperature         : -40;
        nom_voltage             : 3.6;
        capacitive_load_unit    (1,pf);
        pulling_resistance_unit : "1kohm";

        /* additional header data */
        default_fanout_load            : 1;
        default_inout_pin_cap          : 0.045;
        default_input_pin_cap          : 0.045;
        default_output_pin_cap         : 0;
        default_max_transition         : 1.7498;
        default_cell_leakage_power     : 0;

         /* default attributes */
         slew_derate_from_library      : 1.000;
         slew_lower_threshold_pct_fall : 10.000;
         slew_upper_threshold_pct_fall : 90.000;
         slew_lower_threshold_pct_rise : 10.000;
         slew_upper_threshold_pct_rise : 90.000;
         input_threshold_pct_fall      : 50.000;
         input_threshold_pct_rise      : 50.000;
         output_threshold_pct_fall     : 50.000;
         output_threshold_pct_rise     : 50.000;
         default_leakage_power_density : 0;

        /* k-factors */
        k_process_recovery_fall        : 1;
        k_process_recovery_rise        : 1;
        k_process_cell_fall            : 1;
        k_process_cell_leakage_power   : 0;
        k_process_cell_rise            : 1;
        k_process_fall_transition      : 1;
        k_process_hold_fall            : 1;
        k_process_hold_rise            : 1;
        k_process_internal_power       : 0;
        k_process_min_pulse_width_high : 1;
        k_process_min_pulse_width_low  : 1;
        k_process_setup_fall           : 1;
        k_process_setup_rise           : 1;
        k_process_wire_cap             : 0;
        k_process_wire_res             : 0;
        k_process_pin_cap              : 0;
        k_process_rise_transition      : 1;
        k_temp_cell_fall               : 0.000;
        k_temp_cell_rise               : 0.000;
        k_temp_hold_fall               : 0.000;
        k_temp_hold_rise               : 0.000;
        k_temp_min_pulse_width_high    : 0.000;
        k_temp_min_pulse_width_low     : 0.000;
        k_temp_min_period              : 0.000;
        k_temp_rise_propagation        : 0.000;
        k_temp_fall_propagation        : 0.000;
        k_temp_rise_transition         : 0.000;
        k_temp_fall_transition         : 0.000;
        k_temp_recovery_fall           : 0.000;
        k_temp_recovery_rise           : 0.000;
        k_temp_setup_fall              : 0.000;
        k_temp_setup_rise              : 0.000;
        k_volt_cell_fall               : 0.000;
        k_volt_cell_rise               : 0.000;
        k_volt_hold_fall               : 0.000;
        k_volt_hold_rise               : 0.000;
        k_volt_min_pulse_width_high    : 0.000;
        k_volt_min_pulse_width_low     : 0.000;
        k_volt_min_period              : 0.000;
        k_volt_recovery_fall           : 0.000;
        k_volt_recovery_rise           : 0.000;
        k_volt_setup_fall              : 0.000;
        k_volt_setup_rise              : 0.000;
        k_volt_rise_propagation        : 0.000;
        k_volt_fall_propagation        : 0.000;
        k_volt_rise_transition         : 0.000;
        k_volt_fall_transition         : 0.000;

         voltage_map (VDD, 3.6);
         voltage_map (VSS, 0.00);
         operating_conditions(ff_3p6v_m40C) {
                process       : 1;
                temperature   : -40;
                voltage       : 3.6;
                tree_type     : balanced_tree;
         }

         default_operating_conditions : ff_3p6v_m40C;
         wire_load("Estimate") {
                resistance    : 1.44e-05;
                capacitance   : 0.00018;
                area          : 1.7;
                slope         : 500;
                fanout_length (1,500);
         }
         power_lut_template(power_template) {
            variable_1 : input_transition_time;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(q_delay_template) {
            variable_1 : input_net_transition;
            variable_2 : total_output_net_capacitance;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
                 index_2 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(q_slew_template) {
            variable_1 : total_output_net_capacitance;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(constraint_template) {
            variable_1 : related_pin_transition;
            variable_2 : constrained_pin_transition;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
                 index_2 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }

         library_features(report_delay_calculation);

         type (A_BUS) {
                base_type : array;
                data_type : bit;
                bit_width : 9;
                bit_from  : 8;
                bit_to    : 0;
                downto    : true;
         }
         type (Q_BUS) {
                base_type : array;
                data_type : bit;
                bit_width : 8;
                bit_from  : 7;
                bit_to    : 0;
                downto    : true;
         }
 cell(gf180mcu_fd_ip_sram__sram512x8m8wm1) {
        area             : 209400.2768;
        dont_use         : TRUE;
        dont_touch       : TRUE;
        interface_timing : TRUE;
        memory() {
                type          : ram;
                address_width : 9;
                word_width    : 8;
        }

                 bus(Q)   {
                  bus_type             : Q_BUS;
                  direction            : output;
                  max_capacitance      : 1.0614;
                  memory_read() {
                        address        : A;
                  }
                  timing() {
                          related_pin  : "CLK";
                          timing_type  : rising_edge;
                          timing_sense : non_unate;
       		  when : "((!CEN) & (GWEN))";
        	  sdf_cond : "CEN== 1'b0 && GWEN== 1'b1";
                          cell_rise(q_delay_template) {
			  index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
			  index_2 ("0.0100, 0.0289, 0.0953, 0.2221, 0.4195, 0.6967, 1.0614");
                          values  ( \
                            "4.08996, 4.10892, 4.1592, 4.24632, 4.37664, 4.55568, 4.791", \
                            "4.09296, 4.10808, 4.16412, 4.24716, 4.3776, 4.55448, 4.79496", \
                            "4.10352, 4.1208, 4.17264, 4.2618, 4.38552, 4.57044, 4.80276", \
                            "4.10988, 4.1262, 4.1772, 4.26492, 4.38948, 4.56876, 4.80396", \
                            "4.12716, 4.143, 4.19592, 4.28184, 4.41108, 4.59384, 4.82916", \
                            "4.125, 4.1406, 4.19352, 4.2804, 4.4112, 4.58964, 4.82592", \
                            "4.10832, 4.12728, 4.17996, 4.2666, 4.395, 4.57572, 4.8108" \
                          )
                          }
                          rise_transition(q_slew_template) {
                          index_1 ("0.0100, 0.0289, 0.0953, 0.2221, 0.4195, 0.6967, 1.0614");
                          values  ( \
  	                     "0.135456, 0.160332, 0.243336, 0.398652, 0.640488, 1.00091, 1.467" \
                          )

                          }
                          cell_fall(q_delay_template) {
                          index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          index_2 ("0.0100, 0.0289, 0.0953, 0.2221, 0.4195, 0.6967, 1.0614");
                          values  ( \
                            "4.23036, 4.24716, 4.29276, 4.3662, 4.46688, 4.59324, 4.74348", \
                            "4.22712, 4.24248, 4.29648, 4.37004, 4.4646, 4.5828, 4.74432", \
                            "4.23912, 4.25688, 4.30272, 4.38168, 4.47072, 4.602, 4.75008", \
                            "4.24704, 4.26288, 4.31004, 4.3836, 4.48116, 4.60308, 4.75608", \
                            "4.2618, 4.27824, 4.3284, 4.39788, 4.49592, 4.62288, 4.779", \
                            "4.2582, 4.2762, 4.32516, 4.40004, 4.49868, 4.62084, 4.77456", \
                            "4.24248, 4.2618, 4.311, 4.38552, 4.48608, 4.60476, 4.76064" \
                          )
                          }
                          fall_transition(q_slew_template) {
                          index_1 ("0.0100, 0.0289, 0.0953, 0.2221, 0.4195, 0.6967, 1.0614");
                          values  ( \
                            "0.138036, 0.160152, 0.211104, 0.305448, 0.437964, 0.62958, 0.877152" \
                          )
                          }
                  }
          }
          pin(CLK)   {
                  direction            : input;
                  capacitance          : 0.279679;
                  clock                : true;
                  max_transition       : 1.7498;
                  min_pulse_width_high : 2.123505;
                  min_pulse_width_low  : 2.52633;
                  min_period           : 5.48004;

/* WRITE POWER */
             internal_power() {
              when : "!CEN & !GWEN & (!WEN[0] | !WEN[1] | !WEN[2] | !WEN[3] | !WEN[4] | !WEN[5] | !WEN[6] | !WEN[7])";
              rise_power(power_template) {
                index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                values  ("487.188, 487.188, 487.188, 487.188, 487.188, 487.188, 487.188");
              }
              fall_power(power_template) {
                index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                values  ("487.188, 487.188, 487.188, 487.188, 487.188, 487.188, 487.188");
              }
             }
/* DISABLED POWER */
             internal_power() {
              when : "CEN";
              rise_power(power_template) {
                index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                values  ("0.000322531, 0.000322531, 0.000322531, 0.000322531, 0.000322531, 0.000322531, 0.000322531");
              }
              fall_power(power_template) {
                index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                values  ("0.000322531, 0.000322531, 0.000322531, 0.000322531, 0.000322531, 0.000322531, 0.000322531");
              }
             }
/* READ POWER */
             internal_power() {
             when : "!CEN & GWEN";
             rise_power(power_template) {
                index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                values  ("437.886, 437.886, 437.886, 437.886, 437.886, 437.886, 437.886");
              }
              fall_power(power_template) {
                index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                values  ("437.886, 437.886, 437.886, 437.886, 437.886, 437.886, 437.886");
              }
             }
          }

          pg_pin(VDD) {
                  voltage_name     : VDD;
                  pg_type          : primary_power;
          }
          pg_pin(VSS) {
                  voltage_name     : VSS;
                  pg_type          : primary_ground;
          }
          pin(CEN)   {
                  direction            : input;
                  capacitance          : 0.0171425;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          index_2 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          values  ( \
                            "0.426382, 0.421388, 0.417923, 0.438306, 0.474309, 0.500698, 0.519981", \
                            "0.42427, 0.418539, 0.414733, 0.433565, 0.468798, 0.496221, 0.515504", \
                            "0.422202, 0.418396, 0.414997, 0.432454, 0.456676, 0.476047, 0.496991", \
                            "0.423269, 0.418286, 0.414546, 0.432333, 0.456566, 0.468391, 0.475167", \
                            "0.422466, 0.417923, 0.414194, 0.431981, 0.456214, 0.468039, 0.474804", \
                            "0.422917, 0.417824, 0.414293, 0.431937, 0.456159, 0.467995, 0.474958", \
                            "0.421729, 0.417747, 0.413699, 0.431486, 0.461593, 0.491293, 0.502293" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          index_2 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          values  ( \
                            "0.405284, 0.407957, 0.423742, 0.460042, 0.521862, 0.592669, 0.67408", \
                            "0.405229, 0.407737, 0.423522, 0.458392, 0.520531, 0.592449, 0.67386", \
                            "0.404019, 0.408067, 0.423192, 0.459492, 0.521301, 0.592108, 0.673519", \
                            "0.404613, 0.407297, 0.423071, 0.459382, 0.521191, 0.591998, 0.673409", \
                            "0.404206, 0.404932, 0.422719, 0.459019, 0.520839, 0.591646, 0.673057", \
                            "0.404393, 0.40689, 0.422664, 0.458975, 0.520784, 0.591591, 0.673002", \
                            "0.403678, 0.406747, 0.422543, 0.456082, 0.520652, 0.591459, 0.67287" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          index_2 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          values  ( \
                            "1.01837, 1.02335, 1.02709, 1.00929, 0.985072, 0.973247, 0.966471", \
                            "1.02174, 1.02747, 1.03127, 1.01354, 0.990088, 0.977163, 0.970398", \
                            "1.03886, 1.04267, 1.04607, 1.02861, 1.00439, 0.995159, 0.988537", \
                            "1.07503, 1.08001, 1.08375, 1.06595, 1.04173, 1.0299, 1.02313", \
                            "1.1142, 1.11874, 1.12247, 1.10469, 1.08045, 1.06863, 1.06185", \
                            "1.15842, 1.16351, 1.16705, 1.14941, 1.12518, 1.11335, 1.10659", \
                            "1.17574, 1.17972, 1.18376, 1.16598, 1.14348, 1.1296, 1.13245" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          index_2 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          values  ( \
                            "1.03703, 1.03434, 1.01856, 0.982256, 0.920447, 0.84964, 0.768229", \
                            "1.04078, 1.03827, 1.02248, 0.987624, 0.925474, 0.853567, 0.772156", \
                            "1.05705, 1.053, 1.03787, 1.00157, 0.939763, 0.868956, 0.787545", \
                            "1.09368, 1.091, 1.07523, 1.03892, 0.977108, 0.906301, 0.82489", \
                            "1.13246, 1.13174, 1.11395, 1.07764, 1.01583, 0.945021, 0.86361", \
                            "1.17696, 1.17446, 1.15867, 1.12237, 1.06055, 0.989758, 0.908336", \
                            "1.19379, 1.19072, 1.17492, 1.14138, 1.07681, 1.00601, 0.924594" \
                          )
                          }
                 }
          }
          pin(GWEN)   {
                  direction            : input;
                  capacitance          : 0.047252;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          index_2 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          values  ( \
                            "0.556402, 0.562397, 0.575993, 0.610764, 0.663245, 0.711227, 0.755733", \
                            "0.554609, 0.559867, 0.573826, 0.60907, 0.660715, 0.708697, 0.752686", \
                            "0.538483, 0.543741, 0.557788, 0.592944, 0.644567, 0.69256, 0.735933", \
                            "0.505274, 0.510818, 0.524348, 0.560021, 0.610566, 0.659582, 0.703571", \
                            "0.470888, 0.476135, 0.490336, 0.525349, 0.576972, 0.624965, 0.668954", \
                            "0.434489, 0.439912, 0.453596, 0.48895, 0.540584, 0.588225, 0.632555", \
                            "0.412764, 0.418319, 0.432311, 0.467456, 0.51909, 0.567072, 0.611061" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          index_2 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          values  ( \
                            "0.599709, 0.606386, 0.624426, 0.676005, 0.751454, 0.855503, 0.96789", \
                            "0.597289, 0.603845, 0.620334, 0.673464, 0.744381, 0.852533, 0.96536", \
                            "0.581229, 0.587499, 0.60577, 0.657338, 0.732787, 0.836836, 0.949223", \
                            "0.548064, 0.554741, 0.572781, 0.624382, 0.699787, 0.803847, 0.916245", \
                            "0.513557, 0.520124, 0.53999, 0.589743, 0.665192, 0.769241, 0.881628", \
                            "0.477125, 0.483714, 0.501765, 0.553355, 0.628793, 0.732853, 0.84524", \
                            "0.455774, 0.462231, 0.480282, 0.53185, 0.607299, 0.711425, 0.823746" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          index_2 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          values  ( \
                            "0.778569, 0.7744, 0.759572, 0.728805, 0.70752, 0.686004, 0.677523", \
                            "0.785697, 0.781935, 0.766733, 0.735812, 0.714659, 0.693132, 0.684497", \
                            "0.790119, 0.786214, 0.771122, 0.740234, 0.71907, 0.697554, 0.688919", \
                            "0.795234, 0.791032, 0.776215, 0.74547, 0.722051, 0.702658, 0.694023", \
                            "0.810128, 0.805926, 0.791109, 0.760232, 0.739079, 0.717563, 0.708928", \
                            "0.807532, 0.803638, 0.788194, 0.75768, 0.736527, 0.715, 0.706365", \
                            "0.797082, 0.793177, 0.778085, 0.747197, 0.726198, 0.704517, 0.695882" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          index_2 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          values  ( \
                            "0.464915, 0.460339, 0.43791, 0.388476, 0.31449, 0.21777, 0.109512", \
                            "0.472769, 0.467555, 0.445896, 0.395813, 0.326678, 0.225178, 0.116661", \
                            "0.476751, 0.471922, 0.449438, 0.400026, 0.326073, 0.229189, 0.121065", \
                            "0.481745, 0.476927, 0.454487, 0.40513, 0.331155, 0.233908, 0.126128", \
                            "0.497156, 0.491865, 0.469843, 0.420024, 0.346071, 0.248806, 0.141022", \
                            "0.510983, 0.505571, 0.484594, 0.433895, 0.355476, 0.259014, 0.153303", \
                            "0.554169, 0.549329, 0.528385, 0.477675, 0.399267, 0.302573, 0.197087" \
                          )
                          }
                 }
          }
          bus(WEN)   {
                  bus_type             : Q_BUS;
                  direction            : input;
                  capacitance          : 0.0074375;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          index_2 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          values  ( \
                            "0, 0, 0, 0.002189, 0.027698, 0.045419, 0.055583", \
                            "0, 0, 0, 0, 0.021065, 0.03927, 0.048961", \
                            "0, 0, 0, 0, 0.01485, 0.033385, 0.042735", \
                            "0, 0, 0, 0, 0.010593, 0.029161, 0.038489", \
                            "0, 0, 0, 0, 0, 0.013915, 0.024079", \
                            "0, 0, 0, 0, 0, 0.017182, 0.026466", \
                            "0, 0, 0, 0, 0.009097, 0.027643, 0.036993" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          index_2 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          values  ( \
                            "0.266223, 0.270623, 0.292754, 0.342034, 0.416042, 0.512919, 0.620565", \
                            "0.258798, 0.263617, 0.285303, 0.335357, 0.404371, 0.506264, 0.613998", \
                            "0.253063, 0.257424, 0.280002, 0.329175, 0.403194, 0.500038, 0.608377", \
                            "0.248981, 0.25347, 0.275394, 0.324951, 0.398937, 0.495154, 0.603845", \
                            "0.233915, 0.238941, 0.260367, 0.310519, 0.384538, 0.481536, 0.589875", \
                            "0.236308, 0.241647, 0.263359, 0.312906, 0.386925, 0.483989, 0.591679", \
                            "0.247629, 0.25216, 0.274261, 0.323422, 0.397496, 0.491073, 0.602635" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          index_2 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          values  ( \
                            "0.778569, 0.7744, 0.759572, 0.728805, 0.70752, 0.686004, 0.677523", \
                            "0.785829, 0.781935, 0.766733, 0.73634, 0.714659, 0.693132, 0.684497", \
                            "0.790119, 0.786214, 0.771122, 0.740333, 0.71907, 0.697554, 0.688919", \
                            "0.795234, 0.791032, 0.776215, 0.745481, 0.722051, 0.702658, 0.694023", \
                            "0.810128, 0.805926, 0.791109, 0.760364, 0.739079, 0.717563, 0.708928", \
                            "0.807532, 0.803638, 0.788194, 0.757801, 0.736527, 0.715, 0.706365", \
                            "0.797082, 0.793177, 0.778085, 0.747307, 0.726198, 0.704517, 0.695882" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          index_2 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          values  ( \
                            "0.464915, 0.460339, 0.43791, 0.388476, 0.314523, 0.21777, 0.109512", \
                            "0.472769, 0.467555, 0.446116, 0.395813, 0.326678, 0.225197, 0.116909", \
                            "0.476751, 0.471922, 0.449438, 0.400026, 0.326073, 0.229217, 0.121065", \
                            "0.481745, 0.476927, 0.454487, 0.40513, 0.331188, 0.234357, 0.126128", \
                            "0.497156, 0.491865, 0.469843, 0.420024, 0.346093, 0.249259, 0.141245", \
                            "0.494637, 0.489203, 0.466807, 0.417472, 0.34353, 0.246788, 0.138686", \
                            "0.483318, 0.47872, 0.45639, 0.407022, 0.333036, 0.239231, 0.128189" \
                          )
                          }
                 }
          }
          bus(A)   {
                  bus_type             : A_BUS;
                  direction            : input;
                  capacitance          : 0.0374291;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          index_2 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          values  ( \
                            "0.609268, 0.607739, 0.604362, 0.624668, 0.660264, 0.691592, 0.715385", \
                            "0.603471, 0.60093, 0.596563, 0.625416, 0.65604, 0.686356, 0.710534", \
                            "0.597498, 0.595287, 0.591679, 0.618497, 0.651387, 0.680284, 0.706541", \
                            "0.592526, 0.588071, 0.586465, 0.613767, 0.647559, 0.675235, 0.699787", \
                            "0.580448, 0.577368, 0.57299, 0.601051, 0.634458, 0.661804, 0.687126", \
                            "0.583319, 0.578446, 0.575058, 0.603845, 0.636955, 0.662915, 0.689337", \
                            "0.5929, 0.589666, 0.586135, 0.613261, 0.643687, 0.674146, 0.699072" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          index_2 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          values  ( \
                            "0.854447, 0.855393, 0.875204, 0.910437, 0.973225, 1.05526, 1.15556", \
                            "0.847935, 0.852918, 0.869616, 0.904486, 0.96745, 1.05163, 1.15016", \
                            "0.845163, 0.843194, 0.862939, 0.8954, 0.962973, 1.04511, 1.14379", \
                            "0.836396, 0.836869, 0.857615, 0.889691, 0.955306, 1.03825, 1.13915", \
                            "0.823427, 0.825198, 0.84469, 0.878108, 0.942051, 1.02717, 1.12553", \
                            "0.824549, 0.826408, 0.846142, 0.881749, 0.946363, 1.02777, 1.12657", \
                            "0.83743, 0.836517, 0.855668, 0.890373, 0.955746, 1.03678, 1.13806" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          index_2 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          values  ( \
                            "0.495484, 0.498773, 0.497508, 0.494164, 0.491975, 0.489313, 0.485771", \
                            "0.502491, 0.506385, 0.505131, 0.494098, 0.496661, 0.496925, 0.493383", \
                            "0.517132, 0.520663, 0.519398, 0.508365, 0.510939, 0.511203, 0.507661", \
                            "0.54934, 0.553179, 0.551925, 0.540881, 0.543455, 0.54373, 0.540177", \
                            "0.594418, 0.598004, 0.59675, 0.585706, 0.588533, 0.588984, 0.585002", \
                            "0.629739, 0.633589, 0.632324, 0.621291, 0.623865, 0.624129, 0.620587", \
                            "0.656205, 0.66, 0.658735, 0.647702, 0.650518, 0.65054, 0.646998" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          index_2 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          values  ( \
                            "0.508651, 0.505142, 0.488389, 0.476421, 0.472813, 0.476157, 0.483582", \
                            "0.516637, 0.512677, 0.496012, 0.484165, 0.480436, 0.483769, 0.491194", \
                            "0.530915, 0.527032, 0.51029, 0.498311, 0.494714, 0.498058, 0.505472", \
                            "0.563211, 0.559592, 0.542784, 0.530959, 0.52723, 0.530574, 0.537988", \
                            "0.608267, 0.604351, 0.58762, 0.575652, 0.572055, 0.575388, 0.582813", \
                            "0.643632, 0.639958, 0.623205, 0.611358, 0.60764, 0.610984, 0.618398", \
                            "0.669966, 0.666369, 0.649627, 0.637648, 0.634051, 0.637395, 0.644809" \
                          )
                          }
                 }
          }
          bus(D)   {
                  bus_type             : Q_BUS;
                  memory_write() {
                          address      : A;
                          clocked_on   : "CLK";
                  }
                  direction            : input;
                  capacitance          : 0.0155975;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          index_2 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          values  ( \
                            "0.450923, 0.457446, 0.470855, 0.478126, 0.470459, 0.445995, 0.402776", \
                            "0.442728, 0.451451, 0.465806, 0.472076, 0.464585, 0.441617, 0.397837", \
                            "0.442266, 0.445951, 0.457699, 0.466323, 0.458414, 0.433961, 0.391325", \
                            "0.434049, 0.440803, 0.453145, 0.462044, 0.451495, 0.429715, 0.385396", \
                            "0.423126, 0.427625, 0.438196, 0.448404, 0.439956, 0.418627, 0.372075", \
                            "0.422752, 0.428208, 0.442178, 0.448602, 0.441705, 0.415063, 0.373593", \
                            "0.433994, 0.437701, 0.451792, 0.460185, 0.449537, 0.427955, 0.38467" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          index_2 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          values  ( \
                            "0.141484, 0.143128, 0.166325, 0.222554, 0.306713, 0.416636, 0.549439", \
                            "0.135773, 0.136255, 0.160273, 0.216565, 0.301582, 0.410861, 0.543609", \
                            "0.129879, 0.130571, 0.154364, 0.210883, 0.295043, 0.405031, 0.537702", \
                            "0.123053, 0.124351, 0.148441, 0.204882, 0.288772, 0.39897, 0.531729", \
                            "0.11098, 0.111815, 0.135822, 0.192052, 0.276505, 0.386485, 0.5192", \
                            "0.113251, 0.113686, 0.137841, 0.194227, 0.278387, 0.388267, 0.521048", \
                            "0.123216, 0.123611, 0.147649, 0.204171, 0.28833, 0.398255, 0.532323" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          index_2 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          values  ( \
                            "0.442893, 0.439285, 0.427394, 0.419221, 0.425018, 0.451121, 0.492712", \
                            "0.451297, 0.447128, 0.434225, 0.425491, 0.433246, 0.458964, 0.501468", \
                            "0.456511, 0.45243, 0.440781, 0.432432, 0.440033, 0.464508, 0.506297", \
                            "0.463595, 0.458447, 0.445247, 0.435886, 0.444983, 0.468633, 0.511874", \
                            "0.475519, 0.471889, 0.459085, 0.451022, 0.457611, 0.480227, 0.527318", \
                            "0.473374, 0.467082, 0.455873, 0.447711, 0.455532, 0.481041, 0.522599", \
                            "0.463023, 0.45474, 0.445775, 0.436491, 0.444719, 0.46948, 0.511797" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          index_2 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          values  ( \
                            "0.620202, 0.61831, 0.596233, 0.539814, 0.454685, 0.345774, 0.213291", \
                            "0.628133, 0.626153, 0.604065, 0.547899, 0.462528, 0.353606, 0.221191", \
                            "0.633655, 0.631499, 0.60962, 0.553201, 0.468072, 0.359161, 0.226739", \
                            "0.639419, 0.637461, 0.615384, 0.558965, 0.473836, 0.364925, 0.232492", \
                            "0.652883, 0.650914, 0.628826, 0.57266, 0.487289, 0.378378, 0.245951", \
                            "0.650199, 0.64823, 0.626153, 0.569745, 0.484616, 0.375694, 0.243265", \
                            "0.638594, 0.636669, 0.614592, 0.558184, 0.473055, 0.364133, 0.231714" \
                          )
                          }
                 }
        }
          cell_leakage_power : 0.0003225312;
}
}
