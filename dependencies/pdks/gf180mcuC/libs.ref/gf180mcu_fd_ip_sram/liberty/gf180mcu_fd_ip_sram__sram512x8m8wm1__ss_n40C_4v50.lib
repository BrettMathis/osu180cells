/*
 * Copyright 2022 GlobalFoundries PDK Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 *      Single Port SRAM cell name : gf180mcu_fd_ip_sram__sram512x8m8wm1
 *      Technology                 : GF 180nm 5V Green
 *
 *      ---------
 *      Pin name:
 *      ---------
 *      Input Pins : CLK CEN GWEN WEN[7:0] A[8:0] D[7:0]
 *      Inout Pins:  VDD VSS
 *      Output Pins: Q[7:0]
 *
 *     Revision History: 1.0 (Initial Release: June 20, 2014)
 */

library(gf180mcu_fd_ip_sram__sram512x8m8wm1__ss_n40C_4v50) {
        delay_model             : table_lookup;
        revision                : 1.0;
        date                    : "June 20, 2014";
        comment                 : "GF 180nm 5V Green";
        voltage_unit            : "1V";
        time_unit               : "1ns";
        current_unit            : "1mA";
        leakage_power_unit      : "1mW";
        nom_process             : 1;
        nom_temperature         : -40;
        nom_voltage             : 4.5;
        capacitive_load_unit    (1,pf);
        pulling_resistance_unit : "1kohm";

        /* additional header data */
        default_fanout_load            : 1;
        default_inout_pin_cap          : 0.045;
        default_input_pin_cap          : 0.045;
        default_output_pin_cap         : 0;
        default_max_transition         : 2.008;
        default_cell_leakage_power     : 0;

         /* default attributes */
         slew_derate_from_library      : 1.000;
         slew_lower_threshold_pct_fall : 10.000;
         slew_upper_threshold_pct_fall : 90.000;
         slew_lower_threshold_pct_rise : 10.000;
         slew_upper_threshold_pct_rise : 90.000;
         input_threshold_pct_fall      : 50.000;
         input_threshold_pct_rise      : 50.000;
         output_threshold_pct_fall     : 50.000;
         output_threshold_pct_rise     : 50.000;
         default_leakage_power_density : 0;

        /* k-factors */
        k_process_recovery_fall        : 1;
        k_process_recovery_rise        : 1;
        k_process_cell_fall            : 1;
        k_process_cell_leakage_power   : 0;
        k_process_cell_rise            : 1;
        k_process_fall_transition      : 1;
        k_process_hold_fall            : 1;
        k_process_hold_rise            : 1;
        k_process_internal_power       : 0;
        k_process_min_pulse_width_high : 1;
        k_process_min_pulse_width_low  : 1;
        k_process_setup_fall           : 1;
        k_process_setup_rise           : 1;
        k_process_wire_cap             : 0;
        k_process_wire_res             : 0;
        k_process_pin_cap              : 0;
        k_process_rise_transition      : 1;
        k_temp_cell_fall               : 0.000;
        k_temp_cell_rise               : 0.000;
        k_temp_hold_fall               : 0.000;
        k_temp_hold_rise               : 0.000;
        k_temp_min_pulse_width_high    : 0.000;
        k_temp_min_pulse_width_low     : 0.000;
        k_temp_min_period              : 0.000;
        k_temp_rise_propagation        : 0.000;
        k_temp_fall_propagation        : 0.000;
        k_temp_rise_transition         : 0.000;
        k_temp_fall_transition         : 0.000;
        k_temp_recovery_fall           : 0.000;
        k_temp_recovery_rise           : 0.000;
        k_temp_setup_fall              : 0.000;
        k_temp_setup_rise              : 0.000;
        k_volt_cell_fall               : 0.000;
        k_volt_cell_rise               : 0.000;
        k_volt_hold_fall               : 0.000;
        k_volt_hold_rise               : 0.000;
        k_volt_min_pulse_width_high    : 0.000;
        k_volt_min_pulse_width_low     : 0.000;
        k_volt_min_period              : 0.000;
        k_volt_recovery_fall           : 0.000;
        k_volt_recovery_rise           : 0.000;
        k_volt_setup_fall              : 0.000;
        k_volt_setup_rise              : 0.000;
        k_volt_rise_propagation        : 0.000;
        k_volt_fall_propagation        : 0.000;
        k_volt_rise_transition         : 0.000;
        k_volt_fall_transition         : 0.000;

         voltage_map (VDD, 4.5);
         voltage_map (VSS, 0.00);
         operating_conditions(ss_4p5v_m40C) {
                process       : 1;
                temperature   : -40;
                voltage       : 4.5;
                tree_type     : balanced_tree;
         }

         default_operating_conditions : ss_4p5v_m40C;
         wire_load("Estimate") {
                resistance    : 1.44e-05;
                capacitance   : 0.00018;
                area          : 1.7;
                slope         : 500;
                fanout_length (1,500);
         }
         power_lut_template(power_template) {
            variable_1 : input_transition_time;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(q_delay_template) {
            variable_1 : input_net_transition;
            variable_2 : total_output_net_capacitance;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
                 index_2 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(q_slew_template) {
            variable_1 : total_output_net_capacitance;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(constraint_template) {
            variable_1 : related_pin_transition;
            variable_2 : constrained_pin_transition;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
                 index_2 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }

         library_features(report_delay_calculation);

         type (A_BUS) {
                base_type : array;
                data_type : bit;
                bit_width : 9;
                bit_from  : 8;
                bit_to    : 0;
                downto    : true;
         }
         type (Q_BUS) {
                base_type : array;
                data_type : bit;
                bit_width : 8;
                bit_from  : 7;
                bit_to    : 0;
                downto    : true;
         }
 cell(gf180mcu_fd_ip_sram__sram512x8m8wm1) {
        area             : 209400.2768;
        dont_use         : TRUE;
        dont_touch       : TRUE;
        interface_timing : TRUE;
        memory() {
                type          : ram;
                address_width : 9;
                word_width    : 8;
        }

                 bus(Q)   {
                  bus_type             : Q_BUS;
                  direction            : output;
                  max_capacitance      : 1.253;
                  memory_read() {
                        address        : A;
                  }
                  timing() {
                          related_pin  : "CLK";
                          timing_type  : rising_edge;
                          timing_sense : non_unate;
       		  when : "((!CEN) & (GWEN))";
        	  sdf_cond : "CEN== 1'b0 && GWEN== 1'b1";
                          cell_rise(q_delay_template) {
			  index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
			  index_2 ("0.01, 0.03235, 0.1108, 0.2606, 0.4941, 0.8216, 1.253");
                          values  ( \
                            "5.95296, 5.98128, 6.05244, 6.19092, 6.3798, 6.64188, 6.99348", \
                            "5.96604, 5.9952, 6.06384, 6.1992, 6.39096, 6.65796, 7.0056", \
                            "5.97312, 5.994, 6.07272, 6.207, 6.39696, 6.66012, 7.00344", \
                            "5.97516, 5.99856, 6.08112, 6.20964, 6.39408, 6.6654, 7.01976", \
                            "5.99496, 6.02088, 6.10356, 6.22728, 6.42048, 6.68544, 7.03332", \
                            "6.015, 6.04008, 6.1218, 6.24768, 6.43704, 6.70332, 7.0482", \
                            "6.02712, 6.04896, 6.12996, 6.25824, 6.44964, 6.71508, 7.06056" \
                          )
                          }
                          rise_transition(q_slew_template) {
                          index_1 ("0.01, 0.03235, 0.1108, 0.2606, 0.4941, 0.8216, 1.253");
                          values  ( \
  	                     "0.175728, 0.215484, 0.338196, 0.560928, 0.922356, 1.44924, 2.12868" \
                          )

                          }
                          cell_fall(q_delay_template) {
                          index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          index_2 ("0.01, 0.03235, 0.1108, 0.2606, 0.4941, 0.8216, 1.253");
                          values  ( \
                            "6.14376, 6.16824, 6.2418, 6.36948, 6.52848, 6.72192, 6.98328", \
                            "6.15288, 6.1812, 6.25296, 6.3786, 6.5352, 6.73848, 6.99636", \
                            "6.1584, 6.1794, 6.26076, 6.38352, 6.54312, 6.74016, 6.99528", \
                            "6.16116, 6.1866, 6.2682, 6.39096, 6.54312, 6.74976, 7.01076", \
                            "6.1818, 6.20856, 6.29256, 6.40656, 6.56664, 6.76536, 7.02576", \
                            "6.19968, 6.22908, 6.30972, 6.42492, 6.58596, 6.78492, 7.04184", \
                            "6.21432, 6.23436, 6.318, 6.43836, 6.59532, 6.79716, 7.0518" \
                          )
                          }
                          fall_transition(q_slew_template) {
                          index_1 ("0.01, 0.03235, 0.1108, 0.2606, 0.4941, 0.8216, 1.253");
                          values  ( \
                            "0.1761, 0.20946, 0.297228, 0.448596, 0.667392, 0.982188, 1.39464" \
                          )
                          }
                  }
          }
          pin(CLK)   {
                  direction            : input;
                  capacitance          : 0.316952;
                  clock                : true;
                  max_transition       : 2.008;
                  min_pulse_width_high : 4.073415;
                  min_pulse_width_low  : 2.907675;
                  min_period           : 8.183685;

/* WRITE POWER */
             internal_power() {
              when : "!CEN & !GWEN & (!WEN[0] | !WEN[1] | !WEN[2] | !WEN[3] | !WEN[4] | !WEN[5] | !WEN[6] | !WEN[7])";
              rise_power(power_template) {
                index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                values  ("800.37, 800.37, 800.37, 800.37, 800.37, 800.37, 800.37");
              }
              fall_power(power_template) {
                index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                values  ("800.37, 800.37, 800.37, 800.37, 800.37, 800.37, 800.37");
              }
             }
/* DISABLED POWER */
             internal_power() {
              when : "CEN";
              rise_power(power_template) {
                index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                values  ("0.000501615, 0.000501615, 0.000501615, 0.000501615, 0.000501615, 0.000501615, 0.000501615");
              }
              fall_power(power_template) {
                index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                values  ("0.000501615, 0.000501615, 0.000501615, 0.000501615, 0.000501615, 0.000501615, 0.000501615");
              }
             }
/* READ POWER */
             internal_power() {
             when : "!CEN & GWEN";
             rise_power(power_template) {
                index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                values  ("721.237, 721.237, 721.237, 721.237, 721.237, 721.237, 721.237");
              }
              fall_power(power_template) {
                index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                values  ("721.237, 721.237, 721.237, 721.237, 721.237, 721.237, 721.237");
              }
             }
          }

          pg_pin(VDD) {
                  voltage_name     : VDD;
                  pg_type          : primary_power;
          }
          pg_pin(VSS) {
                  voltage_name     : VSS;
                  pg_type          : primary_ground;
          }
          pin(CEN)   {
                  direction            : input;
                  capacitance          : 0.0194924;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          index_2 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          values  ( \
                            "0.513271, 0.507375, 0.498333, 0.514195, 0.558734, 0.610379, 0.659263", \
                            "0.510279, 0.502975, 0.494934, 0.509542, 0.55462, 0.604351, 0.655523", \
                            "0.506451, 0.498597, 0.49115, 0.507243, 0.551815, 0.590788, 0.635602", \
                            "0.505835, 0.499554, 0.490127, 0.505483, 0.550132, 0.588533, 0.623678", \
                            "0.505296, 0.499103, 0.489841, 0.50512, 0.549593, 0.587994, 0.62315", \
                            "0.504669, 0.498289, 0.489258, 0.505065, 0.549681, 0.590304, 0.621643", \
                            "0.503679, 0.498443, 0.488719, 0.503679, 0.548394, 0.586806, 0.62194" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          index_2 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          values  ( \
                            "0.458194, 0.460625, 0.476542, 0.515141, 0.584925, 0.668932, 0.760111", \
                            "0.454432, 0.456885, 0.472714, 0.511654, 0.58091, 0.665159, 0.754314", \
                            "0.45133, 0.453486, 0.469216, 0.508695, 0.578006, 0.662013, 0.752356", \
                            "0.450065, 0.451352, 0.467247, 0.507188, 0.576994, 0.660968, 0.751355", \
                            "0.449691, 0.452243, 0.467775, 0.506627, 0.575916, 0.66044, 0.75163", \
                            "0.449064, 0.451561, 0.467335, 0.503745, 0.577907, 0.659879, 0.751014", \
                            "0.44847, 0.450692, 0.465465, 0.50545, 0.575234, 0.659241, 0.749628" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          index_2 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          values  ( \
                            "1.23162, 1.23751, 1.24655, 1.23069, 1.18615, 1.1484, 1.11479", \
                            "1.23785, 1.24514, 1.25319, 1.23859, 1.1935, 1.15392, 1.12087", \
                            "1.25617, 1.26402, 1.27149, 1.25536, 1.2108, 1.17182, 1.13885", \
                            "1.29657, 1.30284, 1.3123, 1.29701, 1.25232, 1.21392, 1.17877", \
                            "1.35729, 1.36345, 1.37269, 1.3574, 1.31296, 1.27457, 1.2394", \
                            "1.41328, 1.41966, 1.42868, 1.41284, 1.36829, 1.32759, 1.29624", \
                            "1.45508, 1.46036, 1.47015, 1.45519, 1.41042, 1.37203, 1.33683" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          index_2 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          values  ( \
                            "1.28667, 1.28425, 1.2683, 1.22975, 1.15996, 1.07597, 0.984786", \
                            "1.29371, 1.29129, 1.27545, 1.23647, 1.16721, 1.08296, 0.993806", \
                            "1.31131, 1.30911, 1.29338, 1.25392, 1.18461, 1.10061, 1.01025", \
                            "1.35234, 1.35113, 1.33518, 1.29525, 1.22544, 1.14148, 1.05109", \
                            "1.41284, 1.41031, 1.3948, 1.35597, 1.28667, 1.20211, 1.11092", \
                            "1.46883, 1.46641, 1.45057, 1.41416, 1.34002, 1.25805, 1.16691", \
                            "1.5103, 1.5081, 1.49336, 1.45332, 1.38358, 1.29954, 1.20919" \
                          )
                          }
                 }
          }
          pin(GWEN)   {
                  direction            : input;
                  capacitance          : 0.0508257;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          index_2 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          values  ( \
                            "0.675499, 0.679767, 0.697818, 0.738474, 0.806696, 0.891242, 0.969727", \
                            "0.669416, 0.673519, 0.692098, 0.731632, 0.800635, 0.884125, 0.961312", \
                            "0.650441, 0.652883, 0.672716, 0.713372, 0.781297, 0.865304, 0.942469", \
                            "0.613327, 0.617584, 0.636108, 0.676137, 0.744546, 0.829004, 0.907643", \
                            "0.547294, 0.551529, 0.570108, 0.610137, 0.67859, 0.763004, 0.841643", \
                            "0.487113, 0.490963, 0.509003, 0.549648, 0.617914, 0.702416, 0.778723", \
                            "0.431057, 0.434709, 0.453376, 0.493922, 0.562375, 0.6468, 0.725307" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          index_2 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          values  ( \
                            "0.717882, 0.723448, 0.748649, 0.80542, 0.895125, 1.01451, 1.14766", \
                            "0.711854, 0.717211, 0.742918, 0.797731, 0.888206, 1.00618, 1.14165", \
                            "0.692791, 0.698379, 0.724262, 0.779603, 0.870111, 0.989747, 1.12275", \
                            "0.655842, 0.660924, 0.68695, 0.740872, 0.832942, 0.952292, 1.08526", \
                            "0.590161, 0.59521, 0.621093, 0.674806, 0.766227, 0.886039, 1.0186", \
                            "0.529067, 0.534479, 0.559075, 0.614702, 0.706013, 0.826001, 0.958793", \
                            "0.473451, 0.479006, 0.504999, 0.558206, 0.6501, 0.770396, 0.903067" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          index_2 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          values  ( \
                            "1.02555, 1.0226, 1.00249, 0.964403, 0.915145, 0.869671, 0.833547", \
                            "1.03231, 1.02952, 1.0092, 0.972004, 0.921789, 0.879637, 0.842204", \
                            "1.03872, 1.03567, 1.01559, 0.976998, 0.92774, 0.885533, 0.848078", \
                            "1.0547, 1.05166, 1.03105, 0.99297, 0.943646, 0.898249, 0.862092", \
                            "1.07158, 1.06877, 1.04845, 1.01036, 0.961048, 0.91564, 0.879505", \
                            "1.08347, 1.0806, 1.06002, 1.02193, 0.972664, 0.927201, 0.893002", \
                            "1.08875, 1.0858, 1.06568, 1.0276, 0.978285, 0.932888, 0.896775" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          index_2 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          values  ( \
                            "0.560516, 0.553531, 0.525679, 0.469304, 0.379896, 0.272556, 0.143319", \
                            "0.565323, 0.560098, 0.53152, 0.477862, 0.388751, 0.283679, 0.148705", \
                            "0.572682, 0.565521, 0.538241, 0.482075, 0.392183, 0.285725, 0.156686", \
                            "0.587114, 0.582384, 0.553377, 0.499433, 0.40854, 0.303171, 0.17218", \
                            "0.607959, 0.599324, 0.571637, 0.516846, 0.428076, 0.318637, 0.18897", \
                            "0.667128, 0.661441, 0.637274, 0.580657, 0.487223, 0.374429, 0.252406", \
                            "0.747978, 0.742302, 0.717123, 0.662343, 0.567787, 0.455312, 0.333465" \
                          )
                          }
                 }
          }
          bus(WEN)   {
                  bus_type             : Q_BUS;
                  direction            : input;
                  capacitance          : 0.00819589;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          index_2 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          values  ( \
                            "0, 0, 0, 0, 0, 0, 0", \
                            "0, 0, 0, 0, 0, 0, 0", \
                            "0, 0, 0, 0, 0, 0, 0", \
                            "0, 0, 0, 0, 0, 0, 0", \
                            "0, 0, 0, 0, 0, 0, 0", \
                            "0, 0, 0, 0, 0, 0, 0", \
                            "0, 0, 0, 0, 0, 0, 0" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          index_2 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          values  ( \
                            "0.249437, 0.256443, 0.284471, 0.339856, 0.429495, 0.536591, 0.666479", \
                            "0.246684, 0.251363, 0.280687, 0.333641, 0.422169, 0.527483, 0.663509", \
                            "0.237213, 0.244783, 0.272513, 0.327789, 0.417395, 0.523941, 0.652641", \
                            "0.224754, 0.229046, 0.258721, 0.311443, 0.402303, 0.508739, 0.638484", \
                            "0.202269, 0.21097, 0.239862, 0.293953, 0.38192, 0.490886, 0.620411", \
                            "0.192852, 0.19966, 0.22548, 0.282887, 0.372691, 0.477829, 0.607288", \
                            "0.188108, 0.19434, 0.222162, 0.277101, 0.365486, 0.472769, 0.602591" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          index_2 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          values  ( \
                            "1.0282, 1.02322, 1.00514, 0.967043, 0.915145, 0.870804, 0.833547", \
                            "1.03504, 1.02994, 1.01184, 0.973753, 0.921789, 0.879637, 0.842204", \
                            "1.04079, 1.0358, 1.01772, 0.979627, 0.92774, 0.885533, 0.848078", \
                            "1.05675, 1.05177, 1.03368, 0.995588, 0.943646, 0.899349, 0.862092", \
                            "1.07415, 1.06917, 1.05109, 1.013, 0.961048, 0.916751, 0.879505", \
                            "1.08571, 1.08074, 1.06264, 1.02456, 0.972664, 0.928312, 0.893002", \
                            "1.09144, 1.08646, 1.06838, 1.03028, 0.978285, 0.934043, 0.896775" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          index_2 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          values  ( \
                            "0.560516, 0.553531, 0.5291, 0.469304, 0.379896, 0.273315, 0.143899", \
                            "0.565653, 0.560098, 0.532763, 0.477862, 0.388751, 0.283679, 0.149383", \
                            "0.572682, 0.565521, 0.539836, 0.482075, 0.393096, 0.285725, 0.158321", \
                            "0.587455, 0.582384, 0.55473, 0.499433, 0.409068, 0.303171, 0.17218", \
                            "0.607959, 0.599324, 0.573155, 0.516846, 0.428076, 0.319528, 0.189966", \
                            "0.61798, 0.610511, 0.585915, 0.526878, 0.437756, 0.333498, 0.2025", \
                            "0.623161, 0.616649, 0.592185, 0.533951, 0.444917, 0.336985, 0.208079" \
                          )
                          }
                 }
          }
          bus(A)   {
                  bus_type             : A_BUS;
                  direction            : input;
                  capacitance          : 0.0437109;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          index_2 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          values  ( \
                            "0.768372, 0.761398, 0.757559, 0.771771, 0.824516, 0.888404, 0.945703", \
                            "0.760089, 0.754457, 0.750112, 0.769208, 0.818114, 0.886457, 0.942216", \
                            "0.755953, 0.748154, 0.744403, 0.76021, 0.811382, 0.877129, 0.932514", \
                            "0.741774, 0.733513, 0.728629, 0.745481, 0.801834, 0.859452, 0.91641", \
                            "0.715231, 0.7172, 0.709302, 0.728211, 0.779251, 0.84337, 0.897578", \
                            "0.712866, 0.70433, 0.698456, 0.716947, 0.773883, 0.830126, 0.885687", \
                            "0.700755, 0.700623, 0.693748, 0.709456, 0.76241, 0.825451, 0.8811" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          index_2 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          values  ( \
                            "1.15575, 1.15902, 1.17379, 1.21926, 1.28909, 1.38061, 1.49116", \
                            "1.1466, 1.15097, 1.16959, 1.20996, 1.28139, 1.37775, 1.48335", \
                            "1.14139, 1.14594, 1.16054, 1.20221, 1.2782, 1.36972, 1.47862", \
                            "1.12725, 1.13113, 1.14572, 1.18913, 1.25961, 1.35443, 1.46355", \
                            "1.11055, 1.11284, 1.13021, 1.17003, 1.24036, 1.33738, 1.44584", \
                            "1.09369, 1.09742, 1.11497, 1.15793, 1.23156, 1.3255, 1.43264", \
                            "1.09084, 1.09761, 1.10946, 1.15345, 1.22654, 1.32022, 1.42868" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          index_2 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          values  ( \
                            "0.637516, 0.642697, 0.646877, 0.642433, 0.641894, 0.637934, 0.634876", \
                            "0.639287, 0.645568, 0.648769, 0.644215, 0.643676, 0.639716, 0.636658", \
                            "0.662926, 0.669207, 0.672188, 0.667733, 0.667194, 0.663234, 0.660176", \
                            "0.700183, 0.706442, 0.709544, 0.704968, 0.70444, 0.70048, 0.697422", \
                            "0.756426, 0.762828, 0.765776, 0.761332, 0.760793, 0.756833, 0.753775", \
                            "0.834515, 0.840906, 0.843887, 0.839432, 0.838904, 0.834933, 0.831875", \
                            "0.900372, 0.906818, 0.909755, 0.905289, 0.904761, 0.90079, 0.897732" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          index_2 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          values  ( \
                            "0.659032, 0.655424, 0.637395, 0.608982, 0.598367, 0.59906, 0.607673", \
                            "0.66077, 0.656788, 0.639177, 0.610764, 0.600149, 0.600842, 0.609455", \
                            "0.684046, 0.680119, 0.662695, 0.634282, 0.623667, 0.624371, 0.632973", \
                            "0.721347, 0.717343, 0.699677, 0.671528, 0.660913, 0.661606, 0.670219", \
                            "0.77792, 0.773707, 0.756294, 0.727881, 0.717266, 0.717959, 0.726572", \
                            "0.856031, 0.852016, 0.834394, 0.805981, 0.795366, 0.796059, 0.804683", \
                            "0.921635, 0.917664, 0.901681, 0.871838, 0.861223, 0.861916, 0.87054" \
                          )
                          }
                 }
          }
          bus(D)   {
                  bus_type             : Q_BUS;
                  memory_write() {
                          address      : A;
                          clocked_on   : "CLK";
                  }
                  direction            : input;
                  capacitance          : 0.0175543;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          index_2 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          values  ( \
                            "0.563387, 0.571351, 0.58971, 0.611039, 0.616209, 0.604505, 0.578655", \
                            "0.558602, 0.56562, 0.583462, 0.606353, 0.611985, 0.599104, 0.570559", \
                            "0.551606, 0.559317, 0.577511, 0.599038, 0.60478, 0.592845, 0.562056", \
                            "0.537493, 0.542256, 0.562639, 0.58201, 0.588896, 0.578248, 0.545974", \
                            "0.519013, 0.525118, 0.544544, 0.566412, 0.572506, 0.560923, 0.53141", \
                            "0.506121, 0.512303, 0.531905, 0.553531, 0.557491, 0.546106, 0.517704", \
                            "0.501908, 0.507089, 0.525536, 0.547536, 0.55396, 0.543708, 0.514382" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          index_2 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          values  ( \
                            "0.0888602, 0.0890758, 0.111222, 0.177148, 0.269603, 0.396594, 0.548647", \
                            "0.0844151, 0.0840719, 0.105635, 0.169054, 0.264184, 0.391171, 0.541189", \
                            "0.0778569, 0.0770924, 0.0984368, 0.162602, 0.257184, 0.384098, 0.536646", \
                            "0.0622875, 0.0619872, 0.0835681, 0.147249, 0.241837, 0.368819, 0.521411", \
                            "0.045111, 0.04444, 0.0653345, 0.130044, 0.224026, 0.35013, 0.503657", \
                            "0.032736, 0.031933, 0.053284, 0.117996, 0.211152, 0.339823, 0.491469", \
                            "0.025674, 0.025982, 0.048268, 0.112055, 0.208797, 0.333894, 0.486123" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          index_2 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          values  ( \
                            "0.54879, 0.543939, 0.524216, 0.50215, 0.49753, 0.507727, 0.536096", \
                            "0.552651, 0.548053, 0.528242, 0.507331, 0.499587, 0.511973, 0.541816", \
                            "0.562397, 0.555588, 0.537504, 0.514426, 0.508618, 0.519904, 0.548801", \
                            "0.577126, 0.571802, 0.552398, 0.528264, 0.523391, 0.534963, 0.566225", \
                            "0.593395, 0.589061, 0.570515, 0.546414, 0.541574, 0.553476, 0.582307", \
                            "0.606463, 0.600468, 0.583286, 0.559108, 0.553674, 0.565323, 0.59488", \
                            "0.612326, 0.607376, 0.588335, 0.565818, 0.559779, 0.571373, 0.601062" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          index_2 ("0.02, 0.05575, 0.1813, 0.4209, 0.7943, 1.318, 2.008");
                          values  ( \
                            "0.780241, 0.781814, 0.759726, 0.694925, 0.598917, 0.474001, 0.325468", \
                            "0.78507, 0.786423, 0.764071, 0.699611, 0.603603, 0.478687, 0.331353", \
                            "0.792891, 0.793111, 0.772002, 0.707201, 0.611182, 0.486277, 0.337733", \
                            "0.809237, 0.809105, 0.788007, 0.723173, 0.627165, 0.50226, 0.353716", \
                            "0.826694, 0.827035, 0.805959, 0.741136, 0.645117, 0.520201, 0.371602", \
                            "0.837914, 0.838981, 0.817003, 0.752169, 0.656161, 0.531245, 0.382712", \
                            "0.845141, 0.845493, 0.823427, 0.758604, 0.662585, 0.53768, 0.389158" \
                          )
                          }
                 }
        }
          cell_leakage_power : 0.000501615;
}
}
