/*
 * Copyright 2022 GlobalFoundries PDK Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 *      Single Port SRAM cell name : gf180mcu_fd_ip_sram__sram128x8m8wm1
 *      Technology                 : GF 180nm 5V Green
 *
 *      ---------
 *      Pin name:
 *      ---------
 *      Input Pins : CLK CEN GWEN WEN[7:0] A[6:0] D[7:0]
 *      Inout Pins:  VDD VSS
 *      Output Pins: Q[7:0]
 *
 *     Revision History: 1.0 (Initial Release: June 20, 2014)
 */

library(gf180mcu_fd_ip_sram__sram128x8m8wm1__tt_025C_1v80) {
        delay_model             : table_lookup;
        revision                : 1.0;
        date                    : "June 20, 2014";
        comment                 : "GF 180nm 5V Green";
        voltage_unit            : "1V";
        time_unit               : "1ns";
        current_unit            : "1mA";
        leakage_power_unit      : "1mW";
        nom_process             : 1;
        nom_temperature         : 25;
        nom_voltage             : 1.8;
        capacitive_load_unit    (1,pf);
        pulling_resistance_unit : "1kohm";

        /* additional header data */
        default_fanout_load            : 1;
        default_inout_pin_cap          : 0.045;
        default_input_pin_cap          : 0.045;
        default_output_pin_cap         : 0;
        default_max_transition         : 4.617;
        default_cell_leakage_power     : 0;

         /* default attributes */
         slew_derate_from_library      : 1.000;
         slew_lower_threshold_pct_fall : 10.000;
         slew_upper_threshold_pct_fall : 90.000;
         slew_lower_threshold_pct_rise : 10.000;
         slew_upper_threshold_pct_rise : 90.000;
         input_threshold_pct_fall      : 50.000;
         input_threshold_pct_rise      : 50.000;
         output_threshold_pct_fall     : 50.000;
         output_threshold_pct_rise     : 50.000;
         default_leakage_power_density : 0;

        /* k-factors */
        k_process_recovery_fall        : 1;
        k_process_recovery_rise        : 1;
        k_process_cell_fall            : 1;
        k_process_cell_leakage_power   : 0;
        k_process_cell_rise            : 1;
        k_process_fall_transition      : 1;
        k_process_hold_fall            : 1;
        k_process_hold_rise            : 1;
        k_process_internal_power       : 0;
        k_process_min_pulse_width_high : 1;
        k_process_min_pulse_width_low  : 1;
        k_process_setup_fall           : 1;
        k_process_setup_rise           : 1;
        k_process_wire_cap             : 0;
        k_process_wire_res             : 0;
        k_process_pin_cap              : 0;
        k_process_rise_transition      : 1;
        k_temp_cell_fall               : 0.000;
        k_temp_cell_rise               : 0.000;
        k_temp_hold_fall               : 0.000;
        k_temp_hold_rise               : 0.000;
        k_temp_min_pulse_width_high    : 0.000;
        k_temp_min_pulse_width_low     : 0.000;
        k_temp_min_period              : 0.000;
        k_temp_rise_propagation        : 0.000;
        k_temp_fall_propagation        : 0.000;
        k_temp_rise_transition         : 0.000;
        k_temp_fall_transition         : 0.000;
        k_temp_recovery_fall           : 0.000;
        k_temp_recovery_rise           : 0.000;
        k_temp_setup_fall              : 0.000;
        k_temp_setup_rise              : 0.000;
        k_volt_cell_fall               : 0.000;
        k_volt_cell_rise               : 0.000;
        k_volt_hold_fall               : 0.000;
        k_volt_hold_rise               : 0.000;
        k_volt_min_pulse_width_high    : 0.000;
        k_volt_min_pulse_width_low     : 0.000;
        k_volt_min_period              : 0.000;
        k_volt_recovery_fall           : 0.000;
        k_volt_recovery_rise           : 0.000;
        k_volt_setup_fall              : 0.000;
        k_volt_setup_rise              : 0.000;
        k_volt_rise_propagation        : 0.000;
        k_volt_fall_propagation        : 0.000;
        k_volt_rise_transition         : 0.000;
        k_volt_fall_transition         : 0.000;

         voltage_map (VDD, 1.8);
         voltage_map (VSS, 0.00);
         operating_conditions(tt_1p8v_25C) {
                process       : 1;
                temperature   : 25;
                voltage       : 1.8;
                tree_type     : balanced_tree;
         }

         default_operating_conditions : tt_1p8v_25C;
         wire_load("Estimate") {
                resistance    : 1.44e-05;
                capacitance   : 0.00018;
                area          : 1.7;
                slope         : 500;
                fanout_length (1,500);
         }
         power_lut_template(power_template) {
            variable_1 : input_transition_time;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(q_delay_template) {
            variable_1 : input_net_transition;
            variable_2 : total_output_net_capacitance;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
                 index_2 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(q_slew_template) {
            variable_1 : total_output_net_capacitance;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(constraint_template) {
            variable_1 : related_pin_transition;
            variable_2 : constrained_pin_transition;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
                 index_2 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }

         library_features(report_delay_calculation);

         type (A_BUS) {
                base_type : array;
                data_type : bit;
                bit_width : 7;
                bit_from  : 6;
                bit_to    : 0;
                downto    : true;
         }
         type (Q_BUS) {
                base_type : array;
                data_type : bit;
                bit_width : 8;
                bit_from  : 7;
                bit_to    : 0;
                downto    : true;
         }
 cell(gf180mcu_fd_ip_sram__sram128x8m8wm1) {
        area             : 116118.5168;
        dont_use         : TRUE;
        dont_touch       : TRUE;
        interface_timing : TRUE;
        memory() {
                type          : ram;
                address_width : 7;
                word_width    : 8;
        }

                 bus(Q)   {
                  bus_type             : Q_BUS;
                  direction            : output;
                  max_capacitance      : 0.9747;
                  memory_read() {
                        address        : A;
                  }
                  timing() {
                          related_pin  : "CLK";
                          timing_type  : rising_edge;
                          timing_sense : non_unate;
       		  when : "((!CEN) & (GWEN))";
        	  sdf_cond : "CEN== 1'b0 && GWEN== 1'b1";
                          cell_rise(q_delay_template) {
			  index_1 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
			  index_2 ("0.01, 0.02735, 0.08826, 0.2046, 0.3858, 0.6401, 0.9747");
                          values  ( \
                            "15.606, 15.7128, 15.8748, 16.2516, 16.7244, 17.4108, 18.312", \
                            "15.696, 15.697, 15.9588, 16.2384, 16.74, 17.4336, 18.3948", \
                            "15.6852, 15.7464, 15.9936, 16.314, 16.8024, 17.4984, 18.432", \
                            "15.8268, 15.8628, 16.086, 16.4244, 16.9188, 17.6028, 18.5184", \
                            "15.9924, 16.0488, 16.242, 16.6068, 17.1048, 17.8248, 18.69", \
                            "16.1736, 16.2552, 16.4436, 16.7736, 17.3016, 17.9484, 18.9012", \
                            "16.4208, 16.4928, 16.6872, 17.0376, 17.5524, 18.2124, 19.1292" \
                          )
                          }
                          rise_transition(q_slew_template) {
                          index_1 ("0.01, 0.02735, 0.08826, 0.2046, 0.3858, 0.6401, 0.9747");
                          values  ( \
  	                     "0.497952, 0.592416, 0.8847, 1.43652, 2.36748, 3.64152, 5.34576" \
                          )

                          }
                          cell_fall(q_delay_template) {
                          index_1 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                          index_2 ("0.01, 0.02735, 0.08826, 0.2046, 0.3858, 0.6401, 0.9747");
                          values  ( \
                            "16.5192, 16.6176, 16.74, 17.0112, 17.2668, 17.6064, 18.0528", \
                            "16.6056, 16.607, 16.8384, 17.0016, 17.3076, 17.6496, 18.1416", \
                            "16.6032, 16.6368, 16.8576, 17.082, 17.352, 17.6988, 18.168", \
                            "16.7316, 16.752, 16.9452, 17.1876, 17.4672, 17.826, 18.2784", \
                            "16.878, 16.9404, 17.1, 17.3772, 17.6568, 18.0204, 18.4176", \
                            "17.07, 17.1504, 17.2992, 17.5272, 17.8572, 18.1548, 18.6516", \
                            "17.3268, 17.3964, 17.5524, 17.7984, 18.0912, 18.4128, 18.8664" \
                          )
                          }
                          fall_transition(q_slew_template) {
                          index_1 ("0.01, 0.02735, 0.08826, 0.2046, 0.3858, 0.6401, 0.9747");
                          values  ( \
                            "0.506556, 0.562668, 0.744252, 0.987732, 1.3512, 1.89432, 2.53632" \
                          )
                          }
                  }
          }
          pin(CLK)   {
                  direction            : input;
                  capacitance          : 0.282833;
                  clock                : true;
                  max_transition       : 4.617;
                  min_pulse_width_high : 10.66629;
                  min_pulse_width_low  : 10.68435;
                  min_period           : 21.83145;

/* WRITE POWER */
             internal_power() {
              when : "!CEN & !GWEN & (!WEN[0] | !WEN[1] | !WEN[2] | !WEN[3] | !WEN[4] | !WEN[5] | !WEN[6] | !WEN[7])";
              rise_power(power_template) {
                index_1 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                values  ("96.498, 96.498, 96.498, 96.498, 96.498, 96.498, 96.498");
              }
              fall_power(power_template) {
                index_1 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                values  ("96.498, 96.498, 96.498, 96.498, 96.498, 96.498, 96.498");
              }
             }
/* DISABLED POWER */
             internal_power() {
              when : "CEN";
              rise_power(power_template) {
                index_1 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                values  ("2.60946e-05, 2.60946e-05, 2.60946e-05, 2.60946e-05, 2.60946e-05, 2.60946e-05, 2.60946e-05");
              }
              fall_power(power_template) {
                index_1 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                values  ("2.60946e-05, 2.60946e-05, 2.60946e-05, 2.60946e-05, 2.60946e-05, 2.60946e-05, 2.60946e-05");
              }
             }
/* READ POWER */
             internal_power() {
             when : "!CEN & GWEN";
             rise_power(power_template) {
                index_1 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                values  ("88.7733, 88.7733, 88.7733, 88.7733, 88.7733, 88.7733, 88.7733");
              }
              fall_power(power_template) {
                index_1 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                values  ("88.7733, 88.7733, 88.7733, 88.7733, 88.7733, 88.7733, 88.7733");
              }
             }
          }

          pg_pin(VDD) {
                  voltage_name     : VDD;
                  pg_type          : primary_power;
          }
          pg_pin(VSS) {
                  voltage_name     : VSS;
                  pg_type          : primary_ground;
          }
          pin(CEN)   {
                  direction            : input;
                  capacitance          : 0.0175504;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                          index_2 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                          values  ( \
                            "1.55595, 1.53098, 1.54275, 1.67442, 1.94293, 2.35422, 2.88497", \
                            "1.53186, 1.51668, 1.51591, 1.64945, 1.93633, 2.34443, 2.88321", \
                            "1.47576, 1.45233, 1.46641, 1.58653, 1.85383, 2.26512, 2.80126", \
                            "1.33133, 1.30779, 1.30999, 1.441, 1.70951, 2.14313, 2.65562", \
                            "1.30447, 1.27684, 1.27677, 1.41273, 1.67387, 2.06734, 2.58929", \
                            "1.29264, 1.28241, 1.29306, 1.4102, 1.65605, 2.06404, 2.59193", \
                            "1.3001, 1.28351, 1.28825, 1.41218, 1.67343, 2.06679, 2.56201" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                          index_2 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                          values  ( \
                            "1.15192, 1.13876, 1.24158, 1.38699, 1.68179, 2.06107, 2.57103", \
                            "1.13125, 1.11819, 1.221, 1.36642, 1.66122, 2.0405, 2.55046", \
                            "1.07964, 1.09283, 1.1709, 1.3255, 1.60908, 1.99144, 2.49106", \
                            "1.07907, 1.09222, 1.17036, 1.32506, 1.60853, 1.99089, 2.49062", \
                            "1.0782, 1.07813, 1.16923, 1.32385, 1.60732, 1.98979, 2.48941", \
                            "1.07835, 1.07858, 1.16954, 1.32418, 1.60765, 1.99023, 2.48974", \
                            "1.07749, 1.07767, 1.16864, 1.3233, 1.60677, 1.98924, 2.48886" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                          index_2 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                          values  ( \
                            "3.82745, 3.8445, 3.84835, 3.71789, 3.45455, 3.06163, 2.56597", \
                            "3.86518, 3.87783, 3.88366, 3.74913, 3.47259, 3.07615, 2.56905", \
                            "3.9182, 3.93866, 3.92975, 3.81007, 3.54871, 3.15579, 2.65496", \
                            "4.06626, 4.08683, 4.09101, 3.96, 3.69677, 3.27789, 2.80379", \
                            "4.31662, 4.34423, 4.34434, 4.20838, 3.94724, 3.55377, 3.03182", \
                            "4.63639, 4.64662, 4.63595, 4.5188, 4.27295, 3.86496, 3.33707", \
                            "4.9918, 5.00841, 5.00368, 4.87982, 4.61857, 4.22521, 3.72988" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                          index_2 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                          values  ( \
                            "4.05042, 4.05053, 3.95934, 3.80468, 3.52121, 3.13874, 2.63912", \
                            "4.0777, 4.07759, 3.98651, 3.83185, 3.54838, 3.16591, 2.66629", \
                            "4.1448, 4.1316, 4.0535, 3.89884, 3.61537, 3.2329, 2.73328", \
                            "4.29286, 4.27966, 4.20156, 4.0469, 3.76343, 3.38096, 2.88134", \
                            "4.54289, 4.543, 4.45181, 4.29715, 4.01379, 3.63121, 3.13159", \
                            "4.85067, 4.85045, 4.75948, 4.60482, 4.32135, 3.93877, 3.43926", \
                            "5.21444, 5.21433, 5.12325, 4.96859, 4.68523, 4.30265, 3.80303" \
                          )
                          }
                 }
          }
          pin(GWEN)   {
                  direction            : input;
                  capacitance          : 0.0444816;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                          index_2 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                          values  ( \
                            "1.88353, 1.90762, 1.97934, 2.12245, 2.35224, 2.64187, 2.96208", \
                            "1.86791, 1.88122, 1.95877, 2.10155, 2.33134, 2.62097, 2.9447", \
                            "1.79454, 1.81786, 1.89134, 2.03346, 2.26336, 2.55079, 2.87342", \
                            "1.65286, 1.67695, 1.75241, 1.89178, 2.12179, 2.4134, 2.73119", \
                            "1.41966, 1.43836, 1.51602, 1.65858, 1.88848, 2.1725, 2.49634", \
                            "1.20337, 1.22705, 1.30275, 1.4421, 1.67266, 1.96064, 2.28602", \
                            "0.989604, 1.01459, 1.08596, 1.22874, 1.4586, 1.74251, 2.06844" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                          index_2 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                          values  ( \
                            "2.41417, 2.4277, 2.52076, 2.69566, 2.97638, 3.35214, 3.88916", \
                            "2.39338, 2.40658, 2.49843, 2.67267, 2.95537, 3.33025, 3.86815", \
                            "2.32507, 2.3397, 2.43045, 2.60667, 2.88739, 3.26227, 3.79753", \
                            "2.18361, 2.19802, 2.2902, 2.46499, 2.74571, 3.12059, 3.6586", \
                            "1.95019, 1.96405, 2.057, 2.23179, 2.51251, 2.8875, 3.42463", \
                            "1.73426, 1.7479, 1.84107, 2.01564, 2.29658, 2.67872, 3.20958", \
                            "1.52053, 1.53384, 1.62745, 1.80169, 2.08263, 2.45762, 2.99552" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                          index_2 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                          values  ( \
                            "2.5795, 2.5641, 2.48193, 2.34707, 2.1406, 1.92203, 1.74856", \
                            "2.55354, 2.54551, 2.45839, 2.32111, 2.11464, 1.90938, 1.7226", \
                            "2.50569, 2.48974, 2.40581, 2.27282, 2.06635, 1.84789, 1.67541", \
                            "2.5465, 2.53055, 2.44849, 2.31363, 2.10716, 1.88826, 1.716", \
                            "2.6763, 2.66794, 2.57829, 2.44343, 2.23696, 2.02246, 1.84118", \
                            "2.8556, 2.83954, 2.75715, 2.62262, 2.41615, 2.21089, 2.02279", \
                            "3.03226, 3.01642, 2.93436, 2.7995, 2.59303, 2.3782, 2.20099" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                          index_2 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                          values  ( \
                            "1.28813, 1.26476, 1.17156, 1.00491, 0.717112, 0.33979, 0", \
                            "1.26168, 1.23848, 1.14567, 0.970453, 0.691097, 0.313666, 0", \
                            "1.21355, 1.19013, 1.09743, 0.9306, 0.642785, 0.265357, 0", \
                            "1.25487, 1.23098, 1.13806, 0.971443, 0.683606, 0.306184, 0", \
                            "1.38655, 1.36037, 1.26792, 1.10129, 0.813538, 0.436051, 0", \
                            "1.56563, 1.54044, 1.44738, 1.27328, 0.992618, 0.613536, 0.119629", \
                            "1.74064, 1.71721, 1.62338, 1.44859, 1.16947, 0.792044, 0.296317" \
                          )
                          }
                 }
          }
          bus(WEN)   {
                  bus_type             : Q_BUS;
                  direction            : input;
                  capacitance          : 0.00715846;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                          index_2 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                          values  ( \
                            "0, 0, 0, 0, 0, 0.06149, 0.242189", \
                            "0, 0, 0, 0, 0, 0.070554, 0.264658", \
                            "0, 0, 0, 0, 0, 0.135983, 0.313477", \
                            "0, 0, 0, 0, 0, 0.089815, 0.269265", \
                            "0, 0, 0, 0, 0, 0, 0.143129", \
                            "0, 0, 0, 0, 0, 0, 0", \
                            "0, 0, 0, 0, 0, 0, 0" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                          index_2 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                          values  ( \
                            "0.695618, 0.714329, 0.808676, 0.97713, 1.26572, 1.63977, 2.13697", \
                            "0.718289, 0.736494, 0.83303, 1.01124, 1.28817, 1.66254, 2.16293", \
                            "0.770176, 0.789052, 0.882706, 1.05188, 1.34167, 1.71457, 2.22244", \
                            "0.72336, 0.742478, 0.837078, 1.00521, 1.2938, 1.66749, 2.17118", \
                            "0.5918, 0.612777, 0.706794, 0.87362, 1.16362, 1.53802, 2.0471", \
                            "0.414447, 0.433191, 0.527945, 0.707058, 0.984896, 1.36092, 1.85955", \
                            "0.239259, 0.263127, 0.353595, 0.532532, 0.80971, 1.1832, 1.68443" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                          index_2 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                          values  ( \
                            "2.59006, 2.56927, 2.49282, 2.35048, 2.14643, 1.95393, 1.75824", \
                            "2.56399, 2.54551, 2.46675, 2.32441, 2.12036, 1.92786, 1.73206", \
                            "2.51559, 2.49491, 2.41846, 2.27612, 2.07207, 1.87957, 1.68388", \
                            "2.5564, 2.53572, 2.45938, 2.31693, 2.11288, 1.91994, 1.72469", \
                            "2.68631, 2.66794, 2.58907, 2.44673, 2.24268, 2.05018, 1.85438", \
                            "2.86539, 2.8446, 2.76826, 2.62581, 2.42319, 2.22926, 2.03918", \
                            "3.04216, 3.02148, 2.94514, 2.80269, 2.59875, 2.40614, 2.21045" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                          index_2 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                          values  ( \
                            "1.28941, 1.26476, 1.17156, 1.00491, 0.717112, 0.33979, 0", \
                            "1.26303, 1.23848, 1.14567, 0.970453, 0.691097, 0.313666, 0", \
                            "1.21506, 1.19013, 1.09743, 0.9306, 0.642785, 0.265357, 0", \
                            "1.2564, 1.23098, 1.13806, 0.971443, 0.683606, 0.306184, 0", \
                            "1.38655, 1.36037, 1.26792, 1.10129, 0.813538, 0.436051, 0", \
                            "1.56563, 1.54044, 1.44738, 1.27328, 0.992618, 0.613536, 0.119629", \
                            "1.74218, 1.71721, 1.62338, 1.44859, 1.16947, 0.792044, 0.296317" \
                          )
                          }
                 }
          }
          bus(A)   {
                  bus_type             : A_BUS;
                  direction            : input;
                  capacitance          : 0.0389171;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                          index_2 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                          values  ( \
                            "1.65363, 1.64857, 1.64241, 1.78717, 2.057, 2.49469, 3.00619", \
                            "1.67255, 1.67002, 1.69708, 1.80081, 2.07724, 2.49898, 3.0393", \
                            "1.7314, 1.72854, 1.73415, 1.85493, 2.13092, 2.53693, 3.06625", \
                            "1.68619, 1.67662, 1.67464, 1.80972, 2.06822, 2.51614, 3.01609", \
                            "1.56013, 1.54462, 1.53758, 1.68454, 1.95701, 2.39272, 2.9051", \
                            "1.37511, 1.36917, 1.39007, 1.48027, 1.76572, 2.2044, 2.72008", \
                            "1.20057, 1.1953, 1.19016, 1.33386, 1.60655, 2.04138, 2.55035" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                          index_2 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                          values  ( \
                            "2.03313, 2.05601, 2.12289, 2.29834, 2.57796, 2.98298, 3.48788", \
                            "2.05799, 2.08032, 2.15435, 2.3243, 2.60381, 3.01092, 3.51373", \
                            "2.1087, 2.13334, 2.19901, 2.37501, 2.64803, 3.06372, 3.56466", \
                            "2.06635, 2.08934, 2.15556, 2.32991, 2.61085, 3.02016, 3.51824", \
                            "1.93039, 1.95723, 2.02565, 2.19736, 2.47621, 2.88189, 3.388", \
                            "1.75516, 1.77958, 1.84338, 2.01817, 2.2913, 2.7016, 3.20826", \
                            "1.58268, 1.60809, 1.67442, 1.84613, 2.1296, 2.53121, 3.03853" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                          index_2 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                          values  ( \
                            "1.31629, 1.32693, 1.31549, 1.17123, 0.922559, 0.574662, 0.207891", \
                            "1.33936, 1.35003, 1.33661, 1.19473, 0.93478, 0.605088, 0.207755", \
                            "1.40162, 1.41229, 1.39645, 1.25635, 0.995401, 0.685014, 0.288915", \
                            "1.5477, 1.55837, 1.54693, 1.40261, 1.15397, 0.800987, 0.437492", \
                            "1.77815, 1.78882, 1.77738, 1.63306, 1.38446, 1.03656, 0.669779", \
                            "2.07812, 2.08868, 2.07284, 1.94689, 1.67904, 1.33111, 0.951819", \
                            "2.38634, 2.39701, 2.38557, 2.24125, 1.99265, 1.64472, 1.27795" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                          index_2 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                          values  ( \
                            "1.51184, 1.496, 1.41724, 1.26053, 1.06945, 0.850333, 0.618805", \
                            "1.53494, 1.5191, 1.44023, 1.28358, 1.0925, 0.873389, 0.641828", \
                            "1.5972, 1.58136, 1.5026, 1.34585, 1.15479, 0.935671, 0.704121", \
                            "1.74328, 1.72744, 1.64868, 1.49193, 1.30086, 1.08174, 0.850212", \
                            "1.97373, 1.958, 1.87913, 1.72238, 1.53131, 1.31222, 1.08071", \
                            "2.27359, 2.25775, 2.17899, 2.02224, 1.83117, 1.61205, 1.3805", \
                            "2.58192, 2.56608, 2.48732, 2.33057, 2.1395, 1.92038, 1.68883" \
                          )
                          }
                 }
          }
          bus(D)   {
                  bus_type             : Q_BUS;
                  memory_write() {
                          address      : A;
                          clocked_on   : "CLK";
                  }
                  direction            : input;
                  capacitance          : 0.0160438;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                          index_2 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                          values  ( \
                            "1.83007, 1.86945, 1.94315, 2.06811, 2.19494, 2.27678, 2.39415", \
                            "1.8777, 1.89596, 1.95371, 2.09154, 2.22387, 2.30076, 2.40713", \
                            "1.92126, 1.94348, 2.01542, 2.14258, 2.2715, 2.35004, 2.48622", \
                            "1.87385, 1.90267, 1.96988, 2.09473, 2.23322, 2.30604, 2.42924", \
                            "1.72139, 1.76814, 1.83271, 1.95404, 2.07856, 2.17041, 2.29218", \
                            "1.54297, 1.58708, 1.6478, 1.79366, 1.91807, 1.98066, 2.11915", \
                            "1.37907, 1.4168, 1.49094, 1.61062, 1.74273, 1.82523, 1.94194" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                          index_2 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                          values  ( \
                            "0.015411, 0.019294, 0.080388, 0.258474, 0.524898, 0.924605, 1.39348", \
                            "0.041998, 0.04576, 0.113867, 0.284788, 0.55121, 0.943976, 1.41999", \
                            "0.092785, 0.096701, 0.157487, 0.335577, 0.601997, 0.994752, 1.47114", \
                            "0.048257, 0.052338, 0.120528, 0.291159, 0.55759, 0.950334, 1.4267", \
                            "0, 0, 0, 0.157242, 0.423412, 0.814649, 1.29275", \
                            "0, 0, 0, 0, 0.245447, 0.641828, 1.11426", \
                            "0, 0, 0, 0, 0.07271, 0.465476, 0.941798" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                          index_2 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                          values  ( \
                            "0.968759, 0.942183, 0.865304, 0.745415, 0.61578, 0.534567, 0.409222", \
                            "0.93918, 0.918819, 0.848914, 0.716518, 0.594143, 0.511401, 0.392084", \
                            "0.892452, 0.865997, 0.795487, 0.669218, 0.539572, 0.458348, 0.338778", \
                            "0.940511, 0.91399, 0.844679, 0.71896, 0.589347, 0.50666, 0.387673", \
                            "1.07301, 1.0465, 0.978758, 0.850201, 0.722502, 0.638891, 0.513546", \
                            "1.25173, 1.22531, 1.16067, 1.02347, 0.900592, 0.83006, 0.689315", \
                            "1.42274, 1.39623, 1.31948, 1.19947, 1.06986, 0.988636, 0.863302" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                          index_2 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                          values  ( \
                            "2.10793, 2.10892, 2.03995, 1.86406, 1.59115, 1.20717, 0.738639", \
                            "2.08461, 2.0856, 2.01663, 1.84074, 1.56783, 1.18388, 0.715352", \
                            "2.0317, 2.03236, 1.96372, 1.78783, 1.51492, 1.13099, 0.662442", \
                            "2.07988, 2.08043, 2.01179, 1.8359, 1.56299, 1.17904, 0.71049", \
                            "2.21232, 2.21287, 2.14423, 1.96834, 1.69543, 1.31151, 0.842963", \
                            "2.39107, 2.39206, 2.32309, 2.1472, 1.87429, 1.49028, 1.0218", \
                            "2.56212, 2.563, 2.49403, 2.31814, 2.04523, 1.66122, 1.19272" \
                          )
                          }
                 }
        }
          cell_leakage_power : 2.60946e-05;
}
}
