/*
 * Copyright 2022 GlobalFoundries PDK Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 *      Single Port SRAM cell name : gf180mcu_fd_ip_sram__sram512x8m8wm1
 *      Technology                 : GF 180nm 5V Green
 *
 *      ---------
 *      Pin name:
 *      ---------
 *      Input Pins : CLK CEN GWEN WEN[7:0] A[8:0] D[7:0]
 *      Inout Pins:  VDD VSS
 *      Output Pins: Q[7:0]
 *
 *     Revision History: 1.0 (Initial Release: June 20, 2014)
 */

library(gf180mcu_fd_ip_sram__sram512x8m8wm1__ff_n40C_5v50) {
        delay_model             : table_lookup;
        revision                : 1.0;
        date                    : "June 20, 2014";
        comment                 : "GF 180nm 5V Green";
        voltage_unit            : "1V";
        time_unit               : "1ns";
        current_unit            : "1mA";
        leakage_power_unit      : "1mW";
        nom_process             : 1;
        nom_temperature         : -40;
        nom_voltage             : 5.5;
        capacitive_load_unit    (1,pf);
        pulling_resistance_unit : "1kohm";

        /* additional header data */
        default_fanout_load            : 1;
        default_inout_pin_cap          : 0.045;
        default_input_pin_cap          : 0.045;
        default_output_pin_cap         : 0;
        default_max_transition         : 1.087;
        default_cell_leakage_power     : 0;

         /* default attributes */
         slew_derate_from_library      : 1.000;
         slew_lower_threshold_pct_fall : 10.000;
         slew_upper_threshold_pct_fall : 90.000;
         slew_lower_threshold_pct_rise : 10.000;
         slew_upper_threshold_pct_rise : 90.000;
         input_threshold_pct_fall      : 50.000;
         input_threshold_pct_rise      : 50.000;
         output_threshold_pct_fall     : 50.000;
         output_threshold_pct_rise     : 50.000;
         default_leakage_power_density : 0;

        /* k-factors */
        k_process_recovery_fall        : 1;
        k_process_recovery_rise        : 1;
        k_process_cell_fall            : 1;
        k_process_cell_leakage_power   : 0;
        k_process_cell_rise            : 1;
        k_process_fall_transition      : 1;
        k_process_hold_fall            : 1;
        k_process_hold_rise            : 1;
        k_process_internal_power       : 0;
        k_process_min_pulse_width_high : 1;
        k_process_min_pulse_width_low  : 1;
        k_process_setup_fall           : 1;
        k_process_setup_rise           : 1;
        k_process_wire_cap             : 0;
        k_process_wire_res             : 0;
        k_process_pin_cap              : 0;
        k_process_rise_transition      : 1;
        k_temp_cell_fall               : 0.000;
        k_temp_cell_rise               : 0.000;
        k_temp_hold_fall               : 0.000;
        k_temp_hold_rise               : 0.000;
        k_temp_min_pulse_width_high    : 0.000;
        k_temp_min_pulse_width_low     : 0.000;
        k_temp_min_period              : 0.000;
        k_temp_rise_propagation        : 0.000;
        k_temp_fall_propagation        : 0.000;
        k_temp_rise_transition         : 0.000;
        k_temp_fall_transition         : 0.000;
        k_temp_recovery_fall           : 0.000;
        k_temp_recovery_rise           : 0.000;
        k_temp_setup_fall              : 0.000;
        k_temp_setup_rise              : 0.000;
        k_volt_cell_fall               : 0.000;
        k_volt_cell_rise               : 0.000;
        k_volt_hold_fall               : 0.000;
        k_volt_hold_rise               : 0.000;
        k_volt_min_pulse_width_high    : 0.000;
        k_volt_min_pulse_width_low     : 0.000;
        k_volt_min_period              : 0.000;
        k_volt_recovery_fall           : 0.000;
        k_volt_recovery_rise           : 0.000;
        k_volt_setup_fall              : 0.000;
        k_volt_setup_rise              : 0.000;
        k_volt_rise_propagation        : 0.000;
        k_volt_fall_propagation        : 0.000;
        k_volt_rise_transition         : 0.000;
        k_volt_fall_transition         : 0.000;

         voltage_map (VDD, 5.5);
         voltage_map (VSS, 0.00);
         operating_conditions(ff_5p5v_m40C) {
                process       : 1;
                temperature   : -40;
                voltage       : 5.5;
                tree_type     : balanced_tree;
         }

         default_operating_conditions : ff_5p5v_m40C;
         wire_load("Estimate") {
                resistance    : 1.44e-05;
                capacitance   : 0.00018;
                area          : 1.7;
                slope         : 500;
                fanout_length (1,500);
         }
         power_lut_template(power_template) {
            variable_1 : input_transition_time;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(q_delay_template) {
            variable_1 : input_net_transition;
            variable_2 : total_output_net_capacitance;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
                 index_2 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(q_slew_template) {
            variable_1 : total_output_net_capacitance;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(constraint_template) {
            variable_1 : related_pin_transition;
            variable_2 : constrained_pin_transition;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
                 index_2 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }

         library_features(report_delay_calculation);

         type (A_BUS) {
                base_type : array;
                data_type : bit;
                bit_width : 9;
                bit_from  : 8;
                bit_to    : 0;
                downto    : true;
         }
         type (Q_BUS) {
                base_type : array;
                data_type : bit;
                bit_width : 8;
                bit_from  : 7;
                bit_to    : 0;
                downto    : true;
         }
 cell(gf180mcu_fd_ip_sram__sram512x8m8wm1) {
        area             : 209400.2768;
        dont_use         : TRUE;
        dont_touch       : TRUE;
        interface_timing : TRUE;
        memory() {
                type          : ram;
                address_width : 9;
                word_width    : 8;
        }

                 bus(Q)   {
                  bus_type             : Q_BUS;
                  direction            : output;
                  max_capacitance      : 1.165;
                  memory_read() {
                        address        : A;
                  }
                  timing() {
                          related_pin  : "CLK";
                          timing_type  : rising_edge;
                          timing_sense : non_unate;
       		  when : "((!CEN) & (GWEN))";
        	  sdf_cond : "CEN== 1'b0 && GWEN== 1'b1";
                          cell_rise(q_delay_template) {
			  index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
			  index_2 ("0.01, 0.03078, 0.1037, 0.243, 0.4599, 0.7643, 1.165");
                          values  ( \
                            "3.10656, 3.12264, 3.16284, 3.2304, 3.33552, 3.47964, 3.6732", \
                            "3.10812, 3.12264, 3.16224, 3.23292, 3.3336, 3.48312, 3.67608", \
                            "3.11076, 3.11832, 3.15888, 3.22944, 3.33528, 3.47832, 3.6744", \
                            "3.11328, 3.126, 3.16596, 3.23448, 3.33936, 3.48576, 3.67896", \
                            "3.11844, 3.13308, 3.17112, 3.243, 3.34692, 3.49236, 3.68628", \
                            "3.12264, 3.13548, 3.17712, 3.24432, 3.35076, 3.49332, 3.68772", \
                            "3.11136, 3.12528, 3.1656, 3.23424, 3.33948, 3.48456, 3.67728" \
                          )
                          }
                          rise_transition(q_slew_template) {
                          index_1 ("0.01, 0.03078, 0.1037, 0.243, 0.4599, 0.7643, 1.165");
                          values  ( \
  	                     "0.109666, 0.127548, 0.19266, 0.318888, 0.520968, 0.816732, 1.2066" \
                          )

                          }
                          cell_fall(q_delay_template) {
                          index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          index_2 ("0.01, 0.03078, 0.1037, 0.243, 0.4599, 0.7643, 1.165");
                          values  ( \
                            "3.20052, 3.21468, 3.25368, 3.31608, 3.40116, 3.50508, 3.64668", \
                            "3.19992, 3.21384, 3.25512, 3.3186, 3.39924, 3.50856, 3.6474", \
                            "3.19944, 3.20916, 3.24972, 3.31428, 3.4026, 3.50376, 3.64656", \
                            "3.20268, 3.21624, 3.25608, 3.31776, 3.40332, 3.51012, 3.64872", \
                            "3.20904, 3.22164, 3.26352, 3.32784, 3.41088, 3.51804, 3.65712", \
                            "3.21012, 3.22428, 3.26808, 3.33012, 3.41436, 3.51804, 3.65676", \
                            "3.20304, 3.21768, 3.25704, 3.32028, 3.40272, 3.51108, 3.64824" \
                          )
                          }
                          fall_transition(q_slew_template) {
                          index_1 ("0.01, 0.03078, 0.1037, 0.243, 0.4599, 0.7643, 1.165");
                          values  ( \
                            "0.114053, 0.129408, 0.175272, 0.253608, 0.374124, 0.546984, 0.77694" \
                          )
                          }
                  }
          }
          pin(CLK)   {
                  direction            : input;
                  capacitance          : 0.283486;
                  clock                : true;
                  max_transition       : 1.087;
                  min_pulse_width_high : 1.89828;
                  min_pulse_width_low  : 1.45317;
                  min_period           : 4.242075;

/* WRITE POWER */
             internal_power() {
              when : "!CEN & !GWEN & (!WEN[0] | !WEN[1] | !WEN[2] | !WEN[3] | !WEN[4] | !WEN[5] | !WEN[6] | !WEN[7])";
              rise_power(power_template) {
                index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                values  ("1231.09, 1231.09, 1231.09, 1231.09, 1231.09, 1231.09, 1231.09");
              }
              fall_power(power_template) {
                index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                values  ("1231.09, 1231.09, 1231.09, 1231.09, 1231.09, 1231.09, 1231.09");
              }
             }
/* DISABLED POWER */
             internal_power() {
              when : "CEN";
              rise_power(power_template) {
                index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                values  ("0.00075339, 0.00075339, 0.00075339, 0.00075339, 0.00075339, 0.00075339, 0.00075339");
              }
              fall_power(power_template) {
                index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                values  ("0.00075339, 0.00075339, 0.00075339, 0.00075339, 0.00075339, 0.00075339, 0.00075339");
              }
             }
/* READ POWER */
             internal_power() {
             when : "!CEN & GWEN";
             rise_power(power_template) {
                index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                values  ("1109.16, 1109.16, 1109.16, 1109.16, 1109.16, 1109.16, 1109.16");
              }
              fall_power(power_template) {
                index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                values  ("1109.16, 1109.16, 1109.16, 1109.16, 1109.16, 1109.16, 1109.16");
              }
             }
          }

          pg_pin(VDD) {
                  voltage_name     : VDD;
                  pg_type          : primary_power;
          }
          pg_pin(VSS) {
                  voltage_name     : VSS;
                  pg_type          : primary_ground;
          }
          pin(CEN)   {
                  direction            : input;
                  capacitance          : 0.0170434;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          index_2 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          values  ( \
                            "0.337469, 0.333564, 0.328746, 0.331287, 0.347611, 0.364375, 0.388509", \
                            "0.336853, 0.333509, 0.328636, 0.329571, 0.347479, 0.363374, 0.38665", \
                            "0.337172, 0.333091, 0.328405, 0.331067, 0.347193, 0.36344, 0.379192", \
                            "0.336083, 0.333069, 0.328163, 0.330858, 0.347039, 0.362945, 0.372493", \
                            "0.33649, 0.333025, 0.327987, 0.330341, 0.346764, 0.36267, 0.376772", \
                            "0.336644, 0.333465, 0.327921, 0.330341, 0.346665, 0.362615, 0.376706", \
                            "0.336204, 0.332794, 0.327899, 0.330869, 0.346709, 0.364573, 0.388696" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          index_2 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          values  ( \
                            "0.323092, 0.323807, 0.330572, 0.34441, 0.374352, 0.416108, 0.461208", \
                            "0.322927, 0.323378, 0.329967, 0.341715, 0.374165, 0.415921, 0.461021", \
                            "0.322883, 0.3234, 0.330154, 0.343992, 0.373934, 0.41569, 0.46079", \
                            "0.322465, 0.323191, 0.329879, 0.343794, 0.375496, 0.415481, 0.460581", \
                            "0.322212, 0.322938, 0.329043, 0.34353, 0.373461, 0.415217, 0.460317", \
                            "0.322102, 0.322905, 0.329615, 0.342859, 0.373406, 0.415162, 0.460262", \
                            "0.322146, 0.322905, 0.329065, 0.343519, 0.37345, 0.415206, 0.45694" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          index_2 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          values  ( \
                            "0.764588, 0.768493, 0.7733, 0.770759, 0.754446, 0.738496, 0.724394", \
                            "0.767547, 0.770891, 0.775764, 0.77484, 0.756921, 0.741026, 0.726924", \
                            "0.773333, 0.777414, 0.782089, 0.779438, 0.763312, 0.747065, 0.73326", \
                            "0.788931, 0.791934, 0.79684, 0.794145, 0.777964, 0.762069, 0.752521", \
                            "0.813395, 0.81686, 0.821898, 0.819533, 0.803121, 0.787204, 0.773113", \
                            "0.830841, 0.83402, 0.839564, 0.837144, 0.82082, 0.80487, 0.790779", \
                            "0.834163, 0.837584, 0.842479, 0.839498, 0.823669, 0.807719, 0.793507" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          index_2 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          values  ( \
                            "0.778965, 0.77825, 0.771474, 0.757636, 0.727694, 0.685949, 0.640849", \
                            "0.781473, 0.781022, 0.774433, 0.762685, 0.730235, 0.688479, 0.643379", \
                            "0.787622, 0.787105, 0.780351, 0.766502, 0.736571, 0.694815, 0.649715", \
                            "0.802538, 0.801823, 0.795124, 0.781209, 0.749518, 0.709522, 0.664422", \
                            "0.827673, 0.826947, 0.820842, 0.806355, 0.776413, 0.734668, 0.689568", \
                            "0.845383, 0.84458, 0.83787, 0.824626, 0.79409, 0.752334, 0.707234", \
                            "0.848232, 0.847473, 0.841302, 0.826848, 0.796928, 0.755172, 0.713438" \
                          )
                          }
                 }
          }
          pin(GWEN)   {
                  direction            : input;
                  capacitance          : 0.0485803;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          index_2 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          values  ( \
                            "0.432971, 0.435644, 0.442805, 0.46013, 0.493647, 0.53064, 0.568425", \
                            "0.431497, 0.434269, 0.441804, 0.45936, 0.492888, 0.52987, 0.567655", \
                            "0.423984, 0.426943, 0.434863, 0.452309, 0.485419, 0.52239, 0.560087", \
                            "0.408661, 0.410718, 0.41888, 0.436326, 0.469326, 0.50633, 0.544104", \
                            "0.379401, 0.381414, 0.388883, 0.406439, 0.439967, 0.477048, 0.514745", \
                            "0.352693, 0.355707, 0.362956, 0.380831, 0.41404, 0.451033, 0.488818", \
                            "0.332123, 0.334026, 0.341759, 0.359557, 0.392843, 0.429924, 0.467621" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          index_2 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          values  ( \
                            "0.453167, 0.456038, 0.4675, 0.492789, 0.539418, 0.602943, 0.670857", \
                            "0.452441, 0.454817, 0.466895, 0.493592, 0.538593, 0.602173, 0.670098", \
                            "0.444444, 0.447436, 0.459371, 0.48642, 0.531025, 0.594605, 0.662574", \
                            "0.42889, 0.431354, 0.443377, 0.471086, 0.514965, 0.578622, 0.64658", \
                            "0.399399, 0.402193, 0.413974, 0.441694, 0.485672, 0.549263, 0.620554", \
                            "0.373175, 0.376013, 0.387882, 0.415756, 0.459811, 0.523336, 0.59125", \
                            "0.352363, 0.354871, 0.366861, 0.394548, 0.438548, 0.502139, 0.570097" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          index_2 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          values  ( \
                            "0.61479, 0.613899, 0.607893, 0.590942, 0.572495, 0.555698, 0.542267", \
                            "0.615285, 0.613591, 0.608564, 0.591448, 0.573001, 0.556204, 0.542773", \
                            "0.614889, 0.613173, 0.608146, 0.591646, 0.572814, 0.555797, 0.542355", \
                            "0.616671, 0.615087, 0.60995, 0.59345, 0.574387, 0.55759, 0.544148", \
                            "0.623689, 0.622105, 0.616957, 0.599852, 0.581405, 0.564597, 0.551166", \
                            "0.624657, 0.623766, 0.617925, 0.600809, 0.582362, 0.565565, 0.552134", \
                            "0.615736, 0.614141, 0.608861, 0.592361, 0.573441, 0.556633, 0.543202" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          index_2 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          values  ( \
                            "0.38357, 0.380413, 0.368555, 0.340824, 0.297517, 0.23685, 0.171296", \
                            "0.383581, 0.380666, 0.368907, 0.340802, 0.298056, 0.237357, 0.171738", \
                            "0.383306, 0.381326, 0.368445, 0.343002, 0.297638, 0.236948, 0.171312", \
                            "0.384967, 0.382976, 0.370249, 0.342881, 0.298012, 0.238742, 0.173087", \
                            "0.391974, 0.39006, 0.377311, 0.351769, 0.306438, 0.245755, 0.181303", \
                            "0.399234, 0.396836, 0.384813, 0.35651, 0.31042, 0.249774, 0.185632", \
                            "0.434423, 0.432025, 0.420321, 0.391798, 0.345609, 0.284966, 0.220771" \
                          )
                          }
                 }
          }
          bus(WEN)   {
                  bus_type             : Q_BUS;
                  direction            : input;
                  capacitance          : 0.00761544;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          index_2 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          values  ( \
                            "0, 0, 0, 0, 0.016918, 0.032406, 0.044077", \
                            "0, 0, 0, 0, 0.016687, 0.032186, 0.043857", \
                            "0, 0, 0, 0, 0.016456, 0.031966, 0.043626", \
                            "0, 0, 0, 0, 0.014201, 0.029689, 0.04136", \
                            "0, 0, 0, 0, 0.008382, 0.023892, 0.035552", \
                            "0, 0, 0, 0, 0.00715, 0.022605, 0.034309", \
                            "0, 0, 0, 0, 0.015642, 0.031152, 0.042812" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          index_2 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          values  ( \
                            "0.203822, 0.207556, 0.219183, 0.247559, 0.29117, 0.351197, 0.418066", \
                            "0.204762, 0.207941, 0.21945, 0.247894, 0.290521, 0.350977, 0.416999", \
                            "0.204304, 0.206452, 0.21892, 0.244002, 0.29051, 0.350735, 0.417516", \
                            "0.202259, 0.204402, 0.216662, 0.244743, 0.288981, 0.348744, 0.415008", \
                            "0.196318, 0.198536, 0.211101, 0.236973, 0.282161, 0.342672, 0.407374", \
                            "0.195084, 0.197305, 0.209805, 0.235791, 0.281127, 0.341429, 0.408276", \
                            "0.203378, 0.205813, 0.217676, 0.246148, 0.289685, 0.350086, 0.416108" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          index_2 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          values  ( \
                            "0.61479, 0.613899, 0.607893, 0.590942, 0.572495, 0.555698, 0.542267", \
                            "0.615285, 0.613624, 0.608564, 0.591448, 0.573001, 0.556204, 0.542773", \
                            "0.614889, 0.613217, 0.608146, 0.591646, 0.572814, 0.555797, 0.542355", \
                            "0.616671, 0.615087, 0.60995, 0.59345, 0.574387, 0.55759, 0.544148", \
                            "0.623689, 0.622105, 0.616957, 0.599852, 0.581405, 0.564597, 0.551166", \
                            "0.624657, 0.623766, 0.617925, 0.600809, 0.582362, 0.565565, 0.552134", \
                            "0.615736, 0.614141, 0.608861, 0.592361, 0.573441, 0.556633, 0.543202" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          index_2 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          values  ( \
                            "0.38368, 0.380413, 0.369655, 0.340824, 0.297517, 0.23685, 0.171296", \
                            "0.383581, 0.380666, 0.369897, 0.340802, 0.298056, 0.237357, 0.171738", \
                            "0.383306, 0.381326, 0.369545, 0.343123, 0.297638, 0.236948, 0.171312", \
                            "0.384967, 0.382976, 0.371338, 0.342881, 0.298056, 0.238742, 0.173087", \
                            "0.391974, 0.39006, 0.378279, 0.351769, 0.306438, 0.245755, 0.181303", \
                            "0.393206, 0.391369, 0.379401, 0.352539, 0.307362, 0.246718, 0.181173", \
                            "0.384505, 0.38214, 0.370315, 0.3421, 0.298496, 0.237789, 0.172164" \
                          )
                          }
                 }
          }
          bus(A)   {
                  bus_type             : A_BUS;
                  direction            : input;
                  capacitance          : 0.03733;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          index_2 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          values  ( \
                            "0.45386, 0.450373, 0.445764, 0.452837, 0.478126, 0.500104, 0.524942", \
                            "0.454531, 0.450131, 0.445137, 0.454113, 0.476388, 0.498058, 0.52536", \
                            "0.453541, 0.450923, 0.445621, 0.453651, 0.475882, 0.497343, 0.524634", \
                            "0.450637, 0.448525, 0.443223, 0.451737, 0.475761, 0.496474, 0.522049", \
                            "0.445775, 0.441782, 0.437855, 0.446116, 0.468545, 0.490677, 0.514833", \
                            "0.444147, 0.440473, 0.434555, 0.443146, 0.466334, 0.488873, 0.515658", \
                            "0.451044, 0.447832, 0.444026, 0.451242, 0.471702, 0.497926, 0.522412" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          index_2 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          values  ( \
                            "0.678986, 0.67859, 0.686565, 0.703626, 0.734943, 0.78628, 0.842908", \
                            "0.68002, 0.679866, 0.686807, 0.700568, 0.735988, 0.785136, 0.844668", \
                            "0.677644, 0.679679, 0.685762, 0.702757, 0.734789, 0.786115, 0.843865", \
                            "0.676313, 0.677083, 0.684354, 0.698467, 0.733128, 0.782936, 0.841313", \
                            "0.669845, 0.671748, 0.679173, 0.693891, 0.727694, 0.776897, 0.83567", \
                            "0.670252, 0.670494, 0.676885, 0.691834, 0.725472, 0.777205, 0.834559", \
                            "0.678183, 0.678293, 0.684486, 0.698929, 0.733766, 0.784773, 0.842094" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          index_2 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          values  ( \
                            "0.403216, 0.406956, 0.409365, 0.411488, 0.410564, 0.41173, 0.412016", \
                            "0.406945, 0.410773, 0.413182, 0.415404, 0.414381, 0.415547, 0.415844", \
                            "0.412016, 0.415767, 0.418176, 0.420442, 0.419375, 0.420541, 0.420838", \
                            "0.42977, 0.432476, 0.434951, 0.437151, 0.436117, 0.437283, 0.43758", \
                            "0.45485, 0.458678, 0.461087, 0.463419, 0.462286, 0.463452, 0.463749", \
                            "0.480788, 0.483527, 0.485936, 0.488158, 0.487135, 0.488301, 0.488587", \
                            "0.50105, 0.50479, 0.507199, 0.509509, 0.508398, 0.509564, 0.509861" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          index_2 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          values  ( \
                            "0.408914, 0.407517, 0.400873, 0.396506, 0.402985, 0.409321, 0.413336", \
                            "0.412863, 0.411334, 0.404712, 0.402963, 0.406813, 0.413138, 0.417164", \
                            "0.417714, 0.41657, 0.409695, 0.405328, 0.411796, 0.418132, 0.422147", \
                            "0.434478, 0.433312, 0.426437, 0.424688, 0.428538, 0.434874, 0.4389", \
                            "0.460647, 0.459228, 0.452595, 0.448316, 0.454707, 0.461043, 0.465069", \
                            "0.485485, 0.484088, 0.477411, 0.473066, 0.479545, 0.485892, 0.489907", \
                            "0.506891, 0.505593, 0.498718, 0.494351, 0.50083, 0.507155, 0.511181" \
                          )
                          }
                 }
          }
          bus(D)   {
                  bus_type             : Q_BUS;
                  memory_write() {
                          address      : A;
                          clocked_on   : "CLK";
                  }
                  direction            : input;
                  capacitance          : 0.0156967;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          index_2 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          values  ( \
                            "0.344564, 0.343607, 0.352429, 0.355641, 0.350405, 0.333454, 0.302005", \
                            "0.344234, 0.346687, 0.352242, 0.356334, 0.350394, 0.333454, 0.302126", \
                            "0.343211, 0.346324, 0.350856, 0.35497, 0.349921, 0.332937, 0.302027", \
                            "0.342815, 0.342914, 0.34969, 0.35365, 0.347754, 0.331067, 0.299321", \
                            "0.336919, 0.337887, 0.343794, 0.347897, 0.342012, 0.324302, 0.293161", \
                            "0.334609, 0.33407, 0.341572, 0.346588, 0.341297, 0.324104, 0.292732", \
                            "0.342507, 0.34551, 0.350251, 0.353892, 0.348359, 0.3311, 0.299508" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          index_2 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          values  ( \
                            "0.112883, 0.114806, 0.128604, 0.165444, 0.22014, 0.29524, 0.387552", \
                            "0.112962, 0.115028, 0.128726, 0.165133, 0.220255, 0.29535, 0.388377", \
                            "0.112653, 0.114649, 0.128684, 0.164778, 0.219552, 0.295009, 0.387992", \
                            "0.110529, 0.11222, 0.126607, 0.162655, 0.218191, 0.29293, 0.385308", \
                            "0.103751, 0.106637, 0.120425, 0.155682, 0.211716, 0.287023, 0.380116", \
                            "0.103414, 0.10527, 0.119452, 0.155578, 0.210676, 0.285769, 0.378862", \
                            "0.110986, 0.113221, 0.126765, 0.1631, 0.218279, 0.29337, 0.386529" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          index_2 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          values  ( \
                            "0.379885, 0.377333, 0.371734, 0.367675, 0.373043, 0.390929, 0.420893", \
                            "0.379137, 0.375342, 0.370062, 0.366333, 0.372955, 0.390379, 0.420882", \
                            "0.378928, 0.376035, 0.37048, 0.366762, 0.373395, 0.391083, 0.421696", \
                            "0.381766, 0.380182, 0.374341, 0.370524, 0.375584, 0.39347, 0.424358", \
                            "0.386265, 0.38423, 0.379489, 0.375342, 0.38082, 0.398893, 0.42889", \
                            "0.38819, 0.387442, 0.380567, 0.377883, 0.383163, 0.400609, 0.431926", \
                            "0.380985, 0.378587, 0.371756, 0.369523, 0.374594, 0.392667, 0.423214" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          index_2 ("0.02, 0.03919, 0.1065, 0.2352, 0.4356, 0.7167, 1.087");
                          values  ( \
                            "0.50061, 0.498718, 0.484781, 0.448492, 0.393294, 0.31845, 0.226267", \
                            "0.500203, 0.498267, 0.484374, 0.448096, 0.392898, 0.318043, 0.225865", \
                            "0.500643, 0.498751, 0.484814, 0.448525, 0.393327, 0.318483, 0.226302", \
                            "0.503151, 0.501248, 0.487311, 0.451033, 0.395835, 0.32098, 0.228804", \
                            "0.508376, 0.506484, 0.492547, 0.456269, 0.401071, 0.326216, 0.23404", \
                            "0.510719, 0.508838, 0.494901, 0.458535, 0.403414, 0.32857, 0.236389", \
                            "0.502172, 0.50028, 0.486343, 0.450065, 0.394867, 0.320012, 0.227838" \
                          )
                          }
                 }
        }
          cell_leakage_power : 0.00075339;
}
}
