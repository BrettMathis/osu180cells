/*
 * Copyright 2022 GlobalFoundries PDK Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 *      Single Port SRAM cell name : gf180mcu_fd_ip_sram__sram128x8m8wm1
 *      Technology                 : GF 180nm 5V Green
 *
 *      ---------
 *      Pin name:
 *      ---------
 *      Input Pins : CLK CEN GWEN WEN[7:0] A[6:0] D[7:0]
 *      Inout Pins:  VDD VSS
 *      Output Pins: Q[7:0]
 *
 *     Revision History: 1.0 (Initial Release: June 20, 2014)
 */

library(gf180mcu_fd_ip_sram__sram128x8m8wm1__ff_125C_3v60) {
        delay_model             : table_lookup;
        revision                : 1.0;
        date                    : "June 20, 2014";
        comment                 : "GF 180nm 5V Green";
        voltage_unit            : "1V";
        time_unit               : "1ns";
        current_unit            : "1mA";
        leakage_power_unit      : "1mW";
        nom_process             : 1;
        nom_temperature         : 125;
        nom_voltage             : 3.6;
        capacitive_load_unit    (1,pf);
        pulling_resistance_unit : "1kohm";

        /* additional header data */
        default_fanout_load            : 1;
        default_inout_pin_cap          : 0.045;
        default_input_pin_cap          : 0.045;
        default_output_pin_cap         : 0;
        default_max_transition         : 2.3877;
        default_cell_leakage_power     : 0;

         /* default attributes */
         slew_derate_from_library      : 1.000;
         slew_lower_threshold_pct_fall : 10.000;
         slew_upper_threshold_pct_fall : 90.000;
         slew_lower_threshold_pct_rise : 10.000;
         slew_upper_threshold_pct_rise : 90.000;
         input_threshold_pct_fall      : 50.000;
         input_threshold_pct_rise      : 50.000;
         output_threshold_pct_fall     : 50.000;
         output_threshold_pct_rise     : 50.000;
         default_leakage_power_density : 0;

        /* k-factors */
        k_process_recovery_fall        : 1;
        k_process_recovery_rise        : 1;
        k_process_cell_fall            : 1;
        k_process_cell_leakage_power   : 0;
        k_process_cell_rise            : 1;
        k_process_fall_transition      : 1;
        k_process_hold_fall            : 1;
        k_process_hold_rise            : 1;
        k_process_internal_power       : 0;
        k_process_min_pulse_width_high : 1;
        k_process_min_pulse_width_low  : 1;
        k_process_setup_fall           : 1;
        k_process_setup_rise           : 1;
        k_process_wire_cap             : 0;
        k_process_wire_res             : 0;
        k_process_pin_cap              : 0;
        k_process_rise_transition      : 1;
        k_temp_cell_fall               : 0.000;
        k_temp_cell_rise               : 0.000;
        k_temp_hold_fall               : 0.000;
        k_temp_hold_rise               : 0.000;
        k_temp_min_pulse_width_high    : 0.000;
        k_temp_min_pulse_width_low     : 0.000;
        k_temp_min_period              : 0.000;
        k_temp_rise_propagation        : 0.000;
        k_temp_fall_propagation        : 0.000;
        k_temp_rise_transition         : 0.000;
        k_temp_fall_transition         : 0.000;
        k_temp_recovery_fall           : 0.000;
        k_temp_recovery_rise           : 0.000;
        k_temp_setup_fall              : 0.000;
        k_temp_setup_rise              : 0.000;
        k_volt_cell_fall               : 0.000;
        k_volt_cell_rise               : 0.000;
        k_volt_hold_fall               : 0.000;
        k_volt_hold_rise               : 0.000;
        k_volt_min_pulse_width_high    : 0.000;
        k_volt_min_pulse_width_low     : 0.000;
        k_volt_min_period              : 0.000;
        k_volt_recovery_fall           : 0.000;
        k_volt_recovery_rise           : 0.000;
        k_volt_setup_fall              : 0.000;
        k_volt_setup_rise              : 0.000;
        k_volt_rise_propagation        : 0.000;
        k_volt_fall_propagation        : 0.000;
        k_volt_rise_transition         : 0.000;
        k_volt_fall_transition         : 0.000;

         voltage_map (VDD, 3.6);
         voltage_map (VSS, 0.00);
         operating_conditions(ff_3p6v_125C) {
                process       : 1;
                temperature   : 125;
                voltage       : 3.6;
                tree_type     : balanced_tree;
         }

         default_operating_conditions : ff_3p6v_125C;
         wire_load("Estimate") {
                resistance    : 1.44e-05;
                capacitance   : 0.00018;
                area          : 1.7;
                slope         : 500;
                fanout_length (1,500);
         }
         power_lut_template(power_template) {
            variable_1 : input_transition_time;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(q_delay_template) {
            variable_1 : input_net_transition;
            variable_2 : total_output_net_capacitance;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
                 index_2 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(q_slew_template) {
            variable_1 : total_output_net_capacitance;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(constraint_template) {
            variable_1 : related_pin_transition;
            variable_2 : constrained_pin_transition;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
                 index_2 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }

         library_features(report_delay_calculation);

         type (A_BUS) {
                base_type : array;
                data_type : bit;
                bit_width : 7;
                bit_from  : 6;
                bit_to    : 0;
                downto    : true;
         }
         type (Q_BUS) {
                base_type : array;
                data_type : bit;
                bit_width : 8;
                bit_from  : 7;
                bit_to    : 0;
                downto    : true;
         }
 cell(gf180mcu_fd_ip_sram__sram128x8m8wm1) {
        area             : 116118.5168;
        dont_use         : TRUE;
        dont_touch       : TRUE;
        interface_timing : TRUE;
        memory() {
                type          : ram;
                address_width : 7;
                word_width    : 8;
        }

                 bus(Q)   {
                  bus_type             : Q_BUS;
                  direction            : output;
                  max_capacitance      : 1.0626;
                  memory_read() {
                        address        : A;
                  }
                  timing() {
                          related_pin  : "CLK";
                          timing_type  : rising_edge;
                          timing_sense : non_unate;
       		  when : "((!CEN) & (GWEN))";
        	  sdf_cond : "CEN== 1'b0 && GWEN== 1'b1";
                          cell_rise(q_delay_template) {
			  index_1 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
			  index_2 ("0.0100, 0.0289, 0.0954, 0.2223, 0.4200, 0.6975, 1.0626");
                          values  ( \
                            "5.50104, 5.51772, 5.59452, 5.7186, 5.8986, 6.15288, 6.47928", \
                            "5.4972, 5.5206, 5.59212, 5.71884, 5.89944, 6.14856, 6.47928", \
                            "5.50464, 5.52912, 5.6022, 5.7234, 5.89788, 6.15756, 6.4818", \
                            "5.5116, 5.53152, 5.60592, 5.73072, 5.91276, 6.1644, 6.4926", \
                            "5.51724, 5.53932, 5.61636, 5.73636, 5.92032, 6.17088, 6.49908", \
                            "5.51112, 5.53992, 5.6064, 5.73804, 5.91564, 6.16812, 6.49728", \
                            "5.48652, 5.50968, 5.57808, 5.706, 5.88828, 6.14136, 6.46608" \
                          )
                          }
                          rise_transition(q_slew_template) {
                          index_1 ("0.0100, 0.0289, 0.0954, 0.2223, 0.4200, 0.6975, 1.0626");
                          values  ( \
  	                     "0.23364, 0.266388, 0.386628, 0.614532, 0.983172, 1.52004, 2.2212" \
                          )

                          }
                          cell_fall(q_delay_template) {
                          index_1 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          index_2 ("0.0100, 0.0289, 0.0954, 0.2223, 0.4200, 0.6975, 1.0626");
                          values  ( \
                            "5.68668, 5.7048, 5.77812, 5.88336, 6.02508, 6.20352, 6.41796", \
                            "5.68416, 5.70588, 5.77968, 5.8884, 6.02832, 6.20196, 6.42084", \
                            "5.6898, 5.71356, 5.78544, 5.88924, 6.02532, 6.20772, 6.42", \
                            "5.6976, 5.72028, 5.78844, 5.89716, 6.03888, 6.21564, 6.4326", \
                            "5.70708, 5.72604, 5.80032, 5.90424, 6.04524, 6.22104, 6.43656", \
                            "5.70096, 5.7234, 5.79516, 5.9028, 6.0414, 6.21708, 6.43776", \
                            "5.67144, 5.69052, 5.76276, 5.8764, 6.01716, 6.19272, 6.4068" \
                          )
                          }
                          fall_transition(q_slew_template) {
                          index_1 ("0.0100, 0.0289, 0.0954, 0.2223, 0.4200, 0.6975, 1.0626");
                          values  ( \
                            "0.239496, 0.265608, 0.34698, 0.477432, 0.677724, 0.957156, 1.31292" \
                          )
                          }
                  }
          }
          pin(CLK)   {
                  direction            : input;
                  capacitance          : 0.282536;
                  clock                : true;
                  max_transition       : 2.3877;
                  min_pulse_width_high : 2.549295;
                  min_pulse_width_low  : 3.32799;
                  min_period           : 7.23747;

/* WRITE POWER */
             internal_power() {
              when : "!CEN & !GWEN & (!WEN[0] | !WEN[1] | !WEN[2] | !WEN[3] | !WEN[4] | !WEN[5] | !WEN[6] | !WEN[7])";
              rise_power(power_template) {
                index_1 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                values  ("460.764, 460.764, 460.764, 460.764, 460.764, 460.764, 460.764");
              }
              fall_power(power_template) {
                index_1 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                values  ("460.764, 460.764, 460.764, 460.764, 460.764, 460.764, 460.764");
              }
             }
/* DISABLED POWER */
             internal_power() {
              when : "CEN";
              rise_power(power_template) {
                index_1 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                values  ("0.00490968, 0.00490968, 0.00490968, 0.00490968, 0.00490968, 0.00490968, 0.00490968");
              }
              fall_power(power_template) {
                index_1 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                values  ("0.00490968, 0.00490968, 0.00490968, 0.00490968, 0.00490968, 0.00490968, 0.00490968");
              }
             }
/* READ POWER */
             internal_power() {
             when : "!CEN & GWEN";
             rise_power(power_template) {
                index_1 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                values  ("413.478, 413.478, 413.478, 413.478, 413.478, 413.478, 413.478");
              }
              fall_power(power_template) {
                index_1 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                values  ("413.478, 413.478, 413.478, 413.478, 413.478, 413.478, 413.478");
              }
             }
          }

          pg_pin(VDD) {
                  voltage_name     : VDD;
                  pg_type          : primary_power;
          }
          pg_pin(VSS) {
                  voltage_name     : VSS;
                  pg_type          : primary_ground;
          }
          pin(CEN)   {
                  direction            : input;
                  capacitance          : 0.0168727;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          index_2 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          values  ( \
                            "0.536844, 0.531201, 0.528154, 0.547811, 0.595463, 0.626692, 0.65395", \
                            "0.530409, 0.524557, 0.521411, 0.541783, 0.5819, 0.623018, 0.647823", \
                            "0.521103, 0.515405, 0.511951, 0.531003, 0.567919, 0.602228, 0.627044", \
                            "0.520487, 0.515163, 0.51172, 0.530761, 0.559614, 0.572748, 0.596211", \
                            "0.520597, 0.514591, 0.511445, 0.530486, 0.559339, 0.572462, 0.594484", \
                            "0.52096, 0.515185, 0.511522, 0.528066, 0.560461, 0.594759, 0.619575", \
                            "0.569712, 0.564212, 0.561066, 0.58333, 0.628364, 0.662662, 0.687489" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          index_2 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          values  ( \
                            "0.496793, 0.501688, 0.52371, 0.575575, 0.664433, 0.766183, 0.87857", \
                            "0.49643, 0.50193, 0.52349, 0.575344, 0.660693, 0.764797, 0.87835", \
                            "0.496265, 0.501633, 0.523226, 0.575069, 0.663949, 0.765688, 0.878086", \
                            "0.496034, 0.501413, 0.522951, 0.574827, 0.663696, 0.765446, 0.877844", \
                            "0.495748, 0.501226, 0.521906, 0.574563, 0.663432, 0.765171, 0.877569", \
                            "0.495715, 0.501182, 0.522775, 0.574618, 0.663487, 0.765237, 0.877635", \
                            "0.50215, 0.509784, 0.531256, 0.582307, 0.669911, 0.771991, 0.885973" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          index_2 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          values  ( \
                            "1.47818, 1.48412, 1.4872, 1.47103, 1.43935, 1.42626, 1.42054", \
                            "1.48753, 1.49358, 1.49699, 1.48005, 1.45794, 1.43605, 1.43011", \
                            "1.50755, 1.51327, 1.51668, 1.49765, 1.46883, 1.45563, 1.4498", \
                            "1.54781, 1.55309, 1.5565, 1.53747, 1.50865, 1.49556, 1.48962", \
                            "1.61128, 1.61722, 1.62041, 1.60138, 1.57256, 1.55936, 1.55353", \
                            "1.66089, 1.66672, 1.67035, 1.65374, 1.62239, 1.6093, 1.60336", \
                            "1.69202, 1.69763, 1.70104, 1.68201, 1.65319, 1.6401, 1.63416" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          index_2 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          values  ( \
                            "1.50293, 1.49798, 1.47598, 1.42406, 1.33529, 1.2335, 1.12111", \
                            "1.51283, 1.50733, 1.48577, 1.43385, 1.3486, 1.24445, 1.1309", \
                            "1.53241, 1.52702, 1.50546, 1.45354, 1.36466, 1.26297, 1.15057", \
                            "1.57223, 1.56684, 1.54528, 1.49347, 1.40459, 1.30284, 1.19043", \
                            "1.63614, 1.63064, 1.60996, 1.55727, 1.46839, 1.36664, 1.2543", \
                            "1.68608, 1.68069, 1.65913, 1.60721, 1.51833, 1.41658, 1.30427", \
                            "1.71688, 1.71138, 1.68982, 1.63812, 1.54913, 1.44738, 1.33496" \
                          )
                          }
                 }
          }
          pin(GWEN)   {
                  direction            : input;
                  capacitance          : 0.0482781;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          index_2 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          values  ( \
                            "0.742005, 0.745129, 0.76516, 0.807323, 0.873378, 0.941314, 0.991375", \
                            "0.737121, 0.739013, 0.759572, 0.802318, 0.86779, 0.935737, 0.985798", \
                            "0.720511, 0.723657, 0.743666, 0.786412, 0.851884, 0.919831, 0.969881", \
                            "0.682924, 0.686345, 0.706376, 0.748539, 0.814594, 0.88253, 0.932591", \
                            "0.627341, 0.630949, 0.649638, 0.69278, 0.758714, 0.82665, 0.876722", \
                            "0.591382, 0.594737, 0.614757, 0.65692, 0.722975, 0.790911, 0.840972", \
                            "0.568557, 0.571516, 0.591712, 0.634458, 0.69993, 0.767877, 0.817927" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          index_2 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          values  ( \
                            "0.812086, 0.816123, 0.848837, 0.913858, 1.01964, 1.16013, 1.31593", \
                            "0.80663, 0.810018, 0.84326, 0.90805, 1.01406, 1.15434, 1.31747", \
                            "0.790592, 0.794101, 0.827343, 0.892144, 0.998151, 1.13843, 1.29448", \
                            "0.753159, 0.756811, 0.790064, 0.854678, 0.960861, 1.10142, 1.25496", \
                            "0.697433, 0.701349, 0.733755, 0.799194, 0.904981, 1.04526, 1.20122", \
                            "0.661551, 0.665181, 0.698434, 0.763444, 0.869231, 1.00953, 1.1656", \
                            "0.638484, 0.642136, 0.6754, 0.74041, 0.846197, 0.98648, 1.14029" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          index_2 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          values  ( \
                            "1.02399, 1.02203, 1.00223, 0.963578, 0.931051, 0.916201, 0.923362", \
                            "1.02503, 1.02308, 1.00327, 0.964612, 0.932096, 0.917224, 0.924396", \
                            "1.03003, 1.02806, 1.00826, 0.969617, 0.937112, 0.92224, 0.929401", \
                            "1.03759, 1.03553, 1.01572, 0.977064, 0.944548, 0.929687, 0.936848", \
                            "1.04383, 1.04189, 1.02208, 0.9834, 0.950763, 0.936045, 0.943206", \
                            "1.04439, 1.04245, 1.02264, 0.98428, 0.951808, 0.936606, 0.943767", \
                            "1.01747, 1.01551, 0.995709, 0.957055, 0.92455, 0.909678, 0.916839" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          index_2 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          values  ( \
                            "0.562837, 0.557051, 0.526581, 0.465212, 0.357632, 0.222567, 0.064713", \
                            "0.564575, 0.557326, 0.527626, 0.466026, 0.358666, 0.223633, 0.065219", \
                            "0.569195, 0.562397, 0.532631, 0.471251, 0.363671, 0.228634, 0.071093", \
                            "0.576532, 0.57002, 0.540485, 0.478478, 0.371107, 0.2359, 0.078573", \
                            "0.582758, 0.576444, 0.547558, 0.484847, 0.377476, 0.24244, 0.0845812", \
                            "0.60192, 0.596497, 0.564663, 0.498443, 0.387959, 0.252571, 0.102782", \
                            "0.65989, 0.654467, 0.622633, 0.556413, 0.445929, 0.310541, 0.16299" \
                          )
                          }
                 }
          }
          bus(WEN)   {
                  bus_type             : Q_BUS;
                  direction            : input;
                  capacitance          : 0.0075492;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          index_2 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          values  ( \
                            "0, 0, 0, 0, 0, 0, 0", \
                            "0, 0, 0, 0, 0, 0, 0", \
                            "0, 0, 0, 0, 0, 0, 0", \
                            "0, 0, 0, 0, 0, 0, 0", \
                            "0, 0, 0, 0, 0, 0, 0", \
                            "0, 0, 0, 0, 0, 0, 0", \
                            "0, 0, 0, 0, 0, 0, 0" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          index_2 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          values  ( \
                            "0.332167, 0.338646, 0.368401, 0.430166, 0.537416, 0.673101, 0.832018", \
                            "0.329989, 0.337469, 0.367004, 0.429462, 0.536019, 0.671682, 0.831941", \
                            "0.325886, 0.332805, 0.361317, 0.424325, 0.531311, 0.667117, 0.826243", \
                            "0.317966, 0.324918, 0.35442, 0.416405, 0.523512, 0.659615, 0.818257", \
                            "0.310343, 0.318604, 0.348007, 0.409673, 0.517506, 0.65274, 0.811899", \
                            "0.311025, 0.318472, 0.34771, 0.409783, 0.516758, 0.652553, 0.811294", \
                            "0.33825, 0.34573, 0.374286, 0.436854, 0.544115, 0.680284, 0.838871" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          index_2 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          values  ( \
                            "1.02399, 1.02203, 1.00282, 0.963578, 0.931579, 0.916201, 0.923362", \
                            "1.02503, 1.02308, 1.00385, 0.964612, 0.932613, 0.917224, 0.924396", \
                            "1.03003, 1.02806, 1.00885, 0.969617, 0.937618, 0.92224, 0.929401", \
                            "1.03759, 1.03553, 1.01628, 0.977064, 0.945043, 0.929687, 0.936848", \
                            "1.04383, 1.04189, 1.02265, 0.9834, 0.951412, 0.936045, 0.943206", \
                            "1.04439, 1.04245, 1.02323, 0.98428, 0.951984, 0.936606, 0.943767", \
                            "1.01747, 1.01551, 0.996292, 0.957055, 0.925067, 0.909678, 0.916839" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          index_2 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          values  ( \
                            "0.562837, 0.557051, 0.526581, 0.465212, 0.357632, 0.222567, 0.064713", \
                            "0.564575, 0.557326, 0.527626, 0.466026, 0.358666, 0.223633, 0.065219", \
                            "0.569195, 0.562397, 0.532631, 0.471251, 0.363671, 0.228634, 0.071093", \
                            "0.576532, 0.57002, 0.540485, 0.478478, 0.371107, 0.2359, 0.078573", \
                            "0.582758, 0.576444, 0.547558, 0.484847, 0.377476, 0.24244, 0.0845812", \
                            "0.583781, 0.57673, 0.546997, 0.485617, 0.378037, 0.242996, 0.0851367", \
                            "0.556809, 0.549769, 0.520476, 0.458469, 0.35112, 0.216067, 0.058201" \
                          )
                          }
                 }
          }
          bus(A)   {
                  bus_type             : A_BUS;
                  direction            : input;
                  capacitance          : 0.0367128;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          index_2 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          values  ( \
                            "0.648593, 0.645711, 0.657635, 0.677699, 0.722557, 0.747868, 0.774422", \
                            "0.645986, 0.645931, 0.656656, 0.676786, 0.722084, 0.744557, 0.772266", \
                            "0.640882, 0.640805, 0.651893, 0.674102, 0.718905, 0.742654, 0.769461", \
                            "0.636394, 0.631543, 0.643511, 0.666226, 0.707344, 0.732611, 0.759572", \
                            "0.627539, 0.625493, 0.636295, 0.659406, 0.704143, 0.726935, 0.754116", \
                            "0.631103, 0.627, 0.637703, 0.659505, 0.70554, 0.727276, 0.75383", \
                            "0.655556, 0.652707, 0.665335, 0.686917, 0.731368, 0.754567, 0.781407" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          index_2 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          values  ( \
                            "0.858319, 0.857032, 0.882959, 0.934835, 1.02982, 1.14316, 1.27942", \
                            "0.857131, 0.861069, 0.881243, 0.933482, 1.02861, 1.14249, 1.27871", \
                            "0.855074, 0.85833, 0.876161, 0.928213, 1.02451, 1.1403, 1.27497", \
                            "0.845933, 0.851147, 0.86966, 0.921525, 1.0166, 1.13081, 1.26598", \
                            "0.838057, 0.843678, 0.861729, 0.915112, 1.00701, 1.12449, 1.25957", \
                            "0.838684, 0.842765, 0.862774, 0.915233, 1.00948, 1.12598, 1.26403", \
                            "0.86493, 0.868428, 0.89034, 0.942161, 1.03709, 1.15133, 1.2867" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          index_2 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          values  ( \
                            "0.615725, 0.618563, 0.607409, 0.5962, 0.591492, 0.597828, 0.594858", \
                            "0.622523, 0.625328, 0.614196, 0.602965, 0.598268, 0.604538, 0.601623", \
                            "0.640684, 0.643522, 0.632368, 0.621148, 0.616451, 0.622776, 0.619806", \
                            "0.678029, 0.681604, 0.670461, 0.659241, 0.654533, 0.660869, 0.657899", \
                            "0.732589, 0.735427, 0.724273, 0.713053, 0.708356, 0.714615, 0.711711", \
                            "0.777524, 0.78111, 0.769967, 0.758747, 0.754039, 0.760309, 0.757405", \
                            "0.794959, 0.797797, 0.786665, 0.775434, 0.770737, 0.776996, 0.774092" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          index_2 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          values  ( \
                            "0.636977, 0.632368, 0.60973, 0.583264, 0.573749, 0.57673, 0.584386", \
                            "0.643753, 0.638979, 0.616506, 0.59004, 0.580404, 0.583506, 0.591162", \
                            "0.6622, 0.657327, 0.634667, 0.608223, 0.598576, 0.601546, 0.609345", \
                            "0.699996, 0.69498, 0.672749, 0.646305, 0.636669, 0.639639, 0.647438", \
                            "0.754083, 0.748814, 0.726451, 0.700128, 0.690481, 0.693451, 0.70125", \
                            "0.799766, 0.794673, 0.772255, 0.745811, 0.736175, 0.739145, 0.742005", \
                            "0.816464, 0.81147, 0.788832, 0.762487, 0.752862, 0.755832, 0.763631" \
                          )
                          }
                 }
          }
          bus(D)   {
                  bus_type             : Q_BUS;
                  memory_write() {
                          address      : A;
                          clocked_on   : "CLK";
                  }
                  direction            : input;
                  capacitance          : 0.0156583;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          index_2 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          values  ( \
                            "0.573199, 0.577533, 0.594121, 0.601051, 0.584584, 0.538824, 0.462088", \
                            "0.573518, 0.57354, 0.592273, 0.597223, 0.581592, 0.535326, 0.459646", \
                            "0.565675, 0.569822, 0.587466, 0.594077, 0.578336, 0.532752, 0.455169", \
                            "0.558547, 0.56298, 0.580822, 0.587345, 0.570251, 0.527406, 0.446523", \
                            "0.555038, 0.557216, 0.573991, 0.580624, 0.561462, 0.517616, 0.440176", \
                            "0.554081, 0.557601, 0.574156, 0.578589, 0.561176, 0.52063, 0.443344", \
                            "0.580514, 0.585684, 0.60038, 0.606089, 0.590975, 0.546128, 0.470646" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          index_2 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          values  ( \
                            "0.135729, 0.133591, 0.166021, 0.243972, 0.366069, 0.525338, 0.723998", \
                            "0.134132, 0.132792, 0.164387, 0.242341, 0.364441, 0.523655, 0.722293", \
                            "0.128983, 0.128853, 0.160368, 0.238334, 0.360481, 0.519739, 0.718476", \
                            "0.12061, 0.120853, 0.152147, 0.230522, 0.352209, 0.511731, 0.710039", \
                            "0.113023, 0.114161, 0.145739, 0.223694, 0.345774, 0.505054, 0.703626", \
                            "0.115607, 0.114785, 0.146093, 0.224, 0.346148, 0.505395, 0.703615", \
                            "0.142804, 0.141083, 0.172982, 0.250935, 0.373043, 0.53229, 0.730873" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          index_2 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          values  ( \
                            "0.543697, 0.542311, 0.521796, 0.517616, 0.534292, 0.577874, 0.652531", \
                            "0.544599, 0.5456, 0.52294, 0.519057, 0.53625, 0.579084, 0.653686", \
                            "0.553553, 0.550154, 0.527417, 0.525261, 0.540727, 0.583561, 0.663025", \
                            "0.557568, 0.558613, 0.535953, 0.533885, 0.548449, 0.592031, 0.671561", \
                            "0.566038, 0.564718, 0.542058, 0.538945, 0.556193, 0.601084, 0.6776", \
                            "0.564245, 0.562947, 0.542168, 0.539737, 0.556336, 0.59972, 0.672903", \
                            "0.537218, 0.536338, 0.514899, 0.512831, 0.528154, 0.572033, 0.645645" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          index_2 ("0.0200, 0.0626, 0.2121, 0.4976, 0.9426, 1.5664, 2.3877");
                          values  ( \
                            "0.801383, 0.801559, 0.771045, 0.692373, 0.570064, 0.412049, 0.215711", \
                            "0.802505, 0.802648, 0.772156, 0.693473, 0.571164, 0.41316, 0.216821", \
                            "0.80696, 0.807114, 0.776622, 0.697939, 0.57563, 0.417626, 0.221286", \
                            "0.816761, 0.815661, 0.785169, 0.706486, 0.584177, 0.426162, 0.229834", \
                            "0.825231, 0.821788, 0.791285, 0.712591, 0.590392, 0.432278, 0.235938", \
                            "0.821898, 0.82192, 0.791428, 0.712734, 0.590436, 0.432421, 0.236089", \
                            "0.794453, 0.794607, 0.764126, 0.685432, 0.563123, 0.405108, 0.208781" \
                          )
                          }
                 }
        }
          cell_leakage_power : 0.00490968;
}
}
