/*
 * Copyright 2022 GlobalFoundries PDK Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 *      Single Port SRAM cell name : gf180mcu_fd_ip_sram__sram256x8m8wm1
 *      Technology                 : GF 180nm 5V Green
 *
 *      ---------
 *      Pin name:
 *      ---------
 *      Input Pins : CLK CEN GWEN WEN[7:0] A[7:0] D[7:0]
 *      Inout Pins:  VDD VSS
 *      Output Pins: Q[7:0]
 *
 *     Revision History: 1.0 (Initial Release: June 20, 2014)
 */

library(gf180mcu_fd_ip_sram__sram256x8m8wm1__ff_n40C_3v60) {
        delay_model             : table_lookup;
        revision                : 1.0;
        date                    : "June 20, 2014";
        comment                 : "GF 180nm 5V Green";
        voltage_unit            : "1V";
        time_unit               : "1ns";
        current_unit            : "1mA";
        leakage_power_unit      : "1mW";
        nom_process             : 1;
        nom_temperature         : -40;
        nom_voltage             : 3.6;
        capacitive_load_unit    (1,pf);
        pulling_resistance_unit : "1kohm";

        /* additional header data */
        default_fanout_load            : 1;
        default_inout_pin_cap          : 0.045;
        default_input_pin_cap          : 0.045;
        default_output_pin_cap         : 0;
        default_max_transition         : 1.7498;
        default_cell_leakage_power     : 0;

         /* default attributes */
         slew_derate_from_library      : 1.000;
         slew_lower_threshold_pct_fall : 10.000;
         slew_upper_threshold_pct_fall : 90.000;
         slew_lower_threshold_pct_rise : 10.000;
         slew_upper_threshold_pct_rise : 90.000;
         input_threshold_pct_fall      : 50.000;
         input_threshold_pct_rise      : 50.000;
         output_threshold_pct_fall     : 50.000;
         output_threshold_pct_rise     : 50.000;
         default_leakage_power_density : 0;

        /* k-factors */
        k_process_recovery_fall        : 1;
        k_process_recovery_rise        : 1;
        k_process_cell_fall            : 1;
        k_process_cell_leakage_power   : 0;
        k_process_cell_rise            : 1;
        k_process_fall_transition      : 1;
        k_process_hold_fall            : 1;
        k_process_hold_rise            : 1;
        k_process_internal_power       : 0;
        k_process_min_pulse_width_high : 1;
        k_process_min_pulse_width_low  : 1;
        k_process_setup_fall           : 1;
        k_process_setup_rise           : 1;
        k_process_wire_cap             : 0;
        k_process_wire_res             : 0;
        k_process_pin_cap              : 0;
        k_process_rise_transition      : 1;
        k_temp_cell_fall               : 0.000;
        k_temp_cell_rise               : 0.000;
        k_temp_hold_fall               : 0.000;
        k_temp_hold_rise               : 0.000;
        k_temp_min_pulse_width_high    : 0.000;
        k_temp_min_pulse_width_low     : 0.000;
        k_temp_min_period              : 0.000;
        k_temp_rise_propagation        : 0.000;
        k_temp_fall_propagation        : 0.000;
        k_temp_rise_transition         : 0.000;
        k_temp_fall_transition         : 0.000;
        k_temp_recovery_fall           : 0.000;
        k_temp_recovery_rise           : 0.000;
        k_temp_setup_fall              : 0.000;
        k_temp_setup_rise              : 0.000;
        k_volt_cell_fall               : 0.000;
        k_volt_cell_rise               : 0.000;
        k_volt_hold_fall               : 0.000;
        k_volt_hold_rise               : 0.000;
        k_volt_min_pulse_width_high    : 0.000;
        k_volt_min_pulse_width_low     : 0.000;
        k_volt_min_period              : 0.000;
        k_volt_recovery_fall           : 0.000;
        k_volt_recovery_rise           : 0.000;
        k_volt_setup_fall              : 0.000;
        k_volt_setup_rise              : 0.000;
        k_volt_rise_propagation        : 0.000;
        k_volt_fall_propagation        : 0.000;
        k_volt_rise_transition         : 0.000;
        k_volt_fall_transition         : 0.000;

         voltage_map (VDD, 3.6);
         voltage_map (VSS, 0.00);
         operating_conditions(ff_3p6v_m40C) {
                process       : 1;
                temperature   : -40;
                voltage       : 3.6;
                tree_type     : balanced_tree;
         }

         default_operating_conditions : ff_3p6v_m40C;
         wire_load("Estimate") {
                resistance    : 1.44e-05;
                capacitance   : 0.00018;
                area          : 1.7;
                slope         : 500;
                fanout_length (1,500);
         }
         power_lut_template(power_template) {
            variable_1 : input_transition_time;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(q_delay_template) {
            variable_1 : input_net_transition;
            variable_2 : total_output_net_capacitance;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
                 index_2 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(q_slew_template) {
            variable_1 : total_output_net_capacitance;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(constraint_template) {
            variable_1 : related_pin_transition;
            variable_2 : constrained_pin_transition;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
                 index_2 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }

         library_features(report_delay_calculation);

         type (A_BUS) {
                base_type : array;
                data_type : bit;
                bit_width : 8;
                bit_from  : 7;
                bit_to    : 0;
                downto    : true;
         }
         type (Q_BUS) {
                base_type : array;
                data_type : bit;
                bit_width : 8;
                bit_from  : 7;
                bit_to    : 0;
                downto    : true;
         }
 cell(gf180mcu_fd_ip_sram__sram256x8m8wm1) {
        area             : 147212.4368;
        dont_use         : TRUE;
        dont_touch       : TRUE;
        interface_timing : TRUE;
        memory() {
                type          : ram;
                address_width : 8;
                word_width    : 8;
        }

                 bus(Q)   {
                  bus_type             : Q_BUS;
                  direction            : output;
                  max_capacitance      : 1.0614;
                  memory_read() {
                        address        : A;
                  }
                  timing() {
                          related_pin  : "CLK";
                          timing_type  : rising_edge;
                          timing_sense : non_unate;
       		  when : "((!CEN) & (GWEN))";
        	  sdf_cond : "CEN== 1'b0 && GWEN== 1'b1";
                          cell_rise(q_delay_template) {
			  index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
			  index_2 ("0.0100, 0.0289, 0.0953, 0.2221, 0.4195, 0.6967, 1.0614");
                          values  ( \
                            "3.86088, 3.87492, 3.92724, 4.01352, 4.14708, 4.32312, 4.56", \
                            "3.8658, 3.88008, 3.93024, 4.02072, 4.14948, 4.33008, 4.56864", \
                            "3.86232, 3.88584, 3.93084, 4.02588, 4.1484, 4.33152, 4.5654", \
                            "3.88008, 3.88728, 3.93792, 4.02912, 4.164, 4.34196, 4.58196", \
                            "3.88308, 3.89784, 3.95376, 4.03836, 4.16688, 4.3482, 4.58196", \
                            "3.88248, 3.89784, 3.957, 4.041, 4.16292, 4.35228, 4.5816", \
                            "3.86592, 3.88692, 3.93816, 4.03104, 4.15404, 4.32924, 4.56852" \
                          )
                          }
                          rise_transition(q_slew_template) {
                          index_1 ("0.0100, 0.0289, 0.0953, 0.2221, 0.4195, 0.6967, 1.0614");
                          values  ( \
  	                     "0.135696, 0.159588, 0.2418, 0.400176, 0.641436, 1.00158, 1.46904" \
                          )

                          }
                          cell_fall(q_delay_template) {
                          index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          index_2 ("0.0100, 0.0289, 0.0953, 0.2221, 0.4195, 0.6967, 1.0614");
                          values  ( \
                            "3.99396, 4.0092, 4.05912, 4.13256, 4.23336, 4.35408, 4.50924", \
                            "4.0014, 4.0146, 4.06212, 4.13844, 4.23492, 4.36212, 4.51536", \
                            "3.99612, 4.01904, 4.06572, 4.14504, 4.2372, 4.36104, 4.5156", \
                            "4.01316, 4.01916, 4.07052, 4.14852, 4.2516, 4.37208, 4.5318", \
                            "4.0194, 4.0362, 4.0884, 4.15728, 4.25808, 4.37976, 4.5342", \
                            "4.0182, 4.03368, 4.09044, 4.16496, 4.25328, 4.3854, 4.5318", \
                            "3.99888, 4.0188, 4.0698, 4.14804, 4.24512, 4.36092, 4.51992" \
                          )
                          }
                          fall_transition(q_slew_template) {
                          index_1 ("0.0100, 0.0289, 0.0953, 0.2221, 0.4195, 0.6967, 1.0614");
                          values  ( \
                            "0.141264, 0.157116, 0.212604, 0.302304, 0.439224, 0.629868, 0.879696" \
                          )
                          }
                  }
          }
          pin(CLK)   {
                  direction            : input;
                  capacitance          : 0.280028;
                  clock                : true;
                  max_transition       : 1.7498;
                  min_pulse_width_high : 1.89975;
                  min_pulse_width_low  : 1.85733;
                  min_period           : 5.10069;

/* WRITE POWER */
             internal_power() {
              when : "!CEN & !GWEN & (!WEN[0] | !WEN[1] | !WEN[2] | !WEN[3] | !WEN[4] | !WEN[5] | !WEN[6] | !WEN[7])";
              rise_power(power_template) {
                index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                values  ("446.67, 446.67, 446.67, 446.67, 446.67, 446.67, 446.67");
              }
              fall_power(power_template) {
                index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                values  ("446.67, 446.67, 446.67, 446.67, 446.67, 446.67, 446.67");
              }
             }
/* DISABLED POWER */
             internal_power() {
              when : "CEN";
              rise_power(power_template) {
                index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                values  ("0.000177156, 0.000177156, 0.000177156, 0.000177156, 0.000177156, 0.000177156, 0.000177156");
              }
              fall_power(power_template) {
                index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                values  ("0.000177156, 0.000177156, 0.000177156, 0.000177156, 0.000177156, 0.000177156, 0.000177156");
              }
             }
/* READ POWER */
             internal_power() {
             when : "!CEN & GWEN";
             rise_power(power_template) {
                index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                values  ("403.308, 403.308, 403.308, 403.308, 403.308, 403.308, 403.308");
              }
              fall_power(power_template) {
                index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                values  ("403.308, 403.308, 403.308, 403.308, 403.308, 403.308, 403.308");
              }
             }
          }

          pg_pin(VDD) {
                  voltage_name     : VDD;
                  pg_type          : primary_power;
          }
          pg_pin(VSS) {
                  voltage_name     : VSS;
                  pg_type          : primary_ground;
          }
          pin(CEN)   {
                  direction            : input;
                  capacitance          : 0.0172336;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          index_2 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          values  ( \
                            "0.426184, 0.420134, 0.417417, 0.436579, 0.471581, 0.500676, 0.507529", \
                            "0.422961, 0.419177, 0.414315, 0.433345, 0.46101, 0.492294, 0.505483", \
                            "0.42262, 0.41888, 0.415283, 0.431893, 0.453915, 0.479798, 0.487234", \
                            "0.4224, 0.418616, 0.414942, 0.431178, 0.453816, 0.468336, 0.465223", \
                            "0.422202, 0.418418, 0.413589, 0.431475, 0.451473, 0.468138, 0.465036", \
                            "0.422081, 0.418286, 0.413424, 0.43098, 0.451352, 0.468006, 0.466983", \
                            "0.422037, 0.418242, 0.41338, 0.430947, 0.460273, 0.488301, 0.496232" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          index_2 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          values  ( \
                            "0.404657, 0.406329, 0.423236, 0.458997, 0.521136, 0.587774, 0.673893", \
                            "0.40447, 0.406175, 0.422983, 0.455521, 0.520916, 0.587554, 0.673673", \
                            "0.40403, 0.405812, 0.422664, 0.458436, 0.519794, 0.587213, 0.673332", \
                            "0.403909, 0.405603, 0.422422, 0.458216, 0.520355, 0.587004, 0.673112", \
                            "0.403777, 0.405394, 0.422224, 0.458018, 0.520157, 0.586773, 0.672925", \
                            "0.403568, 0.405262, 0.420211, 0.457875, 0.520036, 0.586641, 0.672782", \
                            "0.403447, 0.405218, 0.422125, 0.457809, 0.519992, 0.586597, 0.672793" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          index_2 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          values  ( \
                            "1.01837, 1.0227, 1.02758, 1.01004, 0.987932, 0.972818, 0.976118", \
                            "1.02277, 1.02655, 1.0314, 1.01385, 0.996809, 0.976822, 0.979946", \
                            "1.03701, 1.04075, 1.04435, 1.02774, 1.00572, 0.991067, 0.99418", \
                            "1.07548, 1.07927, 1.08293, 1.0667, 1.04407, 1.02954, 1.03266", \
                            "1.12297, 1.12674, 1.13158, 1.1137, 1.0937, 1.07702, 1.08012", \
                            "1.15495, 1.15874, 1.16359, 1.14605, 1.12567, 1.10902, 1.11213", \
                            "1.18173, 1.18553, 1.19038, 1.17282, 1.15072, 1.13672, 1.1389" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          index_2 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          values  ( \
                            "1.03748, 1.0358, 1.0189, 0.983136, 0.920997, 0.854359, 0.76824", \
                            "1.04125, 1.03956, 1.02275, 0.990209, 0.924803, 0.858165, 0.772057", \
                            "1.05559, 1.05381, 1.03697, 1.0012, 0.93984, 0.87241, 0.786291", \
                            "1.09397, 1.09228, 1.07546, 1.03967, 0.977515, 0.910877, 0.824769", \
                            "1.14138, 1.13978, 1.12295, 1.08714, 1.025, 0.958397, 0.872234", \
                            "1.17346, 1.17176, 1.15682, 1.11915, 1.05699, 0.990385, 0.904244", \
                            "1.20032, 1.19855, 1.18164, 1.14596, 1.08377, 1.01717, 0.930974" \
                          )
                          }
                 }
          }
          pin(GWEN)   {
                  direction            : input;
                  capacitance          : 0.0472523;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          index_2 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          values  ( \
                            "0.557766, 0.563299, 0.577819, 0.612634, 0.662222, 0.710886, 0.75658", \
                            "0.555346, 0.560835, 0.575388, 0.609554, 0.66077, 0.70972, 0.754149", \
                            "0.538923, 0.544445, 0.558052, 0.59378, 0.644259, 0.693121, 0.737704", \
                            "0.505219, 0.510598, 0.525261, 0.5599, 0.607409, 0.660528, 0.703989", \
                            "0.46574, 0.471273, 0.485848, 0.519937, 0.571483, 0.621093, 0.664576", \
                            "0.436029, 0.441529, 0.456071, 0.49093, 0.541376, 0.59136, 0.634832", \
                            "0.410806, 0.416306, 0.430848, 0.465036, 0.515306, 0.564267, 0.609642" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          index_2 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          values  ( \
                            "0.601205, 0.607013, 0.628892, 0.677556, 0.753379, 0.854436, 0.969155", \
                            "0.59818, 0.604307, 0.623986, 0.675455, 0.750915, 0.851994, 0.966031", \
                            "0.582406, 0.587257, 0.60753, 0.658691, 0.736087, 0.835901, 0.950279", \
                            "0.548009, 0.553553, 0.573826, 0.624987, 0.70081, 0.801823, 0.916575", \
                            "0.508585, 0.514767, 0.534413, 0.585585, 0.661397, 0.762421, 0.876458", \
                            "0.479556, 0.484385, 0.50589, 0.55583, 0.631653, 0.732677, 0.847418", \
                            "0.454333, 0.459184, 0.480898, 0.529474, 0.606441, 0.707476, 0.822349" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          index_2 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          values  ( \
                            "0.763851, 0.760056, 0.745734, 0.713911, 0.689986, 0.669889, 0.662409", \
                            "0.77099, 0.767195, 0.751696, 0.721061, 0.694925, 0.67507, 0.669537", \
                            "0.777535, 0.773663, 0.760012, 0.72754, 0.7029, 0.682407, 0.676016", \
                            "0.781451, 0.7777, 0.763719, 0.731478, 0.70939, 0.686774, 0.679943", \
                            "0.794354, 0.790493, 0.776182, 0.744359, 0.719719, 0.699237, 0.692835", \
                            "0.791912, 0.787952, 0.773652, 0.741818, 0.717178, 0.696696, 0.690305", \
                            "0.778503, 0.774279, 0.759968, 0.728156, 0.70422, 0.684123, 0.676632" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          index_2 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          values  ( \
                            "0.451627, 0.44638, 0.423434, 0.376035, 0.301778, 0.204423, 0.096107", \
                            "0.457908, 0.454597, 0.432608, 0.381513, 0.308858, 0.211554, 0.103346", \
                            "0.465146, 0.460471, 0.439087, 0.38984, 0.313346, 0.218595, 0.109692", \
                            "0.469568, 0.464783, 0.443124, 0.393591, 0.31977, 0.221884, 0.113643", \
                            "0.481151, 0.476707, 0.455917, 0.406681, 0.332222, 0.234846, 0.126645", \
                            "0.509982, 0.505879, 0.483043, 0.434379, 0.355993, 0.259362, 0.151749", \
                            "0.556765, 0.552629, 0.530167, 0.481228, 0.402754, 0.306119, 0.198448" \
                          )
                          }
                 }
          }
          bus(WEN)   {
                  bus_type             : Q_BUS;
                  direction            : input;
                  capacitance          : 0.0074375;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          index_2 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          values  ( \
                            "0, 0, 0, 0.01452, 0.040876, 0.059477, 0.068552", \
                            "0, 0, 0, 0.009559, 0.037059, 0.054835, 0.063272", \
                            "0, 0, 0, 0.002332, 0.029744, 0.047718, 0.056364", \
                            "0, 0, 0, 0, 0.02233, 0.041778, 0.050215", \
                            "0, 0, 0, 0, 0.010758, 0.030217, 0.038654", \
                            "0, 0, 0, 0, 0.014619, 0.032813, 0.04125", \
                            "0, 0, 0, 0, 0.026367, 0.045265, 0.053988" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          index_2 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          values  ( \
                            "0.276701, 0.283012, 0.306185, 0.352528, 0.426514, 0.524073, 0.63316", \
                            "0.272008, 0.275593, 0.298251, 0.349173, 0.420981, 0.518155, 0.626978", \
                            "0.266099, 0.269003, 0.291371, 0.34034, 0.417285, 0.510906, 0.620609", \
                            "0.258823, 0.263285, 0.285064, 0.33473, 0.409376, 0.504812, 0.61402", \
                            "0.247888, 0.25227, 0.273448, 0.323235, 0.396605, 0.493768, 0.602525", \
                            "0.249844, 0.254276, 0.277824, 0.325237, 0.3993, 0.496683, 0.605638", \
                            "0.262265, 0.267067, 0.291212, 0.338052, 0.411752, 0.509432, 0.617837" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          index_2 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          values  ( \
                            "0.763851, 0.760056, 0.745734, 0.714208, 0.689986, 0.670989, 0.662409", \
                            "0.77099, 0.767195, 0.751696, 0.721369, 0.695838, 0.678139, 0.669537", \
                            "0.777535, 0.773663, 0.760012, 0.727837, 0.7029, 0.684607, 0.676016", \
                            "0.781682, 0.7777, 0.763719, 0.732182, 0.70939, 0.688952, 0.679943", \
                            "0.794354, 0.790493, 0.776182, 0.744656, 0.719719, 0.701437, 0.692835", \
                            "0.791912, 0.787952, 0.773652, 0.742115, 0.717178, 0.698885, 0.690305", \
                            "0.778503, 0.774279, 0.759968, 0.728431, 0.70422, 0.685212, 0.676632" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          index_2 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          values  ( \
                            "0.451627, 0.44638, 0.423434, 0.377025, 0.301778, 0.204423, 0.096107", \
                            "0.458876, 0.454597, 0.432608, 0.381931, 0.309221, 0.211554, 0.103346", \
                            "0.465146, 0.460471, 0.439087, 0.38984, 0.313346, 0.218595, 0.109692", \
                            "0.469711, 0.464816, 0.443124, 0.394966, 0.320122, 0.221884, 0.113643", \
                            "0.481151, 0.476707, 0.455917, 0.406912, 0.332222, 0.234846, 0.126645", \
                            "0.479578, 0.47487, 0.451539, 0.404888, 0.329626, 0.232315, 0.124017", \
                            "0.465751, 0.461153, 0.437228, 0.391358, 0.316371, 0.218647, 0.110019" \
                          )
                          }
                 }
          }
          bus(A)   {
                  bus_type             : A_BUS;
                  direction            : input;
                  capacitance          : 0.0374446;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          index_2 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          values  ( \
                            "0.497013, 0.491975, 0.490721, 0.51249, 0.539704, 0.578589, 0.600842", \
                            "0.492283, 0.48774, 0.485749, 0.507991, 0.5357, 0.573441, 0.596354", \
                            "0.484847, 0.481558, 0.478214, 0.500379, 0.526086, 0.566852, 0.586454", \
                            "0.47773, 0.474529, 0.471592, 0.494802, 0.520355, 0.560747, 0.581405", \
                            "0.466796, 0.463397, 0.461153, 0.483362, 0.509916, 0.547954, 0.568821", \
                            "0.469755, 0.467621, 0.463694, 0.485496, 0.51238, 0.547734, 0.574255", \
                            "0.482251, 0.477917, 0.475123, 0.497849, 0.524612, 0.564707, 0.585167" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          index_2 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          values  ( \
                            "0.633963, 0.638033, 0.654093, 0.690921, 0.756096, 0.838728, 0.933471", \
                            "0.630047, 0.633072, 0.649187, 0.686213, 0.751641, 0.832601, 0.928653", \
                            "0.622556, 0.62656, 0.640937, 0.678689, 0.744799, 0.825462, 0.921954", \
                            "0.617881, 0.620048, 0.635778, 0.674091, 0.737836, 0.818356, 0.912802", \
                            "0.606584, 0.60973, 0.624657, 0.661199, 0.726473, 0.806707, 0.904805", \
                            "0.609158, 0.611336, 0.627165, 0.665566, 0.728563, 0.810524, 0.906125", \
                            "0.620752, 0.623073, 0.639386, 0.677182, 0.740157, 0.823735, 0.917994" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          index_2 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          values  ( \
                            "0.494197, 0.4983, 0.497101, 0.493339, 0.491788, 0.489423, 0.487487", \
                            "0.499631, 0.503822, 0.502535, 0.498773, 0.497211, 0.494857, 0.49291", \
                            "0.513909, 0.518001, 0.516813, 0.513051, 0.5115, 0.509135, 0.507199", \
                            "0.546766, 0.550957, 0.54967, 0.545908, 0.544346, 0.541992, 0.540045", \
                            "0.59059, 0.594682, 0.593483, 0.589721, 0.58817, 0.585805, 0.583869", \
                            "0.624536, 0.628639, 0.62744, 0.623678, 0.622127, 0.619762, 0.617826", \
                            "0.652366, 0.657712, 0.656414, 0.652652, 0.651101, 0.648736, 0.6468" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          index_2 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          values  ( \
                            "0.507661, 0.503866, 0.486959, 0.470822, 0.466279, 0.470448, 0.476641", \
                            "0.513095, 0.5093, 0.492393, 0.476256, 0.471702, 0.47586, 0.482075", \
                            "0.527373, 0.523578, 0.506671, 0.490534, 0.485991, 0.49016, 0.496353", \
                            "0.56023, 0.556435, 0.539528, 0.523193, 0.518848, 0.523017, 0.52921", \
                            "0.604131, 0.600248, 0.583341, 0.567204, 0.562661, 0.566841, 0.573023", \
                            "0.638, 0.634205, 0.617298, 0.601161, 0.596618, 0.600787, 0.60698", \
                            "0.666974, 0.663179, 0.646272, 0.630135, 0.625592, 0.629761, 0.635954" \
                          )
                          }
                 }
          }
          bus(D)   {
                  bus_type             : Q_BUS;
                  memory_write() {
                          address      : A;
                          clocked_on   : "CLK";
                  }
                  direction            : input;
                  capacitance          : 0.0155975;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          index_2 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          values  ( \
                            "0.463507, 0.469579, 0.482438, 0.487784, 0.478346, 0.457831, 0.412984", \
                            "0.458645, 0.46442, 0.47795, 0.48444, 0.471669, 0.453321, 0.40876", \
                            "0.453145, 0.457699, 0.470778, 0.477444, 0.466092, 0.448129, 0.401643", \
                            "0.445566, 0.45023, 0.464288, 0.470261, 0.460845, 0.441463, 0.394757", \
                            "0.435072, 0.439967, 0.452694, 0.459118, 0.448228, 0.4279, 0.384538", \
                            "0.437976, 0.44176, 0.455191, 0.461725, 0.45221, 0.431827, 0.386672", \
                            "0.448602, 0.452474, 0.468292, 0.472791, 0.461967, 0.442057, 0.399113" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          index_2 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          values  ( \
                            "0.152759, 0.155219, 0.176986, 0.233424, 0.317537, 0.427284, 0.560208", \
                            "0.14737, 0.149119, 0.172106, 0.228546, 0.312686, 0.422543, 0.555379", \
                            "0.140296, 0.142058, 0.16503, 0.22147, 0.305613, 0.41558, 0.548328", \
                            "0.133283, 0.135629, 0.158573, 0.215014, 0.299874, 0.409101, 0.541794", \
                            "0.122808, 0.124603, 0.147544, 0.203985, 0.288125, 0.397947, 0.530816", \
                            "0.124751, 0.127129, 0.150074, 0.206515, 0.292358, 0.400455, 0.533357", \
                            "0.137424, 0.139215, 0.162159, 0.218755, 0.302742, 0.412588, 0.545666" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          index_2 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          values  ( \
                            "0.433675, 0.427977, 0.417934, 0.408419, 0.416878, 0.441507, 0.485199", \
                            "0.438185, 0.432476, 0.422389, 0.412907, 0.421157, 0.445302, 0.488059", \
                            "0.445423, 0.439494, 0.428824, 0.420695, 0.427691, 0.45232, 0.495077", \
                            "0.449394, 0.446875, 0.433356, 0.42548, 0.434214, 0.456896, 0.500764", \
                            "0.46266, 0.45562, 0.446853, 0.438152, 0.445687, 0.471218, 0.512468", \
                            "0.460713, 0.455763, 0.444015, 0.434676, 0.442772, 0.468314, 0.509685", \
                            "0.448492, 0.443432, 0.432069, 0.422598, 0.430826, 0.456181, 0.497728" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          index_2 ("0.0200, 0.0511, 0.1603, 0.3688, 0.6938, 1.1498, 1.7498");
                          values  ( \
                            "0.610742, 0.608597, 0.586509, 0.530101, 0.444983, 0.335962, 0.203633", \
                            "0.615263, 0.613107, 0.591019, 0.534611, 0.449482, 0.34056, 0.208138", \
                            "0.622281, 0.620125, 0.598037, 0.541629, 0.4565, 0.347578, 0.215162", \
                            "0.62854, 0.625768, 0.60368, 0.547272, 0.462143, 0.353232, 0.220803", \
                            "0.639683, 0.637516, 0.615439, 0.55902, 0.473891, 0.36498, 0.232559", \
                            "0.637494, 0.634733, 0.612645, 0.556237, 0.471108, 0.362186, 0.22976", \
                            "0.624943, 0.622776, 0.600688, 0.54428, 0.459162, 0.35024, 0.217817" \
                          )
                          }
                 }
        }
          cell_leakage_power : 0.000177156;
}
}
