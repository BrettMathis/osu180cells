/*
 * Copyright 2022 GlobalFoundries PDK Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 *      Single Port SRAM cell name : gf180mcu_fd_ip_sram__sram128x8m8wm1
 *      Technology                 : GF 180nm 5V Green
 *
 *      ---------
 *      Pin name:
 *      ---------
 *      Input Pins : CLK CEN GWEN WEN[7:0] A[6:0] D[7:0]
 *      Inout Pins:  VDD VSS
 *      Output Pins: Q[7:0]
 *
 *     Revision History: 1.0 (Initial Release: June 20, 2014)
 */

library(gf180mcu_fd_ip_sram__sram128x8m8wm1__ss_125C_1v62) {
        delay_model             : table_lookup;
        revision                : 1.0;
        date                    : "June 20, 2014";
        comment                 : "GF 180nm 5V Green";
        voltage_unit            : "1V";
        time_unit               : "1ns";
        current_unit            : "1mA";
        leakage_power_unit      : "1mW";
        nom_process             : 1;
        nom_temperature         : 125;
        nom_voltage             : 1.62;
        capacitive_load_unit    (1,pf);
        pulling_resistance_unit : "1kohm";

        /* additional header data */
        default_fanout_load            : 1;
        default_inout_pin_cap          : 0.045;
        default_input_pin_cap          : 0.045;
        default_output_pin_cap         : 0;
        default_max_transition         : 11.06;
        default_cell_leakage_power     : 0;

         /* default attributes */
         slew_derate_from_library      : 1.000;
         slew_lower_threshold_pct_fall : 10.000;
         slew_upper_threshold_pct_fall : 90.000;
         slew_lower_threshold_pct_rise : 10.000;
         slew_upper_threshold_pct_rise : 90.000;
         input_threshold_pct_fall      : 50.000;
         input_threshold_pct_rise      : 50.000;
         output_threshold_pct_fall     : 50.000;
         output_threshold_pct_rise     : 50.000;
         default_leakage_power_density : 0;

        /* k-factors */
        k_process_recovery_fall        : 1;
        k_process_recovery_rise        : 1;
        k_process_cell_fall            : 1;
        k_process_cell_leakage_power   : 0;
        k_process_cell_rise            : 1;
        k_process_fall_transition      : 1;
        k_process_hold_fall            : 1;
        k_process_hold_rise            : 1;
        k_process_internal_power       : 0;
        k_process_min_pulse_width_high : 1;
        k_process_min_pulse_width_low  : 1;
        k_process_setup_fall           : 1;
        k_process_setup_rise           : 1;
        k_process_wire_cap             : 0;
        k_process_wire_res             : 0;
        k_process_pin_cap              : 0;
        k_process_rise_transition      : 1;
        k_temp_cell_fall               : 0.000;
        k_temp_cell_rise               : 0.000;
        k_temp_hold_fall               : 0.000;
        k_temp_hold_rise               : 0.000;
        k_temp_min_pulse_width_high    : 0.000;
        k_temp_min_pulse_width_low     : 0.000;
        k_temp_min_period              : 0.000;
        k_temp_rise_propagation        : 0.000;
        k_temp_fall_propagation        : 0.000;
        k_temp_rise_transition         : 0.000;
        k_temp_fall_transition         : 0.000;
        k_temp_recovery_fall           : 0.000;
        k_temp_recovery_rise           : 0.000;
        k_temp_setup_fall              : 0.000;
        k_temp_setup_rise              : 0.000;
        k_volt_cell_fall               : 0.000;
        k_volt_cell_rise               : 0.000;
        k_volt_hold_fall               : 0.000;
        k_volt_hold_rise               : 0.000;
        k_volt_min_pulse_width_high    : 0.000;
        k_volt_min_pulse_width_low     : 0.000;
        k_volt_min_period              : 0.000;
        k_volt_recovery_fall           : 0.000;
        k_volt_recovery_rise           : 0.000;
        k_volt_setup_fall              : 0.000;
        k_volt_setup_rise              : 0.000;
        k_volt_rise_propagation        : 0.000;
        k_volt_fall_propagation        : 0.000;
        k_volt_rise_transition         : 0.000;
        k_volt_fall_transition         : 0.000;

         voltage_map (VDD, 1.62);
         voltage_map (VSS, 0.00);
         operating_conditions(ss_1p62v_125C) {
                process       : 1;
                temperature   : 125;
                voltage       : 1.62;
                tree_type     : balanced_tree;
         }

         default_operating_conditions : ss_1p62v_125C;
         wire_load("Estimate") {
                resistance    : 1.44e-05;
                capacitance   : 0.00018;
                area          : 1.7;
                slope         : 500;
                fanout_length (1,500);
         }
         power_lut_template(power_template) {
            variable_1 : input_transition_time;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(q_delay_template) {
            variable_1 : input_net_transition;
            variable_2 : total_output_net_capacitance;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
                 index_2 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(q_slew_template) {
            variable_1 : total_output_net_capacitance;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(constraint_template) {
            variable_1 : related_pin_transition;
            variable_2 : constrained_pin_transition;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
                 index_2 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }

         library_features(report_delay_calculation);

         type (A_BUS) {
                base_type : array;
                data_type : bit;
                bit_width : 7;
                bit_from  : 6;
                bit_to    : 0;
                downto    : true;
         }
         type (Q_BUS) {
                base_type : array;
                data_type : bit;
                bit_width : 8;
                bit_from  : 7;
                bit_to    : 0;
                downto    : true;
         }
 cell(gf180mcu_fd_ip_sram__sram128x8m8wm1) {
        area             : 116118.5168;
        dont_use         : TRUE;
        dont_touch       : TRUE;
        interface_timing : TRUE;
        memory() {
                type          : ram;
                address_width : 7;
                word_width    : 8;
        }

                 bus(Q)   {
                  bus_type             : Q_BUS;
                  direction            : output;
                  max_capacitance      : 1.058;
                  memory_read() {
                        address        : A;
                  }
                  timing() {
                          related_pin  : "CLK";
                          timing_type  : rising_edge;
                          timing_sense : non_unate;
       		  when : "((!CEN) & (GWEN))";
        	  sdf_cond : "CEN== 1'b0 && GWEN== 1'b1";
                          cell_rise(q_delay_template) {
			  index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
			  index_2 ("0.01, 0.02885, 0.09503, 0.2214, 0.4183, 0.6946, 1.058");
                          values  ( \
                            "36.3012, 36.4872, 36.9324, 37.7292, 38.946, 40.548, 42.6984", \
                            "36.3228, 36.5088, 36.9708, 37.8228, 38.9772, 40.5876, 42.7248", \
                            "36.4884, 36.6816, 37.1496, 37.9788, 39.174, 40.8, 42.9072", \
                            "36.87, 37.0872, 37.5372, 38.3256, 39.4884, 41.1672, 43.2816", \
                            "37.3368, 37.452, 37.9344, 38.742, 39.96, 41.5704, 43.692", \
                            "38.0556, 38.2128, 38.682, 39.5004, 40.6956, 42.348, 44.4576", \
                            "38.7504, 38.868, 39.4068, 40.1988, 41.4156, 43.0032, 45.1512" \
                          )
                          }
                          rise_transition(q_slew_template) {
                          index_1 ("0.01, 0.02885, 0.09503, 0.2214, 0.4183, 0.6946, 1.058");
                          values  ( \
  	                     "1.08058, 1.296, 2.04228, 3.33408, 5.43408, 8.41596, 12.4416" \
                          )

                          }
                          cell_fall(q_delay_template) {
                          index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          index_2 ("0.01, 0.02885, 0.09503, 0.2214, 0.4183, 0.6946, 1.058");
                          values  ( \
                            "38.5848, 38.7552, 39.0852, 39.612, 40.3308, 41.0472, 42.0684", \
                            "38.604, 38.7792, 39.1452, 39.708, 40.2888, 41.088, 42.0504", \
                            "38.76, 38.9304, 39.3, 39.8292, 40.5288, 41.3328, 42.2352", \
                            "39.1392, 39.3, 39.6708, 40.1856, 40.8324, 41.6304, 42.5904", \
                            "39.5964, 39.7488, 40.0908, 40.6116, 41.2548, 42.0744, 43.05", \
                            "40.3428, 40.4796, 40.8528, 41.3736, 42.0264, 42.828, 43.7892", \
                            "41.0712, 41.1792, 41.6124, 42.108, 42.7824, 43.5516, 44.5272" \
                          )
                          }
                          fall_transition(q_slew_template) {
                          index_1 ("0.01, 0.02885, 0.09503, 0.2214, 0.4183, 0.6946, 1.058");
                          values  ( \
                            "1.08054, 1.24728, 1.58604, 2.23044, 3.03156, 4.19556, 5.6412" \
                          )
                          }
                  }
          }
          pin(CLK)   {
                  direction            : input;
                  capacitance          : 0.301689;
                  clock                : true;
                  max_transition       : 11.06;
                  min_pulse_width_high : 13.46046;
                  min_pulse_width_low  : 21.36195;
                  min_period           : 51.96255;

/* WRITE POWER */
             internal_power() {
              when : "!CEN & !GWEN & (!WEN[0] | !WEN[1] | !WEN[2] | !WEN[3] | !WEN[4] | !WEN[5] | !WEN[6] | !WEN[7])";
              rise_power(power_template) {
                index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                values  ("81.5346, 81.5346, 81.5346, 81.5346, 81.5346, 81.5346, 81.5346");
              }
              fall_power(power_template) {
                index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                values  ("81.5346, 81.5346, 81.5346, 81.5346, 81.5346, 81.5346, 81.5346");
              }
             }
/* DISABLED POWER */
             internal_power() {
              when : "CEN";
              rise_power(power_template) {
                index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                values  ("2.99425e-05, 2.99425e-05, 2.99425e-05, 2.99425e-05, 2.99425e-05, 2.99425e-05, 2.99425e-05");
              }
              fall_power(power_template) {
                index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                values  ("2.99425e-05, 2.99425e-05, 2.99425e-05, 2.99425e-05, 2.99425e-05, 2.99425e-05, 2.99425e-05");
              }
             }
/* READ POWER */
             internal_power() {
             when : "!CEN & GWEN";
             rise_power(power_template) {
                index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                values  ("74.767, 74.767, 74.767, 74.767, 74.767, 74.767, 74.767");
              }
              fall_power(power_template) {
                index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                values  ("74.767, 74.767, 74.767, 74.767, 74.767, 74.767, 74.767");
              }
             }
          }

          pg_pin(VDD) {
                  voltage_name     : VDD;
                  pg_type          : primary_power;
          }
          pg_pin(VSS) {
                  voltage_name     : VSS;
                  pg_type          : primary_ground;
          }
          pin(CEN)   {
                  direction            : input;
                  capacitance          : 0.0190207;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          index_2 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          values  ( \
                            "3.62098, 3.56279, 3.59986, 3.97837, 4.68314, 5.84155, 7.3194", \
                            "3.56147, 3.50515, 3.53661, 3.91875, 4.60977, 5.78248, 7.27485", \
                            "3.34103, 3.28152, 3.33069, 3.69116, 4.38086, 5.57161, 7.03582", \
                            "2.97913, 2.92985, 2.96901, 3.31089, 4.05119, 5.20421, 6.70703", \
                            "2.90136, 2.8446, 2.88552, 3.23081, 3.95186, 5.10994, 6.54544", \
                            "2.89333, 2.84031, 2.88486, 3.25182, 3.94691, 5.1062, 6.54324", \
                            "2.86748, 2.84075, 2.88772, 3.25996, 3.95318, 5.07078, 6.5439" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          index_2 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          values  ( \
                            "2.45619, 2.48776, 2.69104, 3.12664, 3.84428, 4.87762, 6.22292", \
                            "2.40427, 2.42858, 2.63516, 3.06669, 3.78004, 4.81866, 6.16396", \
                            "2.18053, 2.21243, 2.41637, 2.85043, 3.56191, 4.6057, 5.94781", \
                            "2.16304, 2.20187, 2.40042, 2.83492, 3.55025, 4.59503, 5.91426", \
                            "2.16216, 2.2011, 2.40218, 2.83525, 3.55333, 4.58513, 5.90304", \
                            "2.15996, 2.1989, 2.4002, 2.83294, 3.5464, 4.58304, 5.90084", \
                            "2.16931, 2.2, 2.39811, 2.83382, 3.54706, 4.58689, 5.88412" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          index_2 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          values  ( \
                            "8.11228, 8.17036, 8.13043, 7.76281, 7.06783, 5.90557, 4.43828", \
                            "8.17168, 8.22877, 8.18477, 7.8188, 7.12415, 5.96464, 4.48041", \
                            "8.36484, 8.44063, 8.38002, 8.00877, 7.31434, 6.1545, 4.69612", \
                            "8.75028, 8.80594, 8.76227, 8.4084, 7.70429, 6.54016, 5.0479", \
                            "9.37662, 9.43349, 9.39257, 9.04728, 8.32623, 7.16815, 5.73265", \
                            "10.2067, 10.2597, 10.2151, 9.84819, 9.1531, 7.99381, 6.55677", \
                            "11.1792, 11.2059, 11.1589, 10.7867, 10.0935, 8.97589, 7.50277" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          index_2 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          values  ( \
                            "8.84961, 8.81287, 8.61487, 8.17839, 7.46009, 6.42873, 5.11093", \
                            "8.90208, 8.87194, 8.67064, 8.23845, 7.52433, 6.48758, 5.16978", \
                            "9.09909, 9.0618, 8.86314, 8.42831, 7.71628, 6.67458, 5.35964", \
                            "9.48618, 9.44735, 9.2488, 8.8143, 8.09897, 7.05419, 5.73496", \
                            "10.1159, 10.077, 9.87591, 9.44284, 8.72476, 7.69285, 6.37505", \
                            "10.94, 10.9011, 10.6998, 10.2671, 9.55361, 8.51697, 7.19917", \
                            "11.8778, 11.847, 11.649, 11.2128, 10.4996, 9.45978, 8.16255" \
                          )
                          }
                 }
          }
          pin(GWEN)   {
                  direction            : input;
                  capacitance          : 0.0456629;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          index_2 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          values  ( \
                            "4.15745, 4.21234, 4.39142, 4.80942, 5.41222, 6.20037, 7.14615", \
                            "4.10762, 4.15481, 4.33059, 4.75145, 5.35524, 6.1446, 7.10127", \
                            "3.89884, 3.95428, 4.13325, 4.53552, 5.15493, 5.94385, 6.89986", \
                            "3.5343, 3.59062, 3.76343, 4.18627, 4.7454, 5.57898, 6.53202", \
                            "2.90631, 2.96043, 3.13467, 3.5596, 4.10586, 4.94978, 5.90645", \
                            "2.22233, 2.28338, 2.45619, 2.87859, 3.48293, 4.2834, 5.22786", \
                            "1.50601, 1.5653, 1.74031, 2.1626, 2.76309, 3.57148, 4.51055" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          index_2 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          values  ( \
                            "5.59141, 5.64124, 5.84705, 6.32764, 7.02207, 8.04529, 9.40863", \
                            "5.53553, 5.58481, 5.79205, 6.2227, 6.96553, 7.98886, 9.3522", \
                            "5.33621, 5.38384, 5.58998, 6.07013, 6.73211, 7.76644, 9.15167", \
                            "4.96804, 5.01908, 5.247, 5.70581, 6.4339, 7.42324, 8.80143", \
                            "4.34698, 4.38988, 4.59778, 5.07617, 5.77093, 6.79404, 8.15716", \
                            "3.65068, 3.71184, 3.91897, 4.39813, 5.09762, 6.11589, 7.48627", \
                            "2.94602, 2.99464, 3.23466, 3.68093, 4.38053, 5.37724, 6.78546" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          index_2 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          values  ( \
                            "7.00678, 6.96619, 6.78623, 6.39133, 5.81097, 5.21301, 4.52221", \
                            "6.66908, 6.62838, 6.44083, 6.04626, 5.52739, 4.87564, 4.18528", \
                            "6.13635, 6.09565, 5.9004, 5.51265, 4.95044, 4.34269, 3.65695", \
                            "5.68942, 5.64883, 5.46117, 5.06715, 4.46369, 3.89565, 3.24797", \
                            "5.98576, 5.94495, 5.76301, 5.37779, 4.84473, 4.19188, 3.50163", \
                            "6.50694, 6.46503, 6.27319, 5.89039, 5.31982, 4.71306, 4.03337", \
                            "7.13625, 7.09577, 6.90833, 6.51354, 5.94979, 5.30299, 4.65234" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          index_2 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          values  ( \
                            "4.01181, 3.93063, 3.7312, 3.29142, 2.56333, 1.55595, 0.19853", \
                            "3.6762, 3.59326, 3.39306, 2.97286, 2.22783, 1.21731, 0", \
                            "3.13071, 3.05998, 2.8644, 2.41901, 1.74009, 0.682506, 0", \
                            "2.69665, 2.6136, 2.39657, 1.97175, 1.20443, 0.237999, 0", \
                            "2.99167, 2.90928, 2.70974, 2.26809, 1.54484, 0.532301, 0", \
                            "3.49492, 3.4298, 3.2296, 2.79675, 2.06085, 1.05389, 0", \
                            "4.14315, 4.06021, 3.84087, 3.42001, 2.68994, 1.68267, 0.316868" \
                          )
                          }
                 }
          }
          bus(WEN)   {
                  bus_type             : Q_BUS;
                  direction            : input;
                  capacitance          : 0.00749419;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          index_2 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          values  ( \
                            "0, 0, 0, 0, 0, 0, 0", \
                            "0, 0, 0, 0, 0, 0, 0", \
                            "0, 0, 0, 0, 0, 0, 0.481921", \
                            "0, 0, 0, 0, 0, 0.26456, 0.898744", \
                            "0, 0, 0, 0, 0, 0, 0.641531", \
                            "0, 0, 0, 0, 0, 0, 0.125981", \
                            "0, 0, 0, 0, 0, 0, 0" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          index_2 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          values  ( \
                            "0.041338, 0.114998, 0.32163, 0.764071, 1.48852, 2.49403, 3.84747", \
                            "0.381711, 0.456423, 0.65802, 1.08028, 1.82578, 2.8325, 4.18253", \
                            "0.912769, 0.985314, 1.18902, 1.62668, 2.31396, 3.36479, 4.71163", \
                            "1.34585, 1.43825, 1.65704, 2.07614, 2.85142, 3.81865, 5.15383", \
                            "1.06218, 1.14215, 1.342, 1.78574, 2.50679, 3.52132, 4.86783", \
                            "0.546315, 0.619278, 0.822536, 1.26147, 1.98462, 2.99343, 4.35644", \
                            "0, 0, 0.214556, 0.639452, 1.36378, 2.37215, 3.72559" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          index_2 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          values  ( \
                            "7.02834, 6.96861, 6.78623, 6.40387, 5.82604, 5.21301, 4.56467", \
                            "6.69075, 6.63135, 6.44083, 6.06617, 5.52739, 4.8895, 4.22345", \
                            "6.15791, 6.09851, 5.90678, 5.53333, 4.96287, 4.35655, 3.68929", \
                            "5.71131, 5.6518, 5.46403, 5.08662, 4.5089, 3.90995, 3.24797", \
                            "6.00732, 5.94781, 5.76301, 5.38274, 4.84473, 4.23049, 3.54002", \
                            "6.52718, 6.46767, 6.27319, 5.90271, 5.32499, 4.71306, 4.05988", \
                            "7.15803, 7.09874, 6.90965, 6.52564, 5.95573, 5.36602, 4.68886" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          index_2 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          values  ( \
                            "4.02402, 3.98992, 3.76321, 3.33091, 2.57587, 1.55595, 0.237565", \
                            "3.68797, 3.65255, 3.42518, 3.00278, 2.23443, 1.21731, 0", \
                            "3.14292, 3.11938, 2.89377, 2.4596, 1.74779, 0.717332, 0", \
                            "2.70908, 2.67322, 2.43408, 2.01256, 1.20443, 0.237999, 0", \
                            "3.00377, 2.96879, 2.74208, 2.30879, 1.55166, 0.532301, 0", \
                            "3.50207, 3.4892, 3.26172, 2.82975, 2.0647, 1.05389, 0", \
                            "4.15525, 4.11961, 3.87629, 3.45972, 2.69379, 1.71765, 0.356587" \
                          )
                          }
                 }
          }
          bus(A)   {
                  bus_type             : A_BUS;
                  direction            : input;
                  capacitance          : 0.0426026;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          index_2 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          values  ( \
                            "3.57434, 3.54926, 3.5706, 3.96286, 4.69568, 5.81229, 7.25186", \
                            "3.51406, 3.48898, 3.5112, 3.90258, 4.63529, 5.75201, 7.19565", \
                            "3.30176, 3.27679, 3.29791, 3.69061, 4.39571, 5.51353, 6.94958", \
                            "3.70007, 3.66278, 3.71382, 4.09948, 4.80711, 5.93725, 7.39288", \
                            "3.40307, 3.36864, 3.42155, 3.81337, 4.50923, 5.63365, 7.08829", \
                            "2.88409, 2.85989, 2.88871, 3.28933, 3.99047, 5.03822, 6.59659", \
                            "2.25071, 2.23212, 2.27282, 2.66057, 3.37887, 4.49889, 5.96167" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          index_2 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          values  ( \
                            "2.98485, 3.03985, 3.24236, 3.67301, 4.41309, 5.45281, 6.79547", \
                            "3.33553, 3.37084, 3.56675, 4.01401, 4.75046, 5.78853, 7.13581", \
                            "3.84494, 3.89675, 4.09772, 4.5474, 5.27197, 6.32489, 7.66194", \
                            "4.30529, 4.34951, 4.55587, 4.99279, 5.72319, 6.75884, 8.10579", \
                            "4.00048, 4.05438, 4.26118, 4.69634, 5.43389, 6.46954, 7.8221", \
                            "3.48128, 3.5233, 3.73384, 4.17527, 4.89698, 5.95386, 7.27067", \
                            "2.86088, 2.89113, 3.11047, 3.54651, 4.27603, 5.34424, 6.655" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          index_2 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          values  ( \
                            "2.68015, 2.70633, 2.66739, 2.25764, 1.55628, 0.625603, 0", \
                            "2.75451, 2.78069, 2.74175, 2.332, 1.63064, 0.699963, 0", \
                            "2.96846, 2.99453, 2.9557, 2.54595, 1.84459, 0.938113, 0", \
                            "3.32992, 3.35599, 3.31705, 2.90719, 2.20583, 1.27516, 0.252237", \
                            "3.96099, 3.98706, 3.94801, 3.53826, 2.83701, 1.9063, 0.883388", \
                            "4.76707, 4.79314, 4.7542, 4.34445, 3.64309, 2.75011, 1.57949", \
                            "5.71164, 5.73749, 5.69877, 5.28913, 4.58799, 3.65728, 2.63439" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          index_2 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          values  ( \
                            "3.23818, 3.19297, 2.98386, 2.54749, 1.99881, 1.33496, 0.581691", \
                            "3.31243, 3.26722, 3.05833, 2.6224, 2.07317, 1.40932, 0.65593", \
                            "3.52638, 3.48106, 3.27206, 2.83624, 2.28701, 1.62316, 0.869792", \
                            "3.88762, 3.84241, 3.63341, 3.19759, 2.64836, 1.98451, 1.23123", \
                            "4.5188, 4.47359, 4.26448, 3.82866, 3.27943, 2.61558, 1.86241", \
                            "5.32488, 5.27978, 5.07067, 4.63485, 4.08562, 3.42177, 2.66849", \
                            "6.26989, 6.22457, 6.01568, 5.57975, 5.03052, 4.36667, 3.61339" \
                          )
                          }
                 }
          }
          bus(D)   {
                  bus_type             : Q_BUS;
                  memory_write() {
                          address      : A;
                          clocked_on   : "CLK";
                  }
                  direction            : input;
                  capacitance          : 0.017182;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          index_2 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          values  ( \
                            "3.29692, 3.34763, 3.55388, 3.94361, 4.31805, 4.75057, 5.11786", \
                            "3.61768, 3.67884, 3.89125, 4.24666, 4.65773, 5.08651, 5.49549", \
                            "4.18715, 4.21927, 4.41375, 4.78379, 5.17858, 5.58734, 5.9763", \
                            "4.59701, 4.64552, 4.83054, 5.23314, 5.6155, 6.06287, 6.47284", \
                            "4.29572, 4.37162, 4.57699, 4.95682, 5.32378, 5.76499, 6.14647", \
                            "3.76838, 3.83295, 4.02655, 4.42497, 4.79391, 5.24557, 5.64047", \
                            "3.14743, 3.20738, 3.41946, 3.80094, 4.15019, 4.5914, 4.95242" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          index_2 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          values  ( \
                            "0, 0, 0, 0, 0, 0.769835, 2.02796", \
                            "0, 0, 0, 0, 0.136927, 1.10628, 2.36445", \
                            "0, 0, 0, 0, 0.669856, 1.63922, 2.8974", \
                            "0, 0, 0, 0.373835, 1.1146, 2.08395, 3.36655", \
                            "0, 0, 0, 0.0803, 0.819049, 1.78926, 3.04744", \
                            "0, 0, 0, 0, 0.299231, 1.26853, 2.53803", \
                            "0, 0, 0, 0, 0, 0.639089, 1.89574" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          index_2 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          values  ( \
                            "3.14259, 3.09045, 2.90532, 2.53352, 2.13796, 1.70522, 1.33892", \
                            "2.81754, 2.76067, 2.57323, 2.19835, 1.79916, 1.3706, 0.984731", \
                            "2.277, 2.21551, 2.03005, 1.65297, 1.26526, 0.835032, 0.462715", \
                            "1.84954, 1.78541, 1.59104, 1.21589, 0.82929, 0.395263, 0.029381", \
                            "2.13334, 2.08142, 1.89585, 1.52042, 1.12719, 0.693363, 0.326218", \
                            "2.65716, 2.60216, 2.40031, 2.02279, 1.64219, 1.20489, 0.835758", \
                            "3.28284, 3.23092, 3.02643, 2.68279, 2.27601, 1.84833, 1.4773" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          index_2 ("0.02, 0.2186, 0.9159, 2.247, 4.322, 7.233, 11.06");
                          values  ( \
                            "5.97344, 5.97135, 5.80987, 5.38131, 4.64321, 3.6575, 2.39965", \
                            "5.63871, 5.63739, 5.47558, 5.04702, 4.30892, 3.32321, 2.06547", \
                            "5.10477, 5.10092, 4.93911, 4.51055, 3.77234, 2.78663, 1.52889", \
                            "4.66378, 4.66169, 4.49977, 4.07121, 3.333, 2.34729, 1.08629", \
                            "4.96364, 4.96023, 4.79798, 4.36942, 3.63132, 2.6455, 1.38776", \
                            "5.47338, 5.47173, 5.30992, 4.88136, 4.14326, 3.15744, 1.8997", \
                            "6.10687, 6.10324, 5.94121, 5.51265, 4.77455, 3.78873, 2.53099" \
                          )
                          }
                 }
        }
          cell_leakage_power : 2.994246e-05;
}
}
